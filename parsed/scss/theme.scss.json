{"theme.scss":"/*! Theme: Capacity v1.12.2 */\r\n// Libraries\r\n/* scss-combine:../../node_modules/normalize.scss/normalize */\r\n/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */\r\n\r\n/**\r\n * 1. Set default font family to sans-serif.\r\n * 2. Prevent iOS text size adjust after orientation change, without disabling\r\n *    user zoom.\r\n */\r\n\r\nhtml {\r\n  font-family: sans-serif; /* 1 */\r\n  -ms-text-size-adjust: 100%; /* 2 */\r\n  -webkit-text-size-adjust: 100%; /* 2 */\r\n}\r\n\r\n/**\r\n * Remove default margin.\r\n */\r\n\r\nbody {\r\n  margin: 0;\r\n}\r\n\r\n/* HTML5 display definitions\r\n   ========================================================================== */\r\n\r\n/**\r\n * Correct `block` display not defined for any HTML5 element in IE 8/9.\r\n * Correct `block` display not defined for `details` or `summary` in IE 10/11\r\n * and Firefox.\r\n * Correct `block` display not defined for `main` in IE 11.\r\n */\r\n\r\narticle,\r\naside,\r\ndetails,\r\nfigcaption,\r\nfigure,\r\nfooter,\r\nheader,\r\nhgroup,\r\nmain,\r\nmenu,\r\nnav,\r\nsection,\r\nsummary {\r\n  display: block;\r\n}\r\n\r\n/**\r\n * 1. Correct `inline-block` display not defined in IE 8/9.\r\n * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.\r\n */\r\n\r\naudio,\r\ncanvas,\r\nprogress,\r\nvideo {\r\n  display: inline-block; /* 1 */\r\n  vertical-align: baseline; /* 2 */\r\n}\r\n\r\n/**\r\n * Prevent modern browsers from displaying `audio` without controls.\r\n * Remove excess height in iOS 5 devices.\r\n */\r\n\r\naudio:not([controls]) {\r\n  display: none;\r\n  height: 0;\r\n}\r\n\r\n/**\r\n * Address `[hidden]` styling not present in IE 8/9/10.\r\n * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.\r\n */\r\n\r\n[hidden],\r\ntemplate {\r\n  display: none;\r\n}\r\n\r\n/* Links\r\n   ========================================================================== */\r\n\r\n/**\r\n * Remove the gray background color from active links in IE 10.\r\n */\r\n\r\na {\r\n  background-color: transparent;\r\n}\r\n\r\n/**\r\n * Improve readability when focused and also mouse hovered in all browsers.\r\n */\r\n\r\na:active,\r\na:hover {\r\n  outline: 0;\r\n}\r\n\r\n/* Text-level semantics\r\n   ========================================================================== */\r\n\r\n/**\r\n * Address styling not present in IE 8/9/10/11, Safari, and Chrome.\r\n */\r\n\r\nabbr[title] {\r\n  border-bottom: 1px dotted;\r\n}\r\n\r\n/**\r\n * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.\r\n */\r\n\r\nb,\r\nstrong {\r\n  font-weight: bold;\r\n}\r\n\r\n/**\r\n * Address styling not present in Safari and Chrome.\r\n */\r\n\r\ndfn {\r\n  font-style: italic;\r\n}\r\n\r\n/**\r\n * Address variable `h1` font-size and margin within `section` and `article`\r\n * contexts in Firefox 4+, Safari, and Chrome.\r\n */\r\n\r\nh1 {\r\n  font-size: 2em;\r\n  margin: 0.67em 0;\r\n}\r\n\r\n/**\r\n * Address styling not present in IE 8/9.\r\n */\r\n\r\nmark {\r\n  background: #ff0;\r\n  color: #000;\r\n}\r\n\r\n/**\r\n * Address inconsistent and variable font size in all browsers.\r\n */\r\n\r\nsmall {\r\n  font-size: 80%;\r\n}\r\n\r\n/**\r\n * Prevent `sub` and `sup` affecting `line-height` in all browsers.\r\n */\r\n\r\nsub,\r\nsup {\r\n  font-size: 75%;\r\n  line-height: 0;\r\n  position: relative;\r\n  vertical-align: baseline;\r\n}\r\n\r\nsup {\r\n  top: -0.5em;\r\n}\r\n\r\nsub {\r\n  bottom: -0.25em;\r\n}\r\n\r\n/* Embedded content\r\n   ========================================================================== */\r\n\r\n/**\r\n * Remove border when inside `a` element in IE 8/9/10.\r\n */\r\n\r\nimg {\r\n  border: 0;\r\n}\r\n\r\n/**\r\n * Correct overflow not hidden in IE 9/10/11.\r\n */\r\n\r\nsvg:not(:root) {\r\n  overflow: hidden;\r\n}\r\n\r\n/* Grouping content\r\n   ========================================================================== */\r\n\r\n/**\r\n * Address margin not present in IE 8/9 and Safari.\r\n */\r\n\r\nfigure {\r\n  margin: 1em 40px;\r\n}\r\n\r\n/**\r\n * Address differences between Firefox and other browsers.\r\n */\r\n\r\nhr {\r\n  -moz-box-sizing: content-box;\r\n  box-sizing: content-box;\r\n  height: 0;\r\n}\r\n\r\n/**\r\n * Contain overflow in all browsers.\r\n */\r\n\r\npre {\r\n  overflow: auto;\r\n}\r\n\r\n/**\r\n * Address odd `em`-unit font size rendering in all browsers.\r\n */\r\n\r\ncode,\r\nkbd,\r\npre,\r\nsamp {\r\n  font-family: monospace, monospace;\r\n  font-size: 1em;\r\n}\r\n\r\n/* Forms\r\n   ========================================================================== */\r\n\r\n/**\r\n * Known limitation: by default, Chrome and Safari on OS X allow very limited\r\n * styling of `select`, unless a `border` property is set.\r\n */\r\n\r\n/**\r\n * 1. Correct color not being inherited.\r\n *    Known issue: affects color of disabled elements.\r\n * 2. Correct font properties not being inherited.\r\n * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.\r\n */\r\n\r\nbutton,\r\ninput,\r\noptgroup,\r\nselect,\r\ntextarea {\r\n  color: inherit; /* 1 */\r\n  font: inherit; /* 2 */\r\n  margin: 0; /* 3 */\r\n}\r\n\r\n/**\r\n * Address `overflow` set to `hidden` in IE 8/9/10/11.\r\n */\r\n\r\nbutton {\r\n  overflow: visible;\r\n}\r\n\r\n/**\r\n * Address inconsistent `text-transform` inheritance for `button` and `select`.\r\n * All other form control elements do not inherit `text-transform` values.\r\n * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.\r\n * Correct `select` style inheritance in Firefox.\r\n */\r\n\r\nbutton,\r\nselect {\r\n  text-transform: none;\r\n}\r\n\r\n/**\r\n * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`\r\n *    and `video` controls.\r\n * 2. Correct inability to style clickable `input` types in iOS.\r\n * 3. Improve usability and consistency of cursor style between image-type\r\n *    `input` and others.\r\n */\r\n\r\nbutton,\r\nhtml input[type=\"button\"], /* 1 */\r\ninput[type=\"reset\"],\r\ninput[type=\"submit\"] {\r\n  -webkit-appearance: button; /* 2 */\r\n  cursor: pointer; /* 3 */\r\n}\r\n\r\n/**\r\n * Re-set default cursor for disabled elements.\r\n */\r\n\r\nbutton[disabled],\r\nhtml input[disabled] {\r\n  cursor: default;\r\n}\r\n\r\n/**\r\n * Remove inner padding and border in Firefox 4+.\r\n */\r\n\r\nbutton::-moz-focus-inner,\r\ninput::-moz-focus-inner {\r\n  border: 0;\r\n  padding: 0;\r\n}\r\n\r\n/**\r\n * Address Firefox 4+ setting `line-height` on `input` using `!important` in\r\n * the UA stylesheet.\r\n */\r\n\r\ninput {\r\n  line-height: normal;\r\n}\r\n\r\n/**\r\n * It's recommended that you don't attempt to style these elements.\r\n * Firefox's implementation doesn't respect box-sizing, padding, or width.\r\n *\r\n * 1. Address box sizing set to `content-box` in IE 8/9/10.\r\n * 2. Remove excess padding in IE 8/9/10.\r\n */\r\n\r\ninput[type=\"checkbox\"],\r\ninput[type=\"radio\"] {\r\n  box-sizing: border-box; /* 1 */\r\n  padding: 0; /* 2 */\r\n}\r\n\r\n/**\r\n * Fix the cursor style for Chrome's increment/decrement buttons. For certain\r\n * `font-size` values of the `input`, it causes the cursor style of the\r\n * decrement button to change from `default` to `text`.\r\n */\r\n\r\ninput[type=\"number\"]::-webkit-inner-spin-button,\r\ninput[type=\"number\"]::-webkit-outer-spin-button {\r\n  height: auto;\r\n}\r\n\r\n/**\r\n * 1. Address `appearance` set to `searchfield` in Safari and Chrome.\r\n * 2. Address `box-sizing` set to `border-box` in Safari and Chrome\r\n *    (include `-moz` to future-proof).\r\n */\r\n\r\ninput[type=\"search\"] {\r\n  -webkit-appearance: textfield; /* 1 */\r\n  -moz-box-sizing: content-box;\r\n  -webkit-box-sizing: content-box; /* 2 */\r\n  box-sizing: content-box;\r\n}\r\n\r\n/**\r\n * Remove inner padding and search cancel button in Safari and Chrome on OS X.\r\n * Safari (but not Chrome) clips the cancel button when the search input has\r\n * padding (and `textfield` appearance).\r\n */\r\n\r\ninput[type=\"search\"]::-webkit-search-cancel-button,\r\ninput[type=\"search\"]::-webkit-search-decoration {\r\n  -webkit-appearance: none;\r\n}\r\n\r\n/**\r\n * Define consistent border, margin, and padding.\r\n */\r\n\r\nfieldset {\r\n  border: 1px solid #c0c0c0;\r\n  margin: 0 2px;\r\n  padding: 0.35em 0.625em 0.75em;\r\n}\r\n\r\n/**\r\n * 1. Correct `color` not being inherited in IE 8/9/10/11.\r\n * 2. Remove padding so people aren't caught out if they zero out fieldsets.\r\n */\r\n\r\nlegend {\r\n  border: 0; /* 1 */\r\n  padding: 0; /* 2 */\r\n}\r\n\r\n/**\r\n * Remove default vertical scrollbar in IE 8/9/10/11.\r\n */\r\n\r\ntextarea {\r\n  overflow: auto;\r\n}\r\n\r\n/**\r\n * Don't inherit the `font-weight` (applied by a rule above).\r\n * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.\r\n */\r\n\r\noptgroup {\r\n  font-weight: bold;\r\n}\r\n\r\n/* Tables\r\n   ========================================================================== */\r\n\r\n/**\r\n * Remove most spacing between table cells.\r\n */\r\n\r\ntable {\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n}\r\n\r\ntd,\r\nth {\r\n  padding: 0;\r\n}\r\n\r\n/* scss-combine:../../node_modules/bc-baseline/baseline */\r\n/* scss-combine:lib/extends */\r\n%clearfix {\r\n  *zoom: 1;\r\n\r\n  &:before,\r\n  &:after {\r\n    display: table;\r\n    content: \"\";\r\n  }\r\n\r\n  &:after {\r\n    clear: both;\r\n  }\r\n}\r\n\r\n%font-smoothing {\r\n  -moz-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  -webkit-font-smoothing: antialiased;\r\n}\r\n\r\n/* scss-combine:lib/mixins */\r\n@mixin media($max: false, $min: false) {\r\n  @if $max {\r\n    @if $min {\r\n      @media screen and (max-width: $max - 1) and (min-width: $min) { @content; }\r\n    } @else {\r\n      @media screen and (max-width: $max - 1) { @content; }\r\n    }\r\n  } @else {\r\n    @media screen and (min-width: $min) { @content; }\r\n  }\r\n}\r\n\r\n@mixin hover($color, $property: color) {\r\n  @if lightness($color) > 10% {\r\n    #{$property}: darken($color,8%);\r\n  } @else {\r\n    #{$property}: lighten($color,10%);\r\n  }\r\n}\r\n\r\n@mixin button-hover($color, $property: color) {\r\n  @if lightness($color) > 20% {\r\n    #{$property}: darken($color,5%);\r\n  } @else {\r\n    #{$property}: lighten($color,6%);\r\n  }\r\n}\r\n\r\n@mixin retina {\r\n  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\r\n    @content;\r\n  }\r\n}\r\n\r\n/* scss-combine:lib/text-inputs */\r\n// https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/addons/_text-inputs.scss\r\n\r\n@function assign-inputs($inputs, $pseudo: null) {\r\n  $list: ();\r\n\r\n  @each $input in $inputs {\r\n    $input: unquote($input);\r\n    $input: if($pseudo, $input + \":\" + $pseudo, $input);\r\n    $list: append($list, $input, comma);\r\n  }\r\n\r\n  @return $list;\r\n}\r\n\r\n\r\n$text-inputs-list: 'input[type=\"color\"]',\r\n                  'input[type=\"date\"]',\r\n                  'input[type=\"datetime\"]',\r\n                  'input[type=\"datetime-local\"]',\r\n                  'input[type=\"email\"]',\r\n                  'input[type=\"month\"]',\r\n                  'input[type=\"number\"]',\r\n                  'input[type=\"password\"]',\r\n                  'input[type=\"search\"]',\r\n                  'input[type=\"tel\"]',\r\n                  'input[type=\"text\"]',\r\n                  'input[type=\"time\"]',\r\n                  'input[type=\"url\"]',\r\n                  'input[type=\"week\"]',\r\n                  'input:not([type])',\r\n                  'textarea';\r\n\r\n$all-text-inputs:        assign-inputs($text-inputs-list);\r\n$all-text-inputs-active: assign-inputs($text-inputs-list, active);\r\n$all-text-inputs-focus:  assign-inputs($text-inputs-list, focus);\r\n$all-text-inputs-hover:  assign-inputs($text-inputs-list, hover);\r\n\r\n\r\n/* scss-combine:styles/general */\r\n// scss-lint:disable VariableForProperty ColorVariable\r\n\r\n// Box model\r\n// See: http://www.paulirish.com/2012/box-sizing-border-box-ftw/\r\n\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\n*,\r\n*:before,\r\n*:after {\r\n  box-sizing: inherit;\r\n}\r\n\r\n// - Links\r\n\r\na {\r\n  text-decoration: none;\r\n}\r\n\r\n// - Headers\r\n\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6 {\r\n  line-height: 1.25;\r\n}\r\n\r\n// - Basic elements\r\n\r\nimg {\r\n  max-width: 100%;\r\n}\r\n\r\nul,\r\nol,\r\ndl {\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\nul {\r\n  list-style: outside none;\r\n}\r\n\r\nol {\r\n  list-style: outside decimal;\r\n}\r\n\r\nli {\r\n\r\n}\r\n\r\nhr {\r\n  height: 2px;\r\n  border: 0;\r\n}\r\n\r\nblockquote {\r\n  > *:first-child {\r\n    margin-top: 0;\r\n  }\r\n\r\n  > *:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n}\r\n\r\nfigure {\r\n  margin: 0;\r\n}\r\n\r\niframe {\r\n  max-width: 100%;\r\n  border: 0;\r\n}\r\n\r\npre {\r\n  padding: 1em;\r\n  background: #fafafa;\r\n}\r\n\r\n.show-for-sr {\r\n  // scss-lint:disable ImportantRule\r\n  position: absolute !important;\r\n  width: 1px;\r\n  height: 1px;\r\n  overflow: hidden;\r\n  clip: rect(1px, 1px, 1px, 1px);\r\n}\r\n\r\n/* scss-combine:styles/button */\r\n.button {\r\n  display: inline-block;\r\n  line-height: normal;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  border: 0;\r\n  border-radius: 0;\r\n  -webkit-appearance: none;\r\n\r\n  & + & {\r\n    margin-left: 5px;\r\n  }\r\n}\r\n\r\n/* scss-combine:styles/form */\r\n// scss-lint:disable VariableForProperty ColorVariable\r\n\r\n\r\n.form-fieldset {\r\n  padding: 0;\r\n  margin: 0;\r\n  border: 0;\r\n}\r\n\r\n// - Fields, a wrapper for a label and input\r\n\r\n.form-field {}\r\n\r\n// - Labels\r\n\r\n// <label class=\"form-label\">\r\n//   <div class=\"form-label-text\">Label</div>\r\n//   ... inputs ...\r\n// </label>\r\n.form-label {\r\n  display: block;\r\n}\r\n\r\n.form-label-text,\r\n.form-label-text-inline {\r\n  display: inline-block;\r\n}\r\n\r\n// - Inputs\r\n\r\n// text, email, password, search, telephone, tel, number, textarea, select\r\n.form-input {\r\n  display: block;\r\n  border: 1px solid;\r\n  border-color: inherit;\r\n  border-radius: 0;\r\n  box-sizing: border-box;\r\n\r\n  &::placeholder { opacity: 0.8; }\r\n}\r\n\r\ntextarea.form-input { resize: vertical; }\r\n\r\n#{$all-text-inputs} {\r\n  &.form-input {\r\n    -webkit-appearance: none;\r\n  }\r\n}\r\n\r\n// Wrapper for checkbox and radio inputs\r\n// <div class=\"form-field form-inline\">\r\n//   <label class=\"form-label\">\r\n//     <span class=\"form-label-text\">Check Me</span>\r\n//     <input class=\"form-input\" type=\"checkbox\">\r\n//   </label>\r\n// </div>\r\n.form-inline {\r\n  .form-label-text {\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n  }\r\n\r\n  .form-input {\r\n    display: inline-block;\r\n  }\r\n}\r\n\r\n/* scss-combine:styles/table */\r\ntable {\r\n  margin: 1em 0;\r\n  background: transparent;\r\n  border: 1px solid;\r\n  border-collapse: separate;\r\n  border-top: 0;\r\n  border-color: inherit;\r\n\r\n  &.table-clean {\r\n    border: 0;\r\n    border-radius: 0;\r\n  }\r\n}\r\n\r\ntd,\r\nth {\r\n  padding: 20px;\r\n  border-top: 1px solid;\r\n  border-top-color: inherit;\r\n\r\n  .table-clean & {\r\n    border: 0;\r\n  }\r\n}\r\n\r\nth {\r\n  font-weight: bold;\r\n}\r\n\r\ntd {\r\n  border-left: 1px solid;\r\n  border-left-color: inherit;\r\n\r\n  &:first-child {\r\n    border-left: 0;\r\n  }\r\n}\r\n\r\n\r\n/* scss-combine:../../node_modules/susy/sass/susy */\r\n// Susy\r\n// ====\r\n\r\n/* scss-combine:susy/language/susy */\r\n// Susy Next Syntax\r\n// ================\r\n\r\n$susy-version: 2.1;\r\n\r\n/* scss-combine:../su */\r\n// Su\r\n// ==\r\n\r\n/* scss-combine:su/utilities */\r\n// Map Functions\r\n// =============\r\n\r\n\r\n// Truncate List\r\n// -------------\r\n// - Return a list, truncated to a given length\r\n@function _susy-truncate-list(\r\n  $list,\r\n  $length\r\n) {\r\n  $_return: ();\r\n\r\n  @for $i from 1 through length($list) {\r\n    $_return: if($i <= $length, append($_return, nth($list, $i)), $_return);\r\n  }\r\n\r\n  @return $_return;\r\n}\r\n\r\n\r\n// Deep Get\r\n// --------\r\n// - Return a value deep in nested maps\r\n@function _susy-deep-get(\r\n  $map,\r\n  $keys...\r\n) {\r\n  $_return: $map;\r\n\r\n  @each $key in $keys {\r\n    @if type-of($_return) == map {\r\n      $_return: map-get($_return, $key);\r\n    }\r\n  }\r\n\r\n  @return $_return;\r\n}\r\n\r\n\r\n// Deep Set\r\n// --------\r\n// - Set a value deep in nested maps\r\n@function _susy-deep-set(\r\n  $map,\r\n  $keys-value...\r\n) {\r\n  $_value: nth($keys-value, -1);\r\n  $_keys: _susy-truncate-list($keys-value, length($keys-value) - 1);\r\n  $_length: length($_keys);\r\n  $_return: ();\r\n\r\n  @for $i from 1 through $_length {\r\n    $_n: 0 - $i;\r\n    $_level: _susy-truncate-list($_keys, $_length + $_n);\r\n    $_level: _susy-deep-get($map, $_level...);\r\n    $_merge: nth($_keys, $_n);\r\n    $_merge: ($_merge: $_value);\r\n    $_return: if($_level, map-merge($_level, $_merge), $_merge);\r\n    $_value: $_return;\r\n  }\r\n\r\n  @return $_return;\r\n}\r\n\r\n\r\n// Deep Merge\r\n// ----------\r\n// Return 2 objects of any depth, merged\r\n@function _susy-deep-merge(\r\n  $map1,\r\n  $map2\r\n) {\r\n\r\n  @if type-of($map1) != map or type-of($map2) != map {\r\n    $map1: $map2;\r\n  } @else {\r\n    @each $key, $value in $map2 {\r\n      $_new: ($key: _susy_deep-merge(map-get($map1, $key), $value));\r\n      $map1: map-merge($map1, $_new);\r\n    }\r\n  }\r\n\r\n  @return $map1;\r\n}\r\n\r\n\r\n// Deep Has-Key\r\n// ------------\r\n// - Return true if a deep key exists\r\n@function _susy-deep-has-key(\r\n  $map,\r\n  $keys...\r\n) {\r\n  $_return: null;\r\n  $_stop: false;\r\n\r\n  @each $key in $keys {\r\n    @if not($_stop) {\r\n      $_return: map-has-key($map, $key);\r\n    }\r\n\r\n    @if $_return {\r\n      $map: map-get($map, $key);\r\n    } @else {\r\n      $_stop: true;\r\n    }\r\n  }\r\n\r\n  @return $_return;\r\n}\r\n\r\n/* scss-combine:su/settings */\r\n// Settings\r\n// ========\r\n\r\n// Version\r\n// -------\r\n$su-version: 1.1;\r\n\r\n\r\n// Default Settings\r\n// ----------------\r\n// PRIVATE: The basic settings\r\n$susy-defaults: (\r\n  columns: 4,\r\n  gutters: .25,\r\n);\r\n\r\n\r\n// User Settings\r\n// -------------\r\n// - Define the $susy variable with a map of your own settings.\r\n// - Set EITHER $column-width OR $container\r\n// - Use $column-width for static layouts\r\n$susy: () !default;\r\n\r\n\r\n// Susy Defaults\r\n// -------------\r\n// PRIVATE: Add defaults to Susy\r\n@mixin susy-defaults(\r\n  $defaults\r\n) {\r\n  $susy-defaults: map-merge($susy-defaults, $defaults) !global;\r\n}\r\n\r\n\r\n// Susy Set\r\n// --------\r\n// Change one setting\r\n// - $key   : setting name\r\n// - $value : setting value\r\n@mixin susy-set(\r\n  $key-value...\r\n) {\r\n  $susy: _susy-deep-set($susy, $key-value...) !global;\r\n}\r\n\r\n\r\n// Susy Get\r\n// --------\r\n// Return one setting from a grid\r\n// - $key     : <keyword>\r\n// - $layout  : <settings>\r\n@function susy-get(\r\n  $key,\r\n  $layout: map-merge($susy-defaults, $susy)\r\n) {\r\n  $layout: parse-grid($layout);\r\n  $_options: $layout $susy $susy-defaults;\r\n  $_break: false;\r\n  $_return: null;\r\n\r\n  @each $opt in $_options {\r\n    @if type-of($opt) == map and not($_break) {\r\n      $_keyset: _susy-deep-has-key($opt, $key...);\r\n      @if $_keyset {\r\n        $_return: _susy-deep-get($opt, $key...);\r\n        $_break: true;\r\n      }\r\n    }\r\n  }\r\n\r\n  @return $_return;\r\n}\r\n\r\n/* scss-combine:su/validation */\r\n// Math Validation\r\n// ===============\r\n\r\n\r\n// Valid Columns\r\n// -------------\r\n// Check that a column setting is valid.\r\n@function valid-columns(\r\n  $columns,\r\n  $silent: false\r\n) {\r\n  $type: type-of($columns);\r\n  $return: null;\r\n\r\n  @if $type == number and unitless($columns) {\r\n    $return: $columns;\r\n  } @else if $type == list {\r\n    $fail: null;\r\n    @each $col in $columns {\r\n      @if type-of($col) == number {\r\n        $fail: $fail or if(unitless($col), null, true);\r\n      } @else {\r\n        $fail: true;\r\n      }\r\n    }\r\n    $return: if($fail, $return, $columns);\r\n  }\r\n\r\n  @if $return != $columns and not($silent) {\r\n    $return: null;\r\n    $warn: '$columns must be a unitless number or list of unitless numbers.';\r\n    @warn $warn + ' Current value [#{$type}]: #{$columns}';\r\n  }\r\n\r\n  @return $return;\r\n}\r\n\r\n\r\n// Valid Gutters\r\n// -------------\r\n// Check that a gutter setting is valid.\r\n@function valid-gutters(\r\n  $gutters,\r\n  $silent: false\r\n) {\r\n  $type: type-of($gutters);\r\n  $return: null;\r\n\r\n  @if $type == number and unitless($gutters) {\r\n    $return: $gutters;\r\n  } @else if not($silent) {\r\n    $warn: '$gutters must be a unitless number.';\r\n    @warn $warn + ' Current value [#{$type}]: #{$gutters}';\r\n  }\r\n\r\n  @return $return;\r\n}\r\n\r\n/* scss-combine:su/grid */\r\n// Column math\r\n// ===========\r\n\r\n\r\n// Is Symmetrical\r\n// --------------\r\n// Returns true if a grid is symmetrical.\r\n// - [$columns]   : <number> | <list>\r\n@function is-symmetrical(\r\n  $columns: susy-get(columns)\r\n) {\r\n  $columns: valid-columns($columns);\r\n  @return if(type-of($columns) == number, $columns, null);\r\n}\r\n\r\n\r\n// Susy Count\r\n// ----------\r\n// Find the number of columns in a given layout\r\n// - [$columns]   : <number> | <list>\r\n@function susy-count(\r\n  $columns: susy-get(columns)\r\n) {\r\n  $columns: valid-columns($columns);\r\n  @return is-symmetrical($columns) or length($columns);\r\n}\r\n\r\n\r\n// Susy Sum\r\n// --------\r\n// Find the total sum of column-units in a layout\r\n// - [$columns]   : <number> | <list>\r\n// - [$gutters]   : <ratio>\r\n// - [$spread]    : false/narrow | wide | wider\r\n@function susy-sum(\r\n  $columns  : susy-get(columns),\r\n  $gutters  : susy-get(gutters),\r\n  $spread   : false\r\n) {\r\n  $columns: valid-columns($columns);\r\n  $gutters: valid-gutters($gutters);\r\n\r\n  $spread: if($spread == wide, 0, if($spread == wider, 1, -1));\r\n  $gutter-sum: (susy-count($columns) + $spread) * $gutters;\r\n  $column-sum: is-symmetrical($columns);\r\n\r\n  @if not($column-sum) {\r\n    @each $column in $columns {\r\n      $column-sum: ($column-sum or 0) + $column;\r\n    }\r\n  }\r\n\r\n  @return $column-sum + $gutter-sum;\r\n}\r\n\r\n\r\n// Susy Slice\r\n// ----------\r\n// Return a subset of columns at a given location.\r\n// - $span        : <number>\r\n// - $location    : <number>\r\n// - [$columns]   : <number> | <list>\r\n@function susy-slice(\r\n  $span,\r\n  $location,\r\n  $columns: susy-get(columns)\r\n) {\r\n  $columns: valid-columns($columns);\r\n  $sub-columns: $span;\r\n\r\n  @if not(is-symmetrical($columns)) {\r\n    $location: $location or 1;\r\n    $sub-columns: ();\r\n    @for $i from $location to ($location + $span) {\r\n      $sub-columns: append($sub-columns, nth($columns, $i));\r\n    }\r\n  }\r\n\r\n  @return $sub-columns;\r\n}\r\n\r\n\r\n// Susy\r\n// ----\r\n// Find the sum of a column-span.\r\n// - $span        : <number>\r\n// - $location    : <number>\r\n// - [$columns]   : <number> | <list>\r\n// - [$gutters]   : <ratio>\r\n// - [$spread]    : false/narrow | wide | wider\r\n@function susy(\r\n  $span,\r\n  $location     : false,\r\n  $columns      : susy-get(columns),\r\n  $gutters      : susy-get(gutters),\r\n  $spread       : false\r\n) {\r\n  $columns: valid-columns($columns);\r\n  $gutters: valid-gutters($gutters);\r\n  $span: susy-slice($span, $location, $columns);\r\n\r\n  @return susy-sum($span, $gutters, $spread);\r\n}\r\n\r\n\r\n/* scss-combine:../output/float */\r\n// Float API\r\n// =========\r\n\r\n/* scss-combine:shared */\r\n// Shared API\r\n// ==========\r\n\r\n/* scss-combine:support */\r\n// Susy Browser Support\r\n// ====================\r\n\r\n/* scss-combine:support/support */\r\n// Browser Support\r\n// ===============\r\n\r\n// Susy Support Defaults\r\n// ---------------------\r\n@include susy-defaults((\r\n  use-custom: (\r\n    clearfix: false,\r\n    background-image: true,\r\n    background-options: false,\r\n    breakpoint: true,\r\n    box-sizing: true,\r\n    rem: true,\r\n  ),\r\n));\r\n\r\n\r\n// Susy Support [mixin]\r\n// --------------------\r\n// Send property-value pairs to the proper support modules.\r\n// - $prop  : <css property>\r\n// - $val   : <css value>\r\n@mixin susy-support(\r\n  $prop,\r\n  $val\r\n) {\r\n  // Background Support\r\n  @if $prop == background-image {\r\n    @include susy-background-image($val);\r\n  } @else if $prop == background-size {\r\n    @include susy-background-size($val);\r\n  } @else if $prop == background-origin {\r\n    @include susy-background-origin($val);\r\n  } @else if $prop == background-clip {\r\n    @include susy-background-clip($val);\r\n  }\r\n\r\n  // Box-Sizing Support\r\n  @else if $prop == box-sizing {\r\n    @include susy-box-sizing($val);\r\n  }\r\n\r\n  // Rem Support\r\n  @else {\r\n    @include susy-rem($prop, $val);\r\n  }\r\n}\r\n\r\n\r\n// Susy Support [function]\r\n// -----------------------\r\n// Check for support of a feature.\r\n// - $feature       : <string>\r\n//                    - e.g \"rem\" or \"box-sizing\"\r\n// - $requirements  : <map>\r\n//                    - e.g (variable: rem-with-px-fallback, mixin: rem)\r\n// - $warn          : <bool>\r\n@function susy-support(\r\n  $feature,\r\n  $requirements: (),\r\n  $warn: true\r\n) {\r\n  $_support: susy-get(use-custom $feature);\r\n\r\n  @if $_support {\r\n    $_fail: false;\r\n\r\n    @each $_type, $_req in $requirements {\r\n      @each $_i in $_req {\r\n        $_pass: call(unquote(\"#{$_type}-exists\"), $_i);\r\n\r\n        @if not($_pass) {\r\n          $_fail: true;\r\n          @if $warn {\r\n            @warn \"You requested custom support of #{$feature}, but the #{$_i} #{$_type} is not available.\";\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    $_support: if($_fail, false, $_support);\r\n  }\r\n\r\n  @return $_support;\r\n}\r\n\r\n/* scss-combine:support/prefix */\r\n// Susy Prefix\r\n// ===========\r\n\r\n// Prefix\r\n// ------\r\n// Output simple prefixed properties.\r\n// - $prop      : <css property>\r\n// - $val       : <css value>\r\n// - [$prefix]  : <browser prefix list>\r\n@mixin susy-prefix(\r\n  $prop,\r\n  $val,\r\n  $prefix: official\r\n) {\r\n  @each $fix in $prefix {\r\n    $fix: if($fix == official or not($fix), $prop, '-#{$fix}-#{$prop}');\r\n    @include susy-rem($fix, $val);\r\n  }\r\n}\r\n\r\n/* scss-combine:support/background */\r\n// Background Properties\r\n// =====================\r\n\r\n// Susy Background Image\r\n// ---------------------\r\n// Check for an existing support mixin, or provide a simple fallback.\r\n// - $image: <background-image>\r\n@mixin susy-background-image(\r\n  $image\r\n) {\r\n  @if susy-support(background-image, (mixin: background-image), $warn: false) {\r\n    @include background-image($image...);\r\n  } @else {\r\n    background-image: $image;\r\n  }\r\n}\r\n\r\n// Susy Background Size\r\n// ---------------------\r\n// Check for an existing support mixin, or provide a simple fallback.\r\n// - $image: <background-size>\r\n@mixin susy-background-size(\r\n  $size\r\n) {\r\n  @if susy-support(background-options, (mixin: background-size)) {\r\n    @include background-size($size);\r\n  } @else {\r\n    background-size: $size;\r\n  }\r\n}\r\n\r\n// Susy Background Origin\r\n// ----------------------\r\n// Check for an existing support mixin, or provide a simple fallback.\r\n// - $image: <background-origin>\r\n@mixin susy-background-origin(\r\n  $origin\r\n) {\r\n  @if susy-support(background-options, (mixin: background-origin)) {\r\n    @include background-origin($origin);\r\n  } @else {\r\n    background-origin: $origin;\r\n  }\r\n}\r\n\r\n// Susy Background Clip\r\n// --------------------\r\n// Check for an existing support mixin, or provide a simple fallback.\r\n// - $image: <background-clip>\r\n@mixin susy-background-clip(\r\n  $clip\r\n) {\r\n  @if susy-support(background-options, (mixin: background-clip)) {\r\n    @include background-clip($clip);\r\n  } @else {\r\n    background-clip: $clip;\r\n  }\r\n}\r\n\r\n/* scss-combine:support/box-sizing */\r\n// Box Sizing\r\n// ==========\r\n\r\n// Box Sizing\r\n// ----------\r\n// Check for an existing support mixin, or provide a simple fallback.\r\n// - $model: <box-sizing>\r\n@mixin susy-box-sizing(\r\n  $model: content-box\r\n) {\r\n  @if $model {\r\n    @if susy-support(box-sizing, (mixin: box-sizing), $warn: false) {\r\n      @include box-sizing($model);\r\n    } @else {\r\n      $prefix: (moz, webkit, official);\r\n      @include susy-prefix(box-sizing, $model, $prefix);\r\n    }\r\n  }\r\n}\r\n\r\n/* scss-combine:support/rem */\r\n// rem Support\r\n// ===========\r\n\r\n// rem\r\n// ---\r\n// Check for an existing support mixin, or output directly.\r\n// - $prop  : <css property>\r\n// - $val   : <css value>\r\n@mixin susy-rem(\r\n  $prop,\r\n  $val\r\n) {\r\n  $_reqs: (\r\n    variable: rhythm-unit rem-with-px-fallback,\r\n    mixin: rem,\r\n  );\r\n  @if susy-support(rem, $_reqs, $warn: false) and $rhythm-unit == rem {\r\n    @include rem($prop, $val);\r\n  } @else {\r\n    #{$prop}: $val;\r\n  }\r\n}\r\n\r\n/* scss-combine:support/clearfix */\r\n// Susy Fallback Clearfix\r\n// ======================\r\n\r\n\r\n// Clearfix\r\n// --------\r\n// Check for an existing support mixin, or provide a simple fallback.\r\n@mixin susy-clearfix {\r\n  @if susy-support(clearfix, (mixin: clearfix)) {\r\n    @include clearfix;\r\n  } @else {\r\n    &:after {\r\n      content: \" \";\r\n      display: block;\r\n      clear: both;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n/* scss-combine:shared/inspect */\r\n// Debugging\r\n// =========\r\n\r\n// Susy Inspect\r\n// ------------\r\n// Output arguments passed to a inspect.\r\n// - $mixin  : <susy mixin>\r\n// - $inspec   : <mixin arguments>\r\n\r\n@mixin susy-inspect(\r\n  $mixin,\r\n  $inspect\r\n) {\r\n  $show: false;\r\n\r\n  @each $item in $inspect {\r\n    @if index($item, inspect) {\r\n      $show: true;\r\n    }\r\n  }\r\n\r\n  @if $show or susy-get(debug inspect) {\r\n    -susy-#{$mixin}: inspect($inspect);\r\n  }\r\n}\r\n\r\n/* scss-combine:shared/output */\r\n// Output\r\n// ======\r\n\r\n// Output\r\n// ------\r\n// Output CSS with proper browser support.\r\n// - $styles  : <map of css property-value pairs>\r\n@mixin output(\r\n  $styles\r\n) {\r\n  @each $prop, $val in $styles {\r\n    @include susy-support($prop, $val);\r\n  }\r\n}\r\n\r\n/* scss-combine:shared/direction */\r\n// Direction Helpers\r\n// =================\r\n\r\n// Susy Flow Defaults\r\n// ------------------\r\n// - PRIVATE\r\n@include susy-defaults((\r\n  flow: ltr,\r\n));\r\n\r\n// Get Direction\r\n// -------------\r\n// Return the 'from' or 'to' direction of a ltr or rtl flow.\r\n// - [$flow]  : ltr | rtl\r\n// - [$key]   : from | to\r\n@function get-direction(\r\n  $flow: map-get($susy-defaults, flow),\r\n  $key: from\r\n) {\r\n  $return: if($flow == rtl, (from: right, to: left), (from: left, to: right));\r\n  @return map-get($return, $key);\r\n}\r\n\r\n// To\r\n// --\r\n// Return the 'to' direction of a flow\r\n// - [$flow]  : ltr | rtl\r\n@function to(\r\n  $flow: map-get($susy-defaults, flow)\r\n) {\r\n  @return get-direction($flow, to);\r\n}\r\n\r\n// From\r\n// ----\r\n// Return the 'from' direction of a flow\r\n// - [$flow]  : ltr | rtl\r\n@function from(\r\n  $flow: map-get($susy-defaults, flow)\r\n) {\r\n  @return get-direction($flow, from);\r\n}\r\n\r\n/* scss-combine:shared/background */\r\n// Grid Background API\r\n// ===================\r\n// - Sub-pixel rounding can lead to several pixels variation between browsers.\r\n\r\n// Grid Background Output\r\n// ----------------------\r\n// - $image: background-image\r\n// - $size: background-size\r\n// - $clip: background-clip\r\n// - [$flow]: ltr | rtl\r\n@mixin background-grid-output (\r\n  $image,\r\n  $size: null,\r\n  $clip: null,\r\n  $flow: map-get($susy-defaults, flow)\r\n) {\r\n  $output: (\r\n    background-image: $image,\r\n    background-size: $size,\r\n    background-origin: $clip,\r\n    background-clip: $clip,\r\n    background-position: from($flow) top,\r\n  );\r\n\r\n  @include output($output);\r\n}\r\n\r\n/* scss-combine:shared/container */\r\n// Shared Container API\r\n// ====================\r\n\r\n// Container Output\r\n// ----------------\r\n// - [$width]         : <length>\r\n// - [$justify]       : left | center | right\r\n// - [$math]          : fluid | static\r\n@mixin container-output(\r\n  $width,\r\n  $justify: auto auto,\r\n  $property: max-width\r\n) {\r\n  $output: (\r\n    #{$property}: $width or 100%,\r\n    margin-left: nth($justify, 1),\r\n    margin-right: nth($justify, 2),\r\n  );\r\n\r\n  @include output($output);\r\n}\r\n\r\n/* scss-combine:shared/margins */\r\n// Margins API\r\n// ===========\r\n\r\n// Margin Output\r\n// -------------\r\n// - $before  : <length>\r\n// - $after   : <length>\r\n// - [$flow]  : ltr | rtl\r\n@mixin margin-output(\r\n  $before,\r\n  $after,\r\n  $flow: map-get($susy-defaults, flow)\r\n) {\r\n  $to: to($flow);\r\n  $from: from($flow);\r\n\r\n  $output: (\r\n    margin-#{$from}: $before,\r\n    margin-#{$to}: $after,\r\n  );\r\n\r\n  @include output($output);\r\n}\r\n\r\n/* scss-combine:shared/padding */\r\n// Padding API\r\n// ===========\r\n\r\n// Padding Output\r\n// --------------\r\n// - $before  : <length>\r\n// - $after   : <length>\r\n// - [$flow]  : ltr | rtl\r\n@mixin padding-output(\r\n  $before,\r\n  $after,\r\n  $flow: map-get($susy-defaults, flow)\r\n) {\r\n  $to: to($flow);\r\n  $from: from($flow);\r\n\r\n  $output: (\r\n    padding-#{$from}: $before,\r\n    padding-#{$to}: $after,\r\n  );\r\n\r\n  @include output($output);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* scss-combine:float/container */\r\n// Float Container API\r\n// ===================\r\n\r\n// Float Container\r\n// ---------------\r\n// - [$width]         : <length>\r\n// - [$justify]       : left | center | right\r\n// - [$math]   : fluid | static\r\n@mixin float-container(\r\n  $width,\r\n  $justify: auto auto,\r\n  $property: max-width\r\n) {\r\n  @include susy-clearfix;\r\n  @include container-output($width, $justify, $property);\r\n}\r\n\r\n/* scss-combine:float/span */\r\n// Float Span API\r\n// ==============\r\n\r\n// Float Span Output\r\n// -----------------\r\n// - $width             : <length>\r\n// - [$float]           : from | to\r\n// - [$margin-before]   : <length>\r\n// - [$margin-after]    : <length>\r\n// - [$padding-before]  : <length>\r\n// - [$padding-after]   : <length>\r\n// - [$flow]            : ltr | rtl\r\n@mixin float-span-output(\r\n  $width,\r\n  $float            : from,\r\n  $margin-before    : null,\r\n  $margin-after     : null,\r\n  $padding-before   : null,\r\n  $padding-after    : null,\r\n  $flow             : map-get($susy-defaults, flow)\r\n) {\r\n  $to     : to($flow);\r\n  $from   : from($flow);\r\n\r\n  $output: (\r\n    width: $width,\r\n    float: if($float == to, $to, null) or if($float == from, $from, null),\r\n    margin-#{$from}: $margin-before,\r\n    margin-#{$to}: $margin-after,\r\n    padding-#{$from}: $padding-before,\r\n    padding-#{$to}: $padding-after,\r\n  );\r\n\r\n  @include output($output);\r\n}\r\n\r\n/* scss-combine:float/end */\r\n// Float Ends API\r\n// ==============\r\n\r\n// Susy End Defaults\r\n// -----------------\r\n// - PRIVATE\r\n@include susy-defaults((\r\n  last-flow: to,\r\n));\r\n\r\n// Float Last\r\n// ----------\r\n// - [$flow]  : ltr | rtl\r\n@mixin float-last(\r\n  $flow: map-get($susy-defaults, flow),\r\n  $last-flow: map-get($susy-defaults, last-flow),\r\n  $margin: 0\r\n) {\r\n  $to: to($flow);\r\n\r\n  $output: (\r\n    float: if($last-flow == to, $to, null),\r\n    margin-#{$to}: $margin,\r\n  );\r\n\r\n  @include output($output);\r\n}\r\n\r\n// Float First\r\n// -----------\r\n// - [$flow]  : ltr | rtl\r\n@mixin float-first(\r\n  $flow: map-get($susy-defaults, flow)\r\n) {\r\n  $output: (\r\n    margin-#{from($flow)}: 0,\r\n  );\r\n\r\n  @include output($output);\r\n}\r\n\r\n/* scss-combine:float/isolate */\r\n// Float Isolation API\r\n// ===================\r\n\r\n// Isolate Output\r\n// --------------\r\n// - $push    : <length>\r\n// - [$flow]  : ltr | rtl\r\n@mixin isolate-output(\r\n  $push,\r\n  $flow: map-get($susy-defaults, flow)\r\n) {\r\n  $to: to($flow);\r\n  $from: from($flow);\r\n\r\n  $output: (\r\n    float: $from,\r\n    margin-#{$from}: $push,\r\n    margin-#{$to}: -100%,\r\n  );\r\n\r\n  @include output($output);\r\n}\r\n\r\n\r\n\r\n/* scss-combine:susy/settings */\r\n// Susy Settings\r\n// =============\r\n\r\n// Susy Language Defaults\r\n// ----------------------\r\n// - PRIVATE\r\n@include susy-defaults((\r\n  container: auto,\r\n  math: fluid,\r\n  output: float,\r\n  container-position: center,\r\n  gutter-position: after,\r\n  global-box-sizing: content-box,\r\n  debug: (\r\n    image: hide,\r\n    color: rgba(#66f, .25),\r\n    output: background,\r\n    toggle: top right,\r\n  ),\r\n));\r\n\r\n\r\n// Valid Keyword Values\r\n// --------------------\r\n// - PRIVATE: DONT'T TOUCH\r\n$susy-keywords: (\r\n  container: auto,\r\n  math: static fluid,\r\n  output: isolate float,\r\n  container-position: left center right,\r\n  flow: ltr rtl,\r\n  gutter-position: before after split inside inside-static,\r\n  box-sizing: border-box content-box,\r\n  span: full,\r\n  edge: first alpha last omega full,\r\n  spread: narrow wide wider,\r\n  gutter-override: no-gutters no-gutter,\r\n  role: nest,\r\n  clear: break nobreak,\r\n  debug image: show hide show-columns show-baseline,\r\n  debug output: background overlay,\r\n);\r\n\r\n\r\n// Parse Susy Keywords and Maps\r\n// ----------------------------\r\n@function parse-settings(\r\n  $short: $susy\r\n) {\r\n  $_return: ();\r\n\r\n  @if type-of($short) == map {\r\n    $_return: $short;\r\n  } @else {\r\n    @each $item in $short {\r\n      // strings\r\n      @if type-of($item) == string {\r\n        @each $key, $value in $susy-keywords {\r\n          @if index($value, $item) {\r\n            $_key-value: append($key, $item);\r\n            $_return: _susy-deep-set($_return, $_key-value...);\r\n          }\r\n        }\r\n      // maps\r\n      } @else if type-of($item) == map {\r\n        $_return: map-merge($_return, $item);\r\n      }\r\n    }\r\n  }\r\n\r\n  @return $_return;\r\n}\r\n\r\n\r\n// Parse Columns & Gutters\r\n// -----------------------\r\n@function parse-layout(\r\n  $short\r\n) {\r\n  $_return: ();\r\n  $_columns: ();\r\n  $_gutters: null;\r\n\r\n  @if not(unitless(nth(nth($short, 1), 1))) {\r\n    $_gutters: nth($short, 1);\r\n  } @else {\r\n    $_columns: (columns: nth($short, 1));\r\n    $_gutters: if(length($short) > 1, nth($short, 2), $_gutters);\r\n  }\r\n\r\n  @if type-of($_gutters) == list and length($_gutters) > 0 {\r\n    $_gutters: (\r\n      gutters: nth($_gutters, 2) / nth($_gutters, 1),\r\n      column-width: nth($_gutters, 1),\r\n    );\r\n  } @else {\r\n    $_gutters: if($_gutters, (gutters: $_gutters), ());\r\n  }\r\n\r\n  $_return: map-merge($_return, $_columns);\r\n  $_return: map-merge($_return, $_gutters);\r\n\r\n  @return $_return;\r\n}\r\n\r\n\r\n// Parse Grid/Context\r\n// ------------------\r\n@function parse-grid(\r\n  $short: $susy\r\n) {\r\n  $_return: parse-settings($short);\r\n  $_layout: ();\r\n\r\n  @if type-of($short) == map {\r\n    $_return: $short;\r\n  } @else {\r\n    @each $item in $short {\r\n      // number or list\r\n      @if type-of($item) == number or type-of($item) == list {\r\n        @if type-of($item) == list or unitless($item) {\r\n          $_layout: append($_layout, $item);\r\n        } @else {\r\n          $_return: map-merge($_return, (container: $item));\r\n        }\r\n      }\r\n    }\r\n\r\n    $_layout: if(length($_layout) > 0, parse-layout($_layout), $_layout);\r\n  }\r\n\r\n  @return map-merge($_return, $_layout);\r\n}\r\n\r\n\r\n// Parse Span\r\n// ----------\r\n@function parse-span(\r\n  $short,\r\n  $key: span\r\n) {\r\n  $_return: ();\r\n\r\n  @if type-of($short) == map {\r\n    $_return: $short;\r\n  } @else {\r\n    $_at: index($short, at);\r\n\r\n    @if $_at {\r\n      $_loci: $_at + 1;\r\n      $_location: nth($short, $_loci);\r\n      $_return: map-merge($_return, (location: $_location));\r\n      $short: set-nth($short, $_at, null);\r\n      $short: set-nth($short, $_loci, null);\r\n    }\r\n\r\n    $_i: 1;\r\n    $_span: ();\r\n\r\n    @while $_i <= length($short) {\r\n      $_this: nth($short, $_i);\r\n\r\n      @if type-of($_this) == number {\r\n        $_span: append($_span, $_this);\r\n        $short: set-nth($short, $_i, null);\r\n      } @else if $_this == of {\r\n        $short: set-nth($short, $_i, null);\r\n        $_i: length($short) + 1;\r\n      }\r\n\r\n      $_i: $_i + 1;\r\n    }\r\n\r\n    @if length($_span) > 0 {\r\n      $_span: if(length($_span) == 1, nth($_span, 1), $_span);\r\n      $_return: map-merge($_return, ($key: $_span));\r\n    }\r\n\r\n    $_return: map-merge($_return, parse-grid($short));\r\n  }\r\n\r\n  @return $_return;\r\n}\r\n\r\n\r\n// Parse Gutters\r\n// -------------\r\n@function parse-gutters(\r\n  $short: $susy\r\n) {\r\n  $_gutters: parse-span($short, gutter-override);\r\n  $_span: susy-get(gutter-override, $_gutters);\r\n\r\n  @if $_span and not(map-get($_gutters, columns)) {\r\n    $_context: ();\r\n    $_new: ();\r\n\r\n    @each $item in $_span {\r\n      @if type-of($item) == number and unitless($item) {\r\n        $_context: append($_context, $item);\r\n      } @else {\r\n        $_new: append($_new, $item);\r\n      }\r\n    }\r\n\r\n    $_context: parse-grid($_context);\r\n    $_new: if(length($_new) == 0, null, $_new);\r\n    $_new: if(length($_new) == 1, nth($_new, 1), $_new);\r\n    $_new: (gutter-override: if($_new != $_span, $_new, $_span));\r\n\r\n    $_gutters: map-merge($_gutters, $_new);\r\n    $_gutters: map-merge($_gutters, $_context);\r\n  }\r\n\r\n  @return $_gutters;\r\n}\r\n\r\n/* scss-combine:susy/validation */\r\n// Validation\r\n// ==========\r\n\r\n\r\n// Validate Column Math\r\n// --------------------\r\n@function valid-column-math(\r\n  $math,\r\n  $column-width\r\n) {\r\n  @if $math == static and not($column-width) {\r\n    @error 'Static math requires a valid column-width setting.';\r\n  }\r\n\r\n  @return $column-width;\r\n}\r\n\r\n/* scss-combine:susy/grids */\r\n// Grid Syntax\r\n// ===========\r\n\r\n\r\n// Layout\r\n// ------\r\n// Set a new layout using a shorthand\r\n// - $layout: <settings>\r\n// - $clean: boolean\r\n@mixin layout(\r\n  $layout,\r\n  $clean: false\r\n) {\r\n  $inspect  : $layout;\r\n  $susy     : _get-layout($layout, $clean) !global;\r\n\r\n  @include susy-inspect(layout, $inspect);\r\n}\r\n\r\n\r\n// Use Grid\r\n// --------\r\n// Use an arbitrary layout for a section of code\r\n// - $layout: <settings>\r\n// - $clean: boolean\r\n@mixin with-layout(\r\n  $layout,\r\n  $clean: false\r\n) {\r\n  $inspect  : $layout;\r\n  $old      : $susy;\r\n  $susy     : _get-layout($layout, $clean) !global;\r\n\r\n  @include susy-inspect(with-layout, $inspect);\r\n\r\n  @content;\r\n\r\n  $susy: $old !global;\r\n}\r\n\r\n\r\n// Layout\r\n// ------\r\n// Return a parsed layout map based on shorthand syntax\r\n// - $layout: <settings>\r\n@function layout(\r\n  $layout: $susy\r\n) {\r\n  @return parse-grid($layout);\r\n}\r\n\r\n\r\n// Get Layout\r\n// ----------\r\n// Return a new layout based on current and given settings\r\n// - $layout: <settings>\r\n// - $clean: boolean\r\n@function _get-layout(\r\n  $layout,\r\n  $clean: false\r\n) {\r\n  $layout: layout($layout);\r\n  @return if($clean, $layout, _susy-deep-merge($susy, $layout));\r\n}\r\n\r\n/* scss-combine:susy/box-sizing */\r\n// Susy Box Sizing\r\n// =================\r\n\r\n// Global Box Sizing\r\n// -----------------\r\n// Set a box model globally on all elements.\r\n// - [$box]: border-box | content-box\r\n// - [$inherit]: true | false\r\n@mixin global-box-sizing(\r\n  $box: susy-get(global-box-sizing),\r\n  $inherit: false\r\n) {\r\n  $inspect: $box;\r\n\r\n  @if $inherit {\r\n    @at-root {\r\n       html { @include output((box-sizing: $box)); }\r\n       *, *:before, *:after { box-sizing: inherit; }\r\n     }\r\n  } @else {\r\n    *, *:before, *:after { @include output((box-sizing: $box)); }\r\n  }\r\n\r\n  @include susy-inspect(global-box-sizing, $inspect);\r\n  @include update-box-model($box);\r\n}\r\n\r\n// Border Box Sizing\r\n// -----------------\r\n// A legacy shortcut...\r\n// - [$inherit]: true | false\r\n@mixin border-box-sizing(\r\n  $inherit: false\r\n) {\r\n  @include global-box-sizing(border-box, $inherit);\r\n}\r\n\r\n// Update Box Model\r\n// ----------------\r\n// PRIVATE: Updates global box model setting\r\n@mixin update-box-model(\r\n  $box\r\n) {\r\n  @if $box != susy-get(global-box-sizing) {\r\n  @include susy-set(global-box-sizing, $box);\r\n  }\r\n}\r\n\r\n/* scss-combine:susy/context */\r\n// Context Syntax\r\n// ==============\r\n\r\n// Nested [function]\r\n// -----------------\r\n// Return a subset grid for nested context.\r\n// - $context   : <span>\r\n@function nested(\r\n  $context\r\n) {\r\n  $context    : parse-span($context);\r\n  $span       : susy-get(span, $context);\r\n  $location   : get-location($context);\r\n  $columns    : susy-get(columns, $context);\r\n\r\n  @return susy-slice($span, $location, $columns);\r\n}\r\n\r\n// Nested [mixin]\r\n// --------------\r\n// Use a subset grid for a nested context\r\n// - $context   : <span>\r\n// - @content   : <content>\r\n@mixin nested(\r\n  $context\r\n) {\r\n  $inspect  : $context;\r\n  $context  : parse-span($context);\r\n  $old      : susy-get(columns);\r\n  $susy     : map-merge($susy, (columns: nested($context))) !global;\r\n\r\n  @include susy-inspect(nested, $inspect);\r\n  @content;\r\n\r\n  $susy     : map-merge($susy, (columns: $old)) !global;\r\n}\r\n\r\n/* scss-combine:susy/background */\r\n// Background Grid Syntax\r\n// ======================\r\n\r\n$susy-overlay-grid-head-exists: false;\r\n\r\n\r\n// Show Grid/s\r\n// -----------\r\n// Show grid on any element using either background or overlay.\r\n// - [$grid]  : <settings>\r\n@mixin show-grid(\r\n  $grid: $susy\r\n) {\r\n  $inspect: $grid;\r\n  $_output: debug-get(output, $grid);\r\n\r\n  @include susy-inspect(show-grid, $inspect);\r\n  @if $_output == overlay and susy-get(debug image, $grid) != hide {\r\n    @include overlay-grid($grid);\r\n  } @else {\r\n    @include background-grid($grid);\r\n  }\r\n}\r\n\r\n@mixin show-grids(\r\n  $grid: $susy\r\n) {\r\n  @include show-grid($grid);\r\n}\r\n\r\n// Background Grid\r\n// ---------------\r\n// Show a grid background on any element.\r\n// - [$grid]  : <settings>\r\n@mixin background-grid(\r\n  $grid: $susy\r\n) {\r\n  $inspect  : $grid;\r\n  $_output  : get-background($grid);\r\n\r\n  @if length($_output) > 0 {\r\n    $_flow: susy-get(flow, $grid);\r\n\r\n    $_image: ();\r\n    @each $name, $layer in map-get($_output, image) {\r\n      $_direction: if($name == baseline, to bottom, to to($_flow));\r\n      $_image: append($_image, linear-gradient($_direction, $layer), comma);\r\n    }\r\n    $_output: map-merge($_output, (image: $_image));\r\n\r\n    @include background-grid-output($_output...);\r\n    @include susy-inspect(background-grid, $inspect);\r\n  }\r\n}\r\n\r\n\r\n// Overlay Grid\r\n// ------------\r\n// Generate an icon to trigger grid-overlays on any given elements.\r\n// $grids...  : <selector> [<settings>] [, <selector>]*\r\n@mixin overlay-grid (\r\n  $grid: $susy\r\n) {\r\n  @if not($susy-overlay-grid-head-exists) {\r\n    @at-root head { @include overlay-head($grid); }\r\n    @at-root head:before { @include overlay-trigger; }\r\n    @at-root head:hover { @include overlay-trigger-hover; }\r\n    $susy-overlay-grid-head-exists: true !global;\r\n  }\r\n\r\n  head:hover ~ &,\r\n  head:hover ~ body & {\r\n    position: relative;\r\n    &:before {\r\n      @include grid-overlay-base;\r\n      @include background-grid($grid);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// [Private] Overlay Trigger\r\n// -------------------------\r\n@mixin overlay-trigger {\r\n  content: \"|||\";\r\n  display: block;\r\n  padding: 5px 10px;\r\n  font: {\r\n    family: sans-serif;\r\n    size: 16px;\r\n    weight: bold;\r\n  }\r\n}\r\n\r\n\r\n// [Private] Overlay Trigger Hover\r\n// -------------------------------\r\n@mixin overlay-trigger-hover {\r\n  background: rgba(white, .5);\r\n  color: red;\r\n}\r\n\r\n\r\n// [Private] Overlay Head\r\n// ----------------------\r\n// <head> styles to create grid overlay toggle\r\n@mixin overlay-head (\r\n  $grid: $susy\r\n) {\r\n  $_toggle: debug-get(toggle, $grid);\r\n  $_horz: null;\r\n  $_vert: null;\r\n\r\n  @each $side in $_toggle {\r\n    $_horz: if($side == left or $side == right, $side, $_horz);\r\n    $_vert: if($side == top or $side == bottom, $side, $_vert);\r\n  }\r\n\r\n  display: block;\r\n  position: fixed;\r\n  #{$_horz}: 10px;\r\n  #{$_vert}: 10px;\r\n  z-index: 999;\r\n  color: #333;\r\n  background: rgba(white, .25);\r\n}\r\n\r\n\r\n// [Private] Grid Overlay Base\r\n// ---------------------------\r\n// Base styles for generating a grid overlay\r\n@mixin grid-overlay-base() {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  content: \" \";\r\n  z-index: 998;\r\n}\r\n\r\n\r\n// Get Symmetrical Background\r\n// --------------------------\r\n// - $grid: <map>\r\n@function get-background-sym(\r\n  $grid\r\n) {\r\n  $grid           : parse-grid($grid);\r\n  $_gutters       : susy-get(gutters, $grid);\r\n  $_column-width  : susy-get(column-width, $grid);\r\n  $_math          : susy-get(math, $grid);\r\n\r\n  $_color         : debug-get(color);\r\n  $_trans         : transparent;\r\n  $_light         : lighten($_color, 15%);\r\n\r\n  $_end           : 1 + $_gutters;\r\n  $_after         : percentage(1/$_end);\r\n  $_stops         : ();\r\n  $_size          : span(1 $grid wide);\r\n\r\n  @if is-inside($grid) {\r\n    $_stops: $_color, $_light;\r\n  } @else if is-split($grid) {\r\n    $_split: $_gutters/2;\r\n    $_before: percentage($_split/$_end);\r\n    $_after: percentage((1 + $_split)/$_end);\r\n    $_stops: $_trans $_before, $_color $_before, $_light $_after, $_trans $_after;\r\n  } @else {\r\n    $_stops: $_color, $_light $_after, $_trans $_after;\r\n  }\r\n\r\n  @if $_math == static {\r\n    $_size: valid-column-math($_math, $_column-width) * $_end;\r\n  }\r\n\r\n  $_output: (\r\n    image: (columns: $_stops),\r\n    size: $_size,\r\n  );\r\n\r\n  @return $_output;\r\n}\r\n\r\n\r\n// Get Asymmetrical Inside\r\n// -----------------------\r\n// - $grid: <settings>\r\n@function get-asym-inside(\r\n  $grid\r\n) {\r\n  $grid     : parse-grid($grid);\r\n  $_columns : susy-get(columns, $grid);\r\n\r\n  $_color   : debug-get(color);\r\n  $_light   : lighten($_color, 15%);\r\n  $_stops   : ();\r\n\r\n  @for $location from 1 through susy-count($_columns) {\r\n    $this-stop: ();\r\n\r\n    @if $location == 1 {\r\n      $this-stop: append($this-stop, $_color, comma);\r\n    } @else {\r\n      $start: parse-span(1 at $location $grid);\r\n      $start: get-isolation($start);\r\n      $this-stop: append($this-stop, $_color $start, comma);\r\n    }\r\n\r\n    @if $location == susy-count($_columns) {\r\n      $this-stop: append($this-stop, $_light, comma);\r\n    } @else {\r\n      $_end: parse-span(1 at ($location + 1) $grid);\r\n      $_end: get-isolation($_end);\r\n      $this-stop: append($this-stop, $_light $_end, comma);\r\n    }\r\n\r\n    $_stops: join($_stops, $this-stop, comma);\r\n  }\r\n\r\n  @return $_stops;\r\n}\r\n\r\n\r\n// Get Asymmetrical Split\r\n// ----------------------\r\n// - $grid: <settings>\r\n@function get-asym-split(\r\n  $grid\r\n) {\r\n  $grid     : parse-grid($grid);\r\n  $_columns : susy-get(columns, $grid);\r\n\r\n  $_color   : debug-get(color);\r\n  $_light   : lighten($_color, 15%);\r\n  $_stops   : ();\r\n\r\n  @for $location from 1 through susy-count($_columns) {\r\n    $this-stop: ();\r\n\r\n    $start: parse-span(1 at $location $grid);\r\n    $start: get-isolation($start);\r\n    $this-stop: append($this-stop, transparent $start, comma);\r\n    $this-stop: append($this-stop, $_color $start, comma);\r\n\r\n    $_end: $start + span(1 at $location $grid);\r\n    $this-stop: append($this-stop, $_light $_end, comma);\r\n    $this-stop: append($this-stop, transparent $_end, comma);\r\n\r\n    $_stops: join($_stops, $this-stop, comma);\r\n  }\r\n\r\n  @return $_stops;\r\n}\r\n\r\n\r\n// Get Asymmetrical Outside\r\n// ------------------------\r\n// - $grid: <settings>\r\n@function get-asym-outside(\r\n  $grid\r\n) {\r\n  $grid     : parse-grid($grid);\r\n  $_columns : susy-get(columns, $grid);\r\n\r\n  $_color   : debug-get(color);\r\n  $_light   : lighten($_color, 15%);\r\n  $_trans   : transparent;\r\n  $_stops   : ();\r\n\r\n  @for $location from 1 through susy-count($_columns) {\r\n    $this-stop: ();\r\n\r\n    @if $location == 1 {\r\n      $this-stop: append($this-stop, $_color, comma);\r\n    } @else {\r\n      $start: parse-span(1 at $location $grid);\r\n      $start: get-isolation($start);\r\n      $this-stop: append($this-stop, $_color $start, comma);\r\n    }\r\n\r\n    @if $location == susy-count($_columns) {\r\n      $this-stop: append($this-stop, $_light, comma);\r\n    } @else {\r\n      $gutter: get-span-width(first $location $grid);\r\n\r\n      $_end: parse-span(1 at ($location + 1) $grid);\r\n      $_end: get-isolation($_end);\r\n\r\n      $gutter: $_light $gutter, $_trans $gutter, $_trans $_end;\r\n      $this-stop: join($this-stop, $gutter, comma);\r\n    }\r\n\r\n    $_stops: join($_stops, $this-stop, comma);\r\n  }\r\n\r\n  @return $_stops;\r\n}\r\n\r\n\r\n// Get Asymmetrical Background\r\n// ---------------------------\r\n// - $grid: <settings>\r\n@function get-background-asym(\r\n  $grid\r\n) {\r\n  $_stops: ();\r\n\r\n  @if is-inside($grid) {\r\n    $_stops: get-asym-inside($grid);\r\n  } @else if is-split($grid) {\r\n    $_stops: get-asym-split($grid);\r\n  } @else {\r\n    $_stops: get-asym-outside($grid);\r\n  }\r\n\r\n  @return (image: (columns: $_stops));\r\n}\r\n\r\n\r\n// Get Background\r\n// --------------\r\n// - $grid: <settings>\r\n@function get-background(\r\n  $grid\r\n) {\r\n  $grid     : parse-grid($grid);\r\n  $_show    : susy-get(debug image, $grid);\r\n  $_return  : ();\r\n\r\n  @if $_show and $_show != 'hide' {\r\n    $_columns: susy-get(columns, $grid);\r\n\r\n    @if $_show != 'show-baseline' {\r\n      $_sym: is-symmetrical($_columns);\r\n      $_return: if($_sym, get-background-sym($grid), get-background-asym($grid));\r\n      $_return: map-merge($_return, (clip: content-box));\r\n    }\r\n\r\n    @if $_show != 'show-columns'\r\n      and global-variable-exists(base-line-height)\r\n      and type-of($base-line-height) == 'number'\r\n      and not unitless($base-line-height) {\r\n      $_color: variable-exists('grid-background-baseline-color');\r\n      $_color: if($_color, $grid-background-baseline-color, #000);\r\n\r\n      $_image: map-get($_return, image);\r\n      $_size: map-get($_return, size);\r\n      $_baseline: (baseline: ($_color 1px, transparent 1px));\r\n      $_baseline-size: 100% $base-line-height;\r\n\r\n      $_return: map-merge($_return, (\r\n        image: if($_image, map-merge($_image, $_baseline), $_baseline),\r\n        size: if($_size, ($_size, $_baseline-size), $_baseline-size),\r\n      ));\r\n\r\n      @if $_show == 'show' {\r\n        $_clip: map-get($_return, clip);\r\n        $_return: map-merge($_return, (clip: join($_clip, border-box, comma)));\r\n      }\r\n    } @else if $_show == 'show-baseline' {\r\n      @warn 'Please provide a $base-line-height with the desired height and units';\r\n    }\r\n  }\r\n\r\n  @if map-get($_return, image) {\r\n    $_return: map-merge($_return, (flow: susy-get(flow, $grid)));\r\n  }\r\n\r\n  @return $_return;\r\n}\r\n\r\n\r\n// Get Debug\r\n// ---------\r\n// Return the value of a debug setting\r\n// - $key: <setting>\r\n@function debug-get(\r\n  $key,\r\n  $grid: $susy\r\n) {\r\n  $key: join(debug, $key, space);\r\n  @return susy-get($key, $grid);\r\n}\r\n\r\n/* scss-combine:susy/container */\r\n// Container Syntax\r\n// ================\r\n\r\n// Container [mixin]\r\n// -----------------\r\n// Set a container element\r\n// - [$layout]  : <settings>\r\n@mixin container(\r\n  $layout: $susy\r\n) {\r\n  $inspect    : $layout;\r\n  $layout     : parse-grid($layout);\r\n\r\n  $_width     : get-container-width($layout);\r\n  $_justify   : parse-container-position(susy-get(container-position, $layout));\r\n  $_property  : if(susy-get(math, $layout) == static, width, max-width);\r\n\r\n  $_box       : susy-get(box-sizing, $layout);\r\n\r\n  @if $_box {\r\n    @include output((box-sizing: $_box));\r\n  }\r\n\r\n  @include susy-inspect(container, $inspect);\r\n  @include float-container($_width, $_justify, $_property);\r\n  @include show-grid($layout);\r\n}\r\n\r\n// Container [function]\r\n// --------------------\r\n// Return container width\r\n// - [$layout]  : <settings>\r\n@function container(\r\n  $layout: $susy\r\n) {\r\n  $layout: parse-grid($layout);\r\n  @return get-container-width($layout);\r\n}\r\n\r\n// Get Container Width\r\n// -------------------\r\n// Calculate the container width\r\n// - [$layout]: <settings>\r\n@function get-container-width(\r\n  $layout: $susy\r\n) {\r\n  $layout         : parse-grid($layout);\r\n  $_width         : susy-get(container, $layout);\r\n  $_column-width  : susy-get(column-width, $layout);\r\n  $_math          : susy-get(math, $layout);\r\n\r\n  @if not($_width) or $_width == auto {\r\n    @if valid-column-math($_math, $_column-width) {\r\n      $_columns   : susy-get(columns, $layout);\r\n      $_gutters   : susy-get(gutters, $layout);\r\n      $_spread    : if(is-split($layout), wide, narrow);\r\n      $_width     : susy-sum($_columns, $_gutters, $_spread) * $_column-width;\r\n    } @else {\r\n      $_width: 100%;\r\n    }\r\n  }\r\n\r\n  @return $_width;\r\n}\r\n\r\n// Parse Container Position\r\n// ------------------------\r\n// Parse the $container-position into margin values.\r\n// - [$justify]   : left | center | right | <length> [<length>]\r\n@function parse-container-position(\r\n  $justify: map-get($susy-defaults, container-position)\r\n) {\r\n  $_return: if($justify == left, 0, auto) if($justify == right, 0, auto);\r\n\r\n  @if not(index(left right center, $justify)) {\r\n    $_return: nth($justify, 1);\r\n    $_return: $_return if(length($justify) > 1, nth($justify, 2), $_return);\r\n  }\r\n\r\n  @return $_return;\r\n}\r\n\r\n/* scss-combine:susy/span */\r\n// Span Syntax\r\n// ===========\r\n\r\n// Span [mixin]\r\n// ------------\r\n// Set a spanning element using shorthand syntax.\r\n// - $span  : <span>\r\n@mixin span(\r\n  $span\r\n) {\r\n  $inspect: $span;\r\n  $span: parse-span($span);\r\n  $output: span-math($span);\r\n  $nesting: susy-get(span, $span);\r\n  $clear: susy-get(clear, $span);\r\n\r\n  $box: susy-get(box-sizing, $span);\r\n  $content-box: if(susy-get(global-box-sizing) != 'border-box', true, false);\r\n  $box: $box or if(is-inside($span) and $content-box, border-box, null);\r\n\r\n  @if $clear == break {\r\n    @include break;\r\n  } @else if $clear == nobreak {\r\n    @include nobreak;\r\n  }\r\n\r\n  @include susy-inspect(span, $inspect);\r\n  @include output((box-sizing: $box));\r\n  @include float-span-output($output...);\r\n\r\n  @if valid-columns($nesting, silent) {\r\n    @include nested($span) { @content; }\r\n  } @else {\r\n    @content;\r\n  }\r\n}\r\n\r\n// Span [function]\r\n// ---------------\r\n// Return the width of a span.\r\n// - $span  : <span>\r\n@function span(\r\n  $span\r\n) {\r\n  @return get-span-width($span);\r\n}\r\n\r\n// Span Math\r\n// ---------\r\n// Get all the span results.\r\n// - $span: <map>\r\n@function span-math(\r\n  $span\r\n) {\r\n  $nest             : if(susy-get(role, $span) == nest, true, false);\r\n  $split-nest       : if(is-split($span) and $nest, true, false);\r\n  $edge             : get-edge($span);\r\n  $location         : get-location($span);\r\n\r\n  $float            : from;\r\n  $padding-before   : null;\r\n  $padding-after    : null;\r\n  $margin-before    : null;\r\n  $margin-after     : null;\r\n\r\n  // calculate widths\r\n  $spread: index(map-values($span), spread);\r\n  $span: if($split-nest and not($spread), map-merge($span, (spread: wide)), $span);\r\n  $width: get-span-width($span);\r\n  $gutters: get-gutters($span);\r\n\r\n  // apply gutters\r\n  @if is-inside($span) {\r\n    @if not(susy-get(role, $span)) {\r\n      $padding-before: map-get($gutters, before);\r\n      $padding-after: map-get($gutters, after);\r\n    }\r\n  } @else {\r\n    @if not($split-nest) {\r\n      $margin-before: map-get($gutters, before);\r\n      $margin-after: map-get($gutters, after);\r\n    }\r\n  }\r\n\r\n  // special margin handling\r\n  @if susy-get(output, $span) == isolate and $location {\r\n    $margin-before: get-isolation($span);\r\n    $margin-after: -100%;\r\n  } @else if $edge {\r\n    $is-split: is-split($span);\r\n    $pos: susy-get(gutter-position, $span);\r\n\r\n    @if $edge == last {\r\n      $float: susy-get(last-flow, $span);\r\n    }\r\n\r\n    @if not($is-split) {\r\n      @if $edge == full or ($edge == first and $pos == before) {\r\n        $margin-before: 0;\r\n      }\r\n      @if $edge == full or ($edge == last and $pos == after) {\r\n        $margin-after: 0;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  @return (\r\n    width           : $width,\r\n    float           : $float,\r\n    margin-before   : $margin-before,\r\n    margin-after    : $margin-after,\r\n    padding-before  : $padding-before,\r\n    padding-after   : $padding-after,\r\n    flow            : susy-get(flow, $span),\r\n  );\r\n}\r\n\r\n// Get Span Width\r\n// --------------\r\n// Return span width.\r\n// - $span: <map>\r\n@function get-span-width(\r\n  $span\r\n) {\r\n  $span     : parse-span($span);\r\n\r\n  $n        : susy-get(span, $span);\r\n  $location : get-location($span);\r\n  $columns  : susy-get(columns, $span);\r\n  $gutters  : susy-get(gutters, $span);\r\n  $spread   : susy-get(spread, $span);\r\n\r\n  $context  : null;\r\n  $span-sum : null;\r\n  $width    : null;\r\n\r\n  @if $n == 'full' {\r\n    $pos: susy-get(gutter-position, $span);\r\n    $role: susy-get(role, $span);\r\n    $n: if($pos == split and $role != nest, susy-count($columns), 100%);\r\n  }\r\n\r\n  @if type-of($n) != number {\r\n    @warn \"(#{type-of($n)}) #{$n} is not a valid span.\";\r\n  } @else if unitless($n) {\r\n    $context: susy-sum($columns, $gutters, if(is-split($span), wide, narrow));\r\n    $spread: if(is-inside($span), $spread or wide, $spread);\r\n    $span-sum: susy($n, $location, $columns, $gutters, $spread);\r\n\r\n    $_math: susy-get(math, $span);\r\n    $_column-width: susy-get(column-width, $span);\r\n    @if $_math == static {\r\n      $width: $span-sum * valid-column-math($_math, $_column-width);\r\n    } @else {\r\n      $width: percentage($span-sum / $context);\r\n    }\r\n  } @else {\r\n    $width: $n;\r\n  }\r\n\r\n  @return $width;\r\n}\r\n\r\n/* scss-combine:susy/gutters */\r\n// Gutter Syntax\r\n// =============\r\n\r\n\r\n// Gutters\r\n// -------\r\n// Set gutters on an element.\r\n// - [$span]   : <settings>\r\n@mixin gutters(\r\n  $span: $susy\r\n) {\r\n  $inspect  : $span;\r\n  $span     : parse-gutters($span);\r\n  $_gutters : get-gutters($span);\r\n\r\n  $_output: (\r\n    before: map-get($_gutters, before),\r\n    after: map-get($_gutters, after),\r\n    flow: susy-get(flow, $span),\r\n  );\r\n\r\n  @include susy-inspect(gutters, $inspect);\r\n\r\n  @if is-inside($span) {\r\n    @include padding-output($_output...);\r\n  } @else {\r\n    @include margin-output($_output...);\r\n  }\r\n}\r\n\r\n@mixin gutter(\r\n  $span: $susy\r\n) {\r\n  @include gutters($span);\r\n}\r\n\r\n\r\n// Gutter\r\n// ------\r\n// Return the width of a gutter.\r\n// - [$span]   : <settings>\r\n@function gutter(\r\n  $span: $susy\r\n) {\r\n  $span: parse-gutters($span);\r\n\r\n  $_gutters: get-gutters($span);\r\n  $_gutters: map-get($_gutters, before) or map-get($_gutters, after);\r\n\r\n  @return $_gutters;\r\n}\r\n\r\n@function gutters(\r\n  $span: $susy\r\n) {\r\n  @return gutter($span);\r\n}\r\n\r\n\r\n// Get Gutter Width\r\n// ----------------\r\n// Return gutter width.\r\n// - [$context]: <context>\r\n@function get-gutter-width(\r\n  $context: $susy\r\n) {\r\n  $context  : parse-gutters($context);\r\n\r\n  $_gutters : susy-get(gutters, $context);\r\n  $_gutter  : susy-get(gutter-override, $context);\r\n\r\n  @if $_gutters and ($_gutters > 0) and not($_gutter) {\r\n    $_column-width: susy-get(column-width, $context);\r\n    $_math: gutter-math($context);\r\n    @if $_math == static {\r\n      $_gutter: $_gutters * valid-column-math($_math, $_column-width);\r\n    } @else {\r\n      $_columns : susy-get(columns, $context);\r\n      $_spread  : if(is-split($context), wide, susy-get(spread, $context));\r\n      $_gutter  : percentage($_gutters / susy-sum($_columns, $_gutters, $_spread));\r\n    }\r\n  }\r\n\r\n  $_gutter: if($_gutter == 'no-gutters' or $_gutter == 'no-gutter', null, $_gutter);\r\n\r\n  @return $_gutter;\r\n}\r\n\r\n\r\n// Get Gutters\r\n// -----------\r\n// Return before and after gutter values.\r\n// - [$context]: <context>\r\n@function get-gutters(\r\n  $context: $susy\r\n) {\r\n  $context            : parse-gutters($context);\r\n\r\n  $_gutter-position   : susy-get(gutter-position, $context);\r\n  $_gutter            : get-gutter-width($context);\r\n\r\n  $_return            : (before: null, after: null);\r\n\r\n  @if is-split($context) and $_gutter {\r\n    $_gutter: $_gutter / 2;\r\n    $_return: map-merge($_return, (before: $_gutter, after: $_gutter));\r\n  } @else {\r\n    $_return: map-merge($_return, ($_gutter-position: $_gutter));\r\n  }\r\n\r\n  @return $_return;\r\n}\r\n\r\n\r\n// Is Inside\r\n// ---------\r\n// Returns true if gutters are inside.\r\n// $context: <context>\r\n@function is-inside(\r\n  $context\r\n) {\r\n  $_inside: inside inside-static;\r\n  $_gutter-position: susy-get(gutter-position, $context);\r\n\r\n  @return if(index($_inside, $_gutter-position), true, false);\r\n}\r\n\r\n\r\n// Is Split\r\n// --------\r\n// Returns true if gutters are split.\r\n// $context: <context>\r\n@function is-split(\r\n  $context\r\n) {\r\n  $_split: split inside inside-static;\r\n  $_gutter-position: susy-get(gutter-position, $context);\r\n\r\n  @return if(index($_split, $_gutter-position), true, false);\r\n}\r\n\r\n\r\n// Gutter Math\r\n// -----------\r\n// Return the math to use for gutter calculations\r\n// $context: <context>\r\n@function gutter-math(\r\n  $context: $susy\r\n) {\r\n  $_return  : susy-get(math, $context);\r\n  $_return  : if(susy-get(gutter-position, $context) == inside-static, static, $_return);\r\n\r\n  @return $_return;\r\n}\r\n\r\n/* scss-combine:susy/isolate */\r\n// Isolation Syntax\r\n// ================\r\n\r\n\r\n// Isolate [Mixin]\r\n// ---------------\r\n// Set isolation as an override.\r\n// - $location: <span>\r\n@mixin isolate(\r\n  $isolate: 1\r\n) {\r\n  $inspect: $isolate;\r\n\r\n  $output: (\r\n    push: isolate($isolate),\r\n    flow: susy-get(flow, $isolate),\r\n  );\r\n\r\n  @include susy-inspect(isolate, $inspect);\r\n  @include isolate-output($output...);\r\n}\r\n\r\n\r\n// Isolate [function]\r\n// ------------------\r\n// Return an isolation offset width.\r\n// - $location: <span>\r\n@function isolate(\r\n  $isolate: 1\r\n) {\r\n  $isolate: parse-span($isolate);\r\n  $isolation: susy-get(span, $isolate);\r\n\r\n  @if $isolation and not(get-location($isolate)) {\r\n    $new: (\r\n      span: null,\r\n      location: $isolation,\r\n    );\r\n    $isolate: map-merge($isolate, $new);\r\n  }\r\n\r\n  @return get-isolation($isolate);\r\n}\r\n\r\n\r\n// Get Isolation\r\n// -------------\r\n// Return the isolation offset width\r\n// - $input: <map>\r\n@function get-isolation(\r\n  $input\r\n) {\r\n  $location   : get-location($input);\r\n  $columns    : susy-get(columns, $input);\r\n  $width      : null;\r\n\r\n  @if type-of($location) == number and not(unitless($location)) {\r\n    $width: $location;\r\n  } @else if $location {\r\n    $push: $location - 1;\r\n    @if $push > 0 {\r\n      $push: map-merge($input, (\r\n        span: $push,\r\n        location: 1,\r\n        spread: wide,\r\n      ));\r\n      $width: get-span-width($push);\r\n    }\r\n  }\r\n\r\n  @if susy-get(gutter-position, $input) == split\r\n      and susy-get(gutters, $input) > 0 {\r\n    $width: if($width == null, gutters($input), $width + gutters($input));\r\n  }\r\n\r\n  @return $width or 0;\r\n}\r\n\r\n/* scss-combine:susy/gallery */\r\n// Gallery Syntax\r\n// ==============\r\n\r\n// Gallery\r\n// -------\r\n// Create an isolated gallery\r\n// - $span        : <span>\r\n// - [$selector]  : child | of-type\r\n@mixin gallery(\r\n  $span,\r\n  $selector: child\r\n) {\r\n  $inspect    : $span;\r\n  $span       : parse-span($span);\r\n  $span       : map-merge($span, (location: 1));\r\n\r\n  $n            : susy-get(span, $span);\r\n  $columns      : susy-get(columns, $span);\r\n  $context      : susy-count($columns);\r\n  $flow         : susy-get(flow, $span);\r\n\r\n  $inside       : is-inside($span);\r\n  $from         : from($flow);\r\n  $line         : floor($context / $n);\r\n  $symmetrical  : is-symmetrical($columns);\r\n\r\n  $output: (\r\n    width             : null,\r\n    float             : from,\r\n    margin-before     : null,\r\n    margin-after      : null,\r\n    padding-before    : null,\r\n    padding-after     : null,\r\n    flow              : $flow,\r\n  );\r\n\r\n  @if $inside {\r\n    $gutters: get-gutters($span);\r\n    $output: map-merge($output, (\r\n      padding-before: map-get($gutters, before),\r\n      padding-after: map-get($gutters, after),\r\n    ));\r\n  }\r\n\r\n  @if $symmetrical {\r\n    $output: map-merge($output, (width: get-span-width($span)));\r\n  }\r\n\r\n  $box          : susy-get(box-sizing, $span);\r\n  $global-box   : if(susy-get(global-box-sizing) == 'border-box', true, false);\r\n\r\n  @include susy-inspect(gallery, $inspect);\r\n\r\n  // Collective Output\r\n  @if $box == border-box or ($inside and not($box) and not($global-box)) {\r\n    @include output((box-sizing: border-box));\r\n  } @else if $box == content-box {\r\n    @include output((box-sizing: content-box));\r\n  }\r\n\r\n  @include float-span-output($output...);\r\n\r\n  // Individual Loop\r\n  @for $item from 1 through $line {\r\n    $nth: '#{$line}n + #{$item}';\r\n    &:nth-#{$selector}(#{$nth}) {\r\n      // Individual Prep\r\n      $output: (\r\n        width             : if($symmetrical, null, get-span-width($span)),\r\n        float             : null,\r\n        margin-before     : get-isolation($span),\r\n        margin-after      : -100%,\r\n        padding-before    : null,\r\n        padding-after     : null,\r\n        flow              : $flow,\r\n      );\r\n\r\n      // Individual Output\r\n      @include float-span-output($output...);\r\n\r\n      @if get-edge($span) == first {\r\n        @include break;\r\n        @include first($span);\r\n      } @else {\r\n        @include nobreak;\r\n      }\r\n\r\n      // Individual Location Increment\r\n      $location: get-location($span) + $n;\r\n      $location: if($location > $context, 1, $location);\r\n      $span: map-merge($span, (location: $location));\r\n    }\r\n  }\r\n}\r\n\r\n/* scss-combine:susy/rows */\r\n// Row Start & End\r\n// ===============\r\n\r\n// Break\r\n// -----\r\n// Apply to any element that should force a line break.\r\n@mixin break {\r\n  @include output((clear: both));\r\n}\r\n\r\n\r\n// NoBreak\r\n// -------\r\n// Cancel the break() effect, e.g. when using media queries.\r\n@mixin nobreak {\r\n  @include output((clear: none));\r\n}\r\n\r\n\r\n// Full\r\n// ----\r\n// - [$context]: <layout shorthand>\r\n@mixin full(\r\n  $context: $susy\r\n) {\r\n  $inspect : $context;\r\n  @include susy-inspect(full, $inspect);\r\n  @include span(full of parse-grid($context) break);\r\n}\r\n\r\n\r\n// First\r\n// -----\r\n// - [$context]: <settings>\r\n@mixin first(\r\n  $context: $susy\r\n) {\r\n  $inspect  : $context;\r\n  $context  : parse-grid($context);\r\n  $flow     : susy-get(flow, $context);\r\n\r\n  @include susy-inspect(first, $inspect);\r\n  @if not(is-split($context)) {\r\n    @include float-first($flow);\r\n  }\r\n}\r\n\r\n@mixin alpha(\r\n  $context: $susy\r\n) {\r\n  @include first($context);\r\n}\r\n\r\n\r\n// Last\r\n// ----\r\n// - [$context]: <settings>\r\n@mixin last(\r\n  $context: $susy\r\n) {\r\n  $inspect  : $context;\r\n  $context  : parse-grid($context);\r\n\r\n  @include susy-inspect(last, $inspect);\r\n\r\n  $output: (\r\n    flow: susy-get(flow, $context),\r\n    last-flow: susy-get(last-flow, $context),\r\n    margin: if(is-split($context), null, 0),\r\n  );\r\n\r\n  @include float-last($output...);\r\n}\r\n\r\n@mixin omega(\r\n  $context: $susy\r\n) {\r\n  @include last($context);\r\n}\r\n\r\n\r\n// Get Edge\r\n// --------\r\n// Calculate edge value based on location, if possible\r\n@function get-edge(\r\n  $span\r\n) {\r\n  $span       : parse-span($span);\r\n  $edge       : susy-get(edge, $span);\r\n\r\n  @if not($edge) {\r\n    $count: susy-count(susy-get(columns, $span));\r\n    $location: susy-get(location, $span);\r\n    $n: susy-get(span, $span);\r\n\r\n    $number: if(type-of($location) == number, true, false);\r\n    $index: if($number and unitless($location), true, false);\r\n\r\n    @if $n == $count {\r\n      $edge: full;\r\n    } @else if $location and $n and $index {\r\n      @if $location == 1 {\r\n        $edge: if($n == $count, full, first);\r\n      } @else if $location + $n - 1 == $count {\r\n        $edge: last;\r\n      }\r\n    }\r\n  }\r\n\r\n  @if $edge == alpha or $edge == omega {\r\n    $edge: if($edge == alpha, first, last);\r\n  }\r\n\r\n  @return $edge;\r\n}\r\n\r\n\r\n// Get Location\r\n// ------------\r\n// Calculate location value based on edge, if possible\r\n@function get-location(\r\n  $span\r\n) {\r\n  $span       : parse-span($span);\r\n  $location   : susy-get(location, $span);\r\n  $edge       : get-edge($span);\r\n  $n          : susy-get(span, $span);\r\n\r\n  @if $edge and not($location) and type-of($n) == number and unitless($n) {\r\n    @if $edge == first {\r\n      $location: 1;\r\n    } @else if $edge == last {\r\n      $location: susy-count(susy-get(columns, $span)) - $n + 1;\r\n    }\r\n  }\r\n\r\n  @return $location\r\n}\r\n\r\n/* scss-combine:susy/margins */\r\n// Margin Syntax\r\n// =============\r\n\r\n// Pre\r\n// ---\r\n// Add spanning-margins before an element.\r\n// - $span  : <span>\r\n@mixin pre(\r\n  $span\r\n) {\r\n  $inspect: $span;\r\n  $span   : map-merge((spread: wide), parse-span($span));\r\n  $flow   : susy-get(flow, $span);\r\n  $split  : if(susy-get(gutter-position, $span) == split, true, false);\r\n  $gutter : gutter($span);\r\n  $span   : span($span);\r\n  $width  : if($split and $gutter, $span + $gutter, $span);\r\n\r\n  @include susy-inspect(pre, $inspect);\r\n  @include margin-output($width, null, $flow);\r\n}\r\n\r\n// Post\r\n// ----\r\n// Add spanning-margins after an element.\r\n// - $span  : <span>\r\n@mixin post(\r\n  $span\r\n) {\r\n  $inspect  : $span;\r\n  $span     : map-merge((spread: wide), parse-span($span));\r\n  $flow     : susy-get(flow, $span);\r\n  $split    : if(susy-get(gutter-position, $span) == split, true, false);\r\n  $width    : if($split, span($span) + gutter($span), span($span));\r\n\r\n  @include susy-inspect(post, $inspect);\r\n  @include margin-output(null, $width, $flow);\r\n}\r\n\r\n// Push\r\n// ----\r\n// Simple synonymn for pre.\r\n// - $span  : <span>\r\n@mixin push(\r\n  $span\r\n) {\r\n  @include pre($span);\r\n}\r\n\r\n// Pull\r\n// ----\r\n// Add negative spanning-margins before an element.\r\n// - $span  : <span>\r\n@mixin pull(\r\n  $span\r\n) {\r\n  $inspect  : $span;\r\n  $span     : map-merge((spread: wide), parse-span($span));\r\n  $flow     : susy-get(flow, $span);\r\n  $split    : if(susy-get(gutter-position, $span) == split, true, false);\r\n  $width    : if($split, 0 - span($span) + gutter($span), 0 - span($span));\r\n\r\n  @include susy-inspect(pull, $inspect);\r\n  @include margin-output($width, null, $flow);\r\n}\r\n\r\n// Squish\r\n// ------\r\n// Add spanning-margins before and after an element.\r\n// - $pre     : <span>\r\n// - [$post]  : <span>\r\n@mixin squish(\r\n  $pre,\r\n  $post: false\r\n) {\r\n  $inspect      : ($pre, $post);\r\n  $pre          : map-merge((spread: wide), parse-span($pre));\r\n\r\n  @if $post {\r\n    $post: map-merge((spread: wide), parse-span($post));\r\n  } @else {\r\n    $span: susy-get(span, $pre);\r\n    @if length($span) > 1 {\r\n      $pre: map-merge($pre, (span: nth($span, 1)));\r\n      $post: map-merge($pre, (span: nth($span, 2)));\r\n    } @else {\r\n      $post: $pre;\r\n    }\r\n  }\r\n\r\n  @include susy-inspect(squish, $inspect);\r\n  @include pre($pre);\r\n  @include post($post);\r\n}\r\n\r\n/* scss-combine:susy/padding */\r\n// Padding Syntax\r\n// ==============\r\n\r\n// Prefix\r\n// ------\r\n// Add spanning-padding before an element.\r\n// - $span  : <span>\r\n@mixin prefix(\r\n  $span\r\n) {\r\n  $inspect  : $span;\r\n  $span     : map-merge((spread: wide), parse-span($span));\r\n  $flow     : susy-get(flow, $span);\r\n  $width    : span($span);\r\n\r\n  @if is-inside($span) {\r\n    $gutter: gutter($span);\r\n    $width: if($gutter and comparable($width, $gutter), $width + $gutter, $width);\r\n  }\r\n\r\n  @include susy-inspect(prefix, $inspect);\r\n  @include padding-output($width, null, $flow);\r\n}\r\n\r\n// Suffix\r\n// ------\r\n// Add spanning-padding after an element.\r\n// - $span  : <span>\r\n@mixin suffix(\r\n  $span\r\n) {\r\n  $inspect  : $span;\r\n  $span     : map-merge((spread: wide), parse-span($span));\r\n  $flow     : susy-get(flow, $span);\r\n  $width    : span($span);\r\n\r\n  @if is-inside($span) {\r\n    $gutter: gutter($span);\r\n    $width: if($gutter and comparable($width, $gutter), $width + $gutter, $width);\r\n  }\r\n\r\n  @include susy-inspect(suffix, $inspect);\r\n  @include padding-output(null, $width, $flow);\r\n}\r\n\r\n// Pad\r\n// ---\r\n// Add spanning-padding before and after an element.\r\n// - $pre     : <span>\r\n// - [$post]  : <span>\r\n@mixin pad(\r\n  $pre,\r\n  $post: false\r\n) {\r\n  $inspect  : ($pre, $post);\r\n  $pre      : map-merge((spread: wide), parse-span($pre));\r\n\r\n  @if $post {\r\n    $post: map-merge((spread: wide), parse-span($post));\r\n  } @else {\r\n    $span: susy-get(span, $pre);\r\n    @if length($span) > 1 {\r\n      $pre: map-merge($pre, (span: nth($span, 1)));\r\n      $post: map-merge($pre, (span: nth($span, 2)));\r\n    } @else {\r\n      $post: $pre;\r\n    }\r\n  }\r\n\r\n  @include susy-inspect(pad, $inspect);\r\n  @include prefix($pre);\r\n  @include suffix($post);\r\n\r\n}\r\n\r\n/* scss-combine:susy/bleed */\r\n// Bleed Syntax\r\n// ============\r\n\r\n// Bleed\r\n// -----\r\n// Add negative margins, and equal positive padding to create bleed.\r\n// - $bleed  : <span>\r\n@mixin bleed(\r\n  $bleed: 0 gutter()\r\n) {\r\n  $inspect  : $bleed;\r\n  $output   : get-bleed($bleed);\r\n\r\n  @if susy-get(global-box-sizing) != content-box {\r\n    $output: map-merge((box-sizing: content-box), $output);\r\n  }\r\n\r\n  @include susy-inspect(bleed, $inspect);\r\n  @include output($output);\r\n}\r\n\r\n\r\n// Bleed-x\r\n// -------\r\n// Shortcut for horizontal bleed.\r\n// - $bleed  : <span>\r\n@mixin bleed-x(\r\n  $bleed: gutter()\r\n) {\r\n  $bleed  : parse-span($bleed);\r\n  $trbl   : susy-get(span, $bleed);\r\n\r\n  @if length($trbl) == 1 {\r\n    $bleed: map-merge($bleed, (span: 0 nth($trbl, 1)));\r\n  } @else if length($trbl) == 2 {\r\n    $bleed: map-merge($bleed, (span: 0 nth($trbl, 2) 0 nth($trbl, 1)));\r\n  } @else {\r\n    @warn 'bleed-x only takes 2 lengths, but #{length($trbl)} were passed.';\r\n  }\r\n\r\n  @include bleed($bleed);\r\n}\r\n\r\n\r\n// Bleed-y\r\n// -------\r\n// Shortcut for vertical bleed.\r\n// - $bleed  : <span>\r\n@mixin bleed-y(\r\n  $bleed: if(function-exists(rhythm), rhythm(1), 1em)\r\n) {\r\n  $bleed  : parse-span($bleed);\r\n  $trbl   : susy-get(span, $bleed);\r\n\r\n  @if length($trbl) == 1 {\r\n    $bleed: map-merge($bleed, (span: nth($trbl, 1) 0));\r\n  } @else if length($trbl) == 2 {\r\n    $bleed: map-merge($bleed, (span: nth($trbl, 1) 0 nth($trbl, 2) 0));\r\n  } @else {\r\n    @warn 'bleed-y only takes 2 lengths, but #{length($trbl)} were passed.';\r\n  }\r\n\r\n  @include bleed($bleed);\r\n}\r\n\r\n\r\n// Get Bleed\r\n// ---------\r\n// Return bleed output values\r\n// - $bleed: <span>\r\n@function get-bleed(\r\n  $bleed\r\n) {\r\n  $bleed    : map-merge((spread: wide), parse-span($bleed));\r\n  $trbl     : susy-get(span, $bleed);\r\n  $short    : null;\r\n  $output   : ();\r\n\r\n  @for $i from 1 through length($trbl) {\r\n    $this: nth($trbl, $i);\r\n    $new: ();\r\n    $margin: null;\r\n    $padding: null;\r\n    $padding-x: null;\r\n\r\n    @if $this > 0 {\r\n      $this: map-merge($bleed, (span: $this));\r\n      $margin: span($this);\r\n      $padding: $margin;\r\n      $padding-x: $padding;\r\n    }\r\n\r\n    @if $margin and $margin > 0 {\r\n      $margin: - $margin;\r\n\r\n      @if is-inside($this) {\r\n        $gutter: gutter($this);\r\n        $join: if($gutter and comparable($padding, $gutter), true, false);\r\n        $padding-x: if($join and $padding > 0, $padding + $gutter, $padding);\r\n      }\r\n    }\r\n\r\n    @if $i == 1 {\r\n      $new: (\r\n        margin-top: $margin,\r\n        padding-top: $padding,\r\n        margin-right: $margin,\r\n        padding-right: $padding-x,\r\n        margin-bottom: $margin,\r\n        padding-bottom: $padding,\r\n        margin-left: $margin,\r\n        padding-left: $padding-x,\r\n      );\r\n    } @else if $i == 2 {\r\n      $new: (\r\n        margin-right: $margin,\r\n        padding-right: $padding-x,\r\n        margin-left: $margin,\r\n        padding-left: $padding-x,\r\n      );\r\n    } @else if $i == 3 {\r\n      $new: (\r\n        margin-bottom: $margin,\r\n        padding-bottom: $padding,\r\n      );\r\n    } @else if $i == 4 {\r\n      $new: (\r\n        margin-left: $margin,\r\n        padding-left: $padding-x,\r\n      );\r\n    }\r\n\r\n    $output: map-merge($output, $new);\r\n  }\r\n\r\n  @each $prop, $value in $output {\r\n    $output: if($value == 0, map-merge($output, ($prop: null)), $output);\r\n  }\r\n\r\n  @return bleed-shorthand($output);\r\n}\r\n\r\n// Bleed Shorthand\r\n// ---------------\r\n// Convert bleed output into shorthand when possible.\r\n// - $bleed: <output map>\r\n@function bleed-shorthand(\r\n  $bleed\r\n) {\r\n  $margin: ();\r\n  $padding: ();\r\n  $return: ();\r\n\r\n  @each $key, $value in $bleed {\r\n    @if str-index($key, margin) {\r\n      $margin: map-merge($margin, ($key: $value));\r\n    } @else if str-index($key, padding) > 0 {\r\n      $padding: map-merge($padding, ($key: $value));\r\n    }\r\n  }\r\n\r\n  $props: (\r\n    margin: $margin,\r\n    padding: $padding,\r\n  );\r\n\r\n  @each $name, $map in $props {\r\n    $four: if(length(map-keys($map)) == 4, true, false);\r\n    $null: if(index(map-values($map), null), true, false);\r\n\r\n    @if $four and not($null) {\r\n      $top: map-get($map, '#{$name}-top');\r\n      $right: map-get($map, '#{$name}-right');\r\n      $bottom: map-get($map, '#{$name}-bottom');\r\n      $left: map-get($map, '#{$name}-left');\r\n\r\n      $tb: if($top == $bottom, $top, null);\r\n      $rl: if($right == $left, $right, null);\r\n      $all: if($tb == $rl, $tb, null);\r\n\r\n      $new: if($all, $all, null);\r\n\r\n      @if not($new) {\r\n        @if $tb and $rl {\r\n          $new: $tb $rl;\r\n        } @else if $rl {\r\n          $new: $top $rl $bottom;\r\n        } @else {\r\n          $new: $top $right $bottom $left;\r\n        }\r\n      }\r\n\r\n      $return: map-merge($return, ($name: $new));\r\n    } @else {\r\n      $return: map-merge($return, $map);\r\n    }\r\n  }\r\n\r\n  @return $return;\r\n}\r\n\r\n/* scss-combine:susy/breakpoint-plugin */\r\n// Breakpoint Integration\r\n// ======================\r\n\r\n$susy-media: () !default;\r\n$susy-media-fallback: false !default;\r\n\r\n$_susy-media-context: ();\r\n\r\n\r\n// Susy Breakpoint\r\n// ---------------\r\n// Change grids at different media query breakpoints.\r\n// - $query     : <min-width> [<max-width>] | <property> <value> | <map>\r\n// - $layout    : <settings>\r\n// - $no-query  : <boolean> | <selector>\r\n@mixin susy-breakpoint(\r\n  $query,\r\n  $layout: false,\r\n  $no-query: $susy-media-fallback\r\n) {\r\n  @include susy-media-router($query, $no-query) {\r\n    @if $layout {\r\n      @include with-layout($layout) {\r\n        @content;\r\n      }\r\n    } @else {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// Susy Media\r\n// ----------\r\n// - $query: <min-width> [<max-width>] | <property> <value>\r\n// - $no-query: <boolean> | <selector>\r\n@mixin susy-media(\r\n  $query,\r\n  $no-query: $susy-media-fallback\r\n) {\r\n  $old-context: $_susy-media-context;\r\n  $name: if(map-has-key($susy-media, $query), $query, null);\r\n  $query: susy-get-media($query);\r\n  $query: susy-parse-media($query);\r\n\r\n  @include susy-media-context($query, $name);\r\n\r\n  @if $no-query and type-of($no-query) != string {\r\n    @content;\r\n  } @else {\r\n    @media #{susy-render-media($query)} {\r\n      @content;\r\n    }\r\n\r\n    @if type-of($no-query) == string {\r\n      #{$no-query} & {\r\n        @content;\r\n      }\r\n    }\r\n  }\r\n\r\n  @include susy-media-context($old-context, $clean: true);\r\n}\r\n\r\n\r\n// Media Router\r\n// ------------\r\n// Rout media arguments to the correct mixin.\r\n@mixin susy-media-router(\r\n  $query,\r\n  $no-query: $susy-media-fallback\r\n) {\r\n  @if susy-support(breakpoint, (mixin: breakpoint), $warn: false) {\r\n    @include breakpoint($query, $no-query) {\r\n      @content;\r\n    }\r\n  } @else {\r\n    @include susy-media($query, $no-query) {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// Update Context\r\n// -------------\r\n// Set the new media context\r\n@mixin susy-media-context(\r\n  $query,\r\n  $name: null,\r\n  $clean: false\r\n) {\r\n  $query: map-merge((name: $name), $query);\r\n\r\n  @if $clean {\r\n    $_susy-media-context: $query !global;\r\n  } @else {\r\n    $_susy-media-context: map-merge($_susy-media-context, $query) !global;\r\n  }\r\n}\r\n\r\n\r\n// Media Context\r\n// -------------\r\n// Return the full media context, or a single media property (e.g. min-width)\r\n@function susy-media-context(\r\n  $property: false\r\n) {\r\n  @if $property {\r\n    @return map-get($_susy-media-context, $property);\r\n  } @else {\r\n    @return $_susy-media-context;\r\n  }\r\n}\r\n\r\n\r\n// Get Media\r\n// ---------\r\n// Return a named media-query from $susy-media.\r\n// - $name: <key>\r\n@function susy-get-media(\r\n  $name\r\n) {\r\n  @if map-has-key($susy-media, $name) {\r\n    $map-value: map-get($susy-media, $name);\r\n    @if ($name == $map-value) {\r\n      $name: $map-value;\r\n    } @else {\r\n      $name: susy-get-media($map-value);\r\n    }\r\n  }\r\n\r\n  @return $name;\r\n}\r\n\r\n\r\n// Render Media\r\n// ------------\r\n// Build a media-query string from various media settings\r\n@function susy-render-media(\r\n  $query\r\n) {\r\n  $output: null;\r\n  @each $property, $value in $query {\r\n    $string: null;\r\n\r\n    @if $property == media {\r\n      $string: $value;\r\n    } @else {\r\n      $string: '(#{$property}: #{$value})';\r\n    }\r\n\r\n    $output: if($output, '#{$output} and #{$string}', $string);\r\n  }\r\n\r\n  @return $output;\r\n}\r\n\r\n\r\n// Parse Media\r\n// -----------\r\n// Return parsed media-query settings based on shorthand\r\n@function susy-parse-media(\r\n  $query\r\n) {\r\n  $mq: null;\r\n  @if type-of($query) == map {\r\n    $mq: $query;\r\n  } @else if type-of($query) == number {\r\n    $mq: (min-width: $query);\r\n  } @else if type-of($query) == list and length($query) == 2 {\r\n    @if type-of(nth($query, 1)) == number {\r\n      $mq: (\r\n        min-width: min($query...),\r\n        max-width: max($query...),\r\n      );\r\n    } @else {\r\n      $mq: (nth($query, 1): nth($query, 2));\r\n    }\r\n  } @else {\r\n    $mq: (media: '#{$query}');\r\n  }\r\n\r\n  @return $mq;\r\n}\r\n\r\n\r\n\r\n\r\n// Variables\r\n/* scss-combine:vars/colors */\r\n$white: rgb(255,255,255);\r\n$black: rgb(0,0,0);\r\n\r\n$body-background-color: $white;\r\n$shadow-color: rgba($black,0.14);\r\n\r\n$body-color: stencilColor(\"body_color\");\r\n$navigation-color: stencilColor(\"navigation_color\");\r\n$header-color: stencilColor(\"header_color\");\r\n\r\n$primary-color: stencilColor(\"primary_color\");\r\n\r\n$accent-color: stencilColor(\"accent_color\");\r\n$border-color: stencilColor(\"border_color\");\r\n\r\n$navigation-hover: mix($navigation-color, $accent-color, 50%);\r\n\r\n$input-background-color: stencilColor(\"input_background_color\");\r\n$input-color: stencilColor(\"input_color\");\r\n$input-border-color: stencilColor(\"input_border_color\");\r\n\r\n$page-background-color: stencilColor(\"page_background_color\");\r\n$banner-background-color: stencilColor(\"banner_background_color\");\r\n$banner-link-color: stencilColor(\"banner_link_color\");\r\n\r\n$heading-color: stencilColor(\"heading_color\");\r\n\r\n$footer-background-color: stencilColor(\"footer_background_color\");\r\n$footer-color: stencilColor(\"footer_color\");\r\n\r\n$section-title-color: stencilColor(\"section_title_color\");\r\n\r\n$highlight-color: stencilColor(\"highlight_color\");\r\n$star-color: stencilColor(\"star_color\");\r\n\r\n$primary-button-background-color: stencilColor(\"primary_button_background_color\");\r\n$primary-button-color: $white;\r\n\r\n$secondary-button-color: $primary-color;\r\n\r\n$disabled-button-background: darken($input-background-color, 10%);\r\n$disabled-button-color: lighten($input-color, 30%);\r\n\r\n$lighter-text: lighten($body-color, 6.5%);\r\n$lightest-text: lighten($body-color, 20%);\r\n\r\n$error-color: stencilColor(\"error_color\");\r\n\r\n$promo-color: stencilColor(\"promo_color\");\r\n\r\n$mosaic-text-color: stencilColor(\"mosaic_text_color\");\r\n$mosaic-button-text: stencilColor(\"mosaic_button_text\");\r\n$mosaic-button-background: stencilColor(\"mosaic_button_background\");\r\n\r\n$select-border-color: #e6e6e6;\r\n$select-border-active: darken($select-border-color, 10%);\r\n$check-border-color: #bbbbbb;\r\n\r\n$breadcrumb-background-color: #f8f8f8;\r\n\r\n$placeholder-image-background: lighten($black, 75%);\r\n\r\n$alert-success: #54ca83;\r\n$alert-error: #de5949;\r\n$alert-info: #a6a6a6;\r\n\r\n/* scss-combine:vars/grid */\r\n// Susy grid settings\r\n\r\n$susy: (\r\n  columns: 12,\r\n  gutters: 0.6,\r\n  math: fluid,\r\n  output: float,\r\n\r\n  debug: (\r\n    image: hide,\r\n    output: background,\r\n  ),\r\n);\r\n\r\n$grid-small: (\r\n  columns: 12,\r\n  gutters: 0.3,\r\n\r\n  debug: (\r\n    image: hide,\r\n    output: background,\r\n  ),\r\n);\r\n\r\n$product: (\r\n  columns: 16,\r\n  gutters: 1,\r\n\r\n  debug: (\r\n    image: hide,\r\n    output: background,\r\n  ),\r\n);\r\n\r\n$cart-preview: (\r\n  columns: 12,\r\n  gutters: 1.5,\r\n\r\n  debug: (\r\n    image: hide,\r\n    output: background,\r\n  ),\r\n);\r\n\r\n$mobile-links: (\r\n  columns: 3,\r\n  gutters: 0.03,\r\n  gutter-position: before,\r\n);\r\n\r\n/* scss-combine:vars/typography */\r\n$primary-font: stencilFontFamily(\"primary-font\");\r\n$secondary-font: stencilFontFamily(\"secondary-font\");\r\n$mono-font: \"Monaco\", \"Consolas\", \"Lucida Console\", monospace;\r\n\r\n$body-font: $secondary-font;\r\n\r\n$heading-font: $primary-font;\r\n$heading-weight: 700;\r\n$button-weight: 700;\r\n\r\n$main-navigation-font: if(stencilString(\"main_navigation_font\") == \"primary\", $primary-font, $secondary-font);\r\n$footer-navigation-font: if(stencilString(\"footer_navigation_font\") == \"primary\", $primary-font, $secondary-font);\r\n$price-font: if(stencilString(\"price_font\") == \"primary\", $primary-font, $secondary-font);\r\n$button-font: if(stencilString(\"button_font\") == \"primary\", $primary-font, $secondary-font);\r\n\r\n$navigation-text-transform: stencilString(\"navigation_text_transform\");\r\n\r\n/* scss-combine:vars/variables */\r\n// Z-index from http://www.smashingmagazine.com/2014/06/sassy-z-index-management-for-complex-layouts/\r\n\r\n$elements: product-item-options, product-item-quickshop, blog-image, blog-title, cart-preview, branding, compare-tab, mosaic, primary-navigation, dropdown, active-dropdown, main-header, mobile-nav-mask;\r\n\r\n// Sizes\r\n\r\n$primary-navigation-height: 80px;\r\n$mobile-navbar-height: 48px;\r\n$mobile-nav-tools-height: 45px;\r\n\r\n// Background Image\r\n$site-background-image: stencilString(\"site_background_image\");\r\n\r\n$footer-alt-opacity: 1;\r\n\r\n\r\n// Library\r\n/* scss-combine:lib/mixins */\r\n$max-width: 1300px;\r\n$font-size: 13px;\r\n$gutter: 15px;\r\n$ease-out-quad: cubic-bezier(0.250,0.460,0.450,0.940);\r\n\r\n//Breakpoints. These are the low value of the range\r\n\r\n$medium: 768px;\r\n$large: 992px;\r\n$xlarge: 1160px;\r\n\r\n@mixin breakpoint($point) {\r\n  @if $point == s {\r\n    @include media($max: $medium) { @content; }\r\n  }\r\n  @if $point == m {\r\n    @include media($max: $large) { @content; }\r\n  }\r\n  @if $point == m-only {\r\n    @include media($min: $medium, $max: $large) { @content; }\r\n  }\r\n  @if $point == m-up {\r\n    @include media($min: $medium) { @content; }\r\n  }\r\n  @if $point == l {\r\n    @include media($max: $xlarge) { @content; }\r\n  }\r\n  @if $point == l-only {\r\n    @include media($min: $large, $max: $xlarge) { @content; }\r\n  }\r\n  @if $point == l-up {\r\n    @include media($min: $large) { @content; }\r\n  }\r\n  @if $point == xl-up {\r\n    @include media($min: $xlarge) { @content; }\r\n  }\r\n}\r\n\r\n@mixin antialias($font-color) {\r\n  @if (lightness($font-color) > 50) {\r\n    -moz-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    -o-font-smoothing: antialiased;\r\n    -webkit-font-smoothing: antialiased;\r\n  }\r\n}\r\n\r\n/* scss-combine:lib/extends */\r\n%heading-text-treatment {\r\n  font-family: $heading-font;\r\n  font-weight: $heading-weight;\r\n  color: $heading-color;\r\n  line-height: 1.45;\r\n}\r\n\r\n%section-title-text-treatment {\r\n  font-family: $heading-font;\r\n  font-weight: $heading-weight;\r\n  color: $section-title-color;\r\n}\r\n\r\n%center {\r\n  text-align: center;\r\n}\r\n\r\n%full-width {\r\n  margin: ($gutter * 3) ($gutter * 2) ($gutter * 4);\r\n\r\n  @include breakpoint(m) {\r\n    padding-right: $gutter;\r\n    padding-left: $gutter;\r\n    margin-top: $gutter * 2;\r\n    margin-bottom: $gutter * 2;\r\n  }\r\n}\r\n\r\n%content-padding {\r\n  padding-right: $gutter * 4;\r\n  padding-left: $gutter * 4;\r\n\r\n  @include breakpoint(l-only) {\r\n    padding-right: $gutter * 2;\r\n    padding-left: $gutter * 2;\r\n  }\r\n\r\n  @include breakpoint(m) {\r\n    padding-right: $gutter;\r\n    padding-left: $gutter;\r\n  }\r\n}\r\n\r\n%background-position-svg {\r\n  background-position: 50% 50%;\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n}\r\n\r\n%antialiased {\r\n  -moz-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  -o-font-smoothing: antialiased;\r\n  -webkit-font-smoothing: antialiased;\r\n}\r\n\r\n%button-reset {\r\n  padding: 0;\r\n  background: transparent;\r\n  border: 0;\r\n  appearance: normal;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n}\r\n\r\n/* scss-combine:lib/functions */\r\n// Optimize SVG url from http://codepen.io/jakob-e/pen/doMoML\r\n@function svg-url($svg){\r\n  //  Chunk up string in order to avoid \"stack level too deep\" error\r\n  $encoded:'';\r\n  $slice: 2000;\r\n  $index: 0;\r\n  $loops: ceil(str-length($svg)/$slice);\r\n  @for $i from 1 through $loops {\r\n    $chunk: str-slice($svg, $index, $index + $slice - 1);\r\n    //   Encode (may need a few extra replacements)\r\n    $chunk: str-replace($chunk,'\"','\\'');\r\n    $chunk: str-replace($chunk,'<','%3C');\r\n    $chunk: str-replace($chunk,'>','%3E');\r\n    $chunk: str-replace($chunk,'&','%26');\r\n    $chunk: str-replace($chunk,'#','%23');\r\n    $encoded: #{$encoded}#{$chunk};\r\n    $index: $index + $slice;\r\n  }\r\n  @return url(\"data:image/svg+xml;charset=utf8,#{$encoded}\");\r\n}\r\n\r\n//  Helper function to replace characters in a string\r\n@function str-replace($string, $search, $replace: '') {\r\n  $index: str-index($string, $search);\r\n  @if $index {\r\n    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\r\n  }\r\n  @return $string;\r\n}\r\n\r\n/* scss-combine:lib/icons */\r\n// todo: try to use sprites instead. convert to @extends where possible.\r\n\r\n// SVGs\r\n@mixin svg-background($size:\"\") {\r\n  @extend %background-position-svg;\r\n\r\n  @if $size != \"\" {\r\n    //scss-lint:disable ImportantRule\r\n    background-size: $size !important;\r\n  }\r\n\r\n  display: inline-block;\r\n  content: \"\";\r\n}\r\n\r\n@mixin icon-arrow-down($fill-color, $size:\"\") {\r\n  @include svg-background($size);\r\n  background-image: svg-url('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path fill=\"#{$fill-color}\" d=\"M0.867 4.911l12.133 16.178 12.133-16.178h-24.267z\"></path></svg>');\r\n}\r\n\r\n@mixin icon-chevron-left($fill-color, $size:\"\") {\r\n  @include svg-background($size);\r\n  background-image: svg-url('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path fill=\"#{$fill-color}\" d=\"M19.985 23.010l-11-11v1.98l11-11-1.98-1.98-11.99 11.99 11.99 11.99 1.98-1.98z\"></path></svg>');\r\n}\r\n\r\n@mixin icon-chevron-right($fill-color, $size:\"\") {\r\n  @include svg-background($size);\r\n  background-image: svg-url('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path fill=\"#{$fill-color}\" d=\"M7.995 24.99l11.99-11.99-11.99-11.99-1.98 1.98 11 11v-1.98l-11 11 1.98 1.98z\"></path></svg>');\r\n}\r\n\r\n@mixin button-bg() {\r\n  background-image: svg-url('<svg version=\"1.1\" preserveAspectRatio=\"none\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 40 40\"><polygon fill=\"#{rgba($black, 0.15)}\" points=\"0,36 40,4 40,40 0,40 \"/></svg>');\r\n  background-repeat: no-repeat;\r\n  background-size: 100%;\r\n}\r\n\r\n@mixin checkbox-unchecked($fill-color: $check-border-color, $size:\"\") {\r\n  @include svg-background($size);\r\n  background-image: svg-url('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path fill=\"#{$fill-color}\" d=\"M2.364 4.721v0 16.557c0 1.303 1.056 2.358 2.358 2.358h16.557c1.303 0 2.358-1.056 2.358-2.358v-16.557c0-1.303-1.056-2.358-2.358-2.358h-16.557c-1.303 0-2.358 1.056-2.358 2.358v0zM0 4.721v0c0-2.608 2.113-4.721 4.721-4.721h16.557c2.608 0 4.721 2.113 4.721 4.721v16.557c0 2.608-2.113 4.721-4.721 4.721h-16.557c-2.608 0-4.721-2.113-4.721-4.721v-16.557z\"></path></svg>');\r\n}\r\n\r\n@mixin checkbox-checked($fill-color: $primary-color, $size:\"\") {\r\n  @include svg-background($size);\r\n  background-image: svg-url('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path fill=\"#{$fill-color}\" d=\"M0 4.721v0c0-2.608 2.113-4.721 4.721-4.721h16.557c2.608 0 4.721 2.113 4.721 4.721v16.557c0 2.608-2.113 4.721-4.721 4.721h-16.557c-2.608 0-4.721-2.113-4.721-4.721v-16.557z\"></path><path fill=\"rgb(255, 255, 255)\" d=\"M18.864 7.039v0l1.618 1.472-9.403 10.459-5.462-5.462 2.056-2.068 3.828 3.828-1.028 0.027 7.865-8.736 0.527 0.48z\"></path></svg>');\r\n}\r\n\r\n@mixin radio-unchecked($fill-color: $check-border-color, $size:\"\") {\r\n  @include svg-background($size);\r\n  background-image: svg-url('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"> <path fill=\"#{$fill-color}\" d=\"M1.857 13v0 0c0 6.142 4.989 11.143 11.143 11.143v0c6.142 0 11.143-4.989 11.143-11.143v0c0-6.142-4.989-11.143-11.143-11.143v0c-6.142 0-11.143 4.989-11.143 11.143v0zM0 13v0c0-7.176 5.829-13 13-13 7.176 0 13 5.829 13 13 0 7.176-5.829 13-13 13-7.176 0-13-5.829-13-13v0z\"></path></svg>');\r\n}\r\n\r\n@mixin radio-checked($fill-color: $primary-color, $size:\"\") {\r\n  @include svg-background($size);\r\n  background-image: svg-url('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path fill=\"#{$check-border-color}\" d=\"M1.857 13v0 0c0 6.142 4.989 11.143 11.143 11.143v0c6.142 0 11.143-4.989 11.143-11.143v0c0-6.142-4.989-11.143-11.143-11.143v0c-6.142 0-11.143 4.989-11.143 11.143v0zM0 13v0c0-7.176 5.829-13 13-13 7.176 0 13 5.829 13 13 0 7.176-5.829 13-13 13-7.176 0-13-5.829-13-13v0z\"></path><path fill=\"#{$fill-color}\" d=\"M13 5.571c4.103 0 7.429 3.326 7.429 7.429s-3.326 7.429-7.429 7.429c-4.103 0-7.429-3.326-7.429-7.429s3.326-7.429 7.429-7.429z\"></path></svg>');\r\n}\r\n\r\n@mixin alert-success($fill-color: $white, $size:\"\") {\r\n  @include svg-background($size);\r\n  background-image: svg-url('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path fill=\"#{$fill-color}\" d=\"M13 26c7.18 0 13-5.82 13-13s-5.82-13-13-13c-7.18 0-13 5.82-13 13s5.82 13 13 13zM19.161 6.801l1.502 1.367-10.158 11.298-5.578-5.579 1.675-1.684 0.23 0.23 3.592 3.585 8.496-9.437 0.242 0.22z\"></path></svg>');\r\n}\r\n\r\n@mixin alert-info($fill-color: $white, $size:\"\") {\r\n  @include svg-background($size);\r\n  background-image: svg-url('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path fill=\"#{$fill-color}\" d=\"M13 26c-7.18 0-13-5.82-13-13s5.82-13 13-13c7.18 0 13 5.82 13 13s-5.82 13-13 13zM14.332 20.185v-9.788h-2.644v9.788h2.644zM14.352 8.806v-2.644h-2.644v2.644h2.644z\"></path></svg>');\r\n}\r\n\r\n@mixin alert-error($fill-color: $white, $size:\"\") {\r\n  @include svg-background($size);\r\n  background-image: svg-url('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path fill=\"#{$fill-color}\" d=\"M13 26c-7.18 0-13-5.82-13-13s5.82-13 13-13c7.18 0 13 5.82 13 13s-5.82 13-13 13zM13 14.481l5.403 5.405 1.479-1.479-5.403-5.405 5.403-5.405-1.479-1.479-5.403 5.405-5.403-5.405-1.479 1.479 5.403 5.405-5.403 5.405 1.479 1.479 5.403-5.405z\"></path></svg>');\r\n}\r\n\r\n\r\n// Module Dependencies\r\n/* scss-combine:../../node_modules/bc-modal/dist/scss/modal */\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: 980;\r\n  background-color: rgba(#000, 0.3);\r\n  display: none;\r\n  opacity: 0;\r\n\r\n  &.animating,\r\n  &.visible {\r\n    display: block;\r\n    transition: opacity 0.3s ease;\r\n  }\r\n\r\n  &.visible {\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.modal-wrapper {\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: 1000;\r\n  display: none;\r\n  overflow: hidden;\r\n  -webkit-overflow-scrolling: touch;\r\n  outline: 0;\r\n  opacity: 0;\r\n\r\n  &.animating,\r\n  &.visible {\r\n    display: block;\r\n    transition: opacity 0.2s ease;\r\n  }\r\n\r\n  &.animating-in {\r\n    transition-delay: 0.1s;\r\n  }\r\n\r\n  &.visible {\r\n    overflow-x: hidden;\r\n    overflow-y: auto;\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.modal {\r\n  position: relative;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n}\r\n\r\n\r\n// Core\r\n/* scss-combine:core/unavailable */\r\n.unavailable-container {\r\n  display: table;\r\n  text-align: center;\r\n  width: 100%;\r\n  height: 100vh;\r\n  font-size: 14px;\r\n\r\n  @media (min-width: 400px) {\r\n    font-size: 16px;\r\n  }\r\n}\r\n\r\n.unavailable-container-inner {\r\n  display: table-cell;\r\n  padding: 20px;\r\n  vertical-align: middle;\r\n}\r\n\r\n.unavailable-logo {\r\n  margin-top: 0;\r\n}\r\n\r\n.unavailable-heading {\r\n  font-size: 1.5em; // 24px desktop\r\n}\r\n\r\n.unavailable-message {\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n  font-size: 0.875em; // 14px desktop\r\n}\r\n\r\n\r\n// General\r\n/* scss-combine:general/fonts */\r\n\r\n@font-face {\r\n  font-family: \"Social Icons\";\r\n  src: url(\"/assets/pixelunionsocialicons-regular.eot\");\r\n  src: url(\"/assets/pixelunionsocialicons-regular.eot?#iefix\") format(\"embedded-opentype\"),\r\n       url(\"/assets/pixelunionsocialicons-regular.woff\") format(\"woff\");\r\n  font-weight: normal;\r\n  font-style: normal;\r\n}\r\n\r\n/* scss-combine:general/general */\r\n/* General */\r\n\r\nbody {\r\n  font-family: $body-font;\r\n  font-size: $font-size;\r\n  line-height: 1.666;\r\n  color: $body-color;\r\n  content: \"mobile\";\r\n\r\n  @include breakpoint(m-up) {\r\n    content: \"desktop\";\r\n  }\r\n}\r\n\r\n/* Links */\r\n\r\na {\r\n  color: $accent-color;\r\n  transition: color 0.2s $ease-out-quad;\r\n\r\n  &:hover {\r\n    @include hover($accent-color);\r\n  }\r\n}\r\n\r\n/* Headers */\r\n\r\nh1, h2, h3, h4, h5, h6 {\r\n  @extend %heading-text-treatment;\r\n}\r\n\r\nh1 { font-size: 36px; }\r\nh2 { font-size: 28px; }\r\nh3 { font-size: 20px; }\r\nh4 { font-size: 18px; }\r\nh5 { font-size: 14px; }\r\nh6 { font-size: 14px; }\r\n\r\n.page-heading {\r\n  @extend %heading-text-treatment, %center, %full-width;\r\n  font-size: 20px;\r\n}\r\n\r\n.section-title {\r\n  @extend %section-title-text-treatment, %center;\r\n  margin-top: 0;\r\n  font-size: 20px;\r\n}\r\n\r\n/* Basic elements */\r\n\r\nhr {\r\n  background: $border-color;\r\n}\r\n\r\ncite {\r\n  color: $accent-color;\r\n}\r\n\r\nimg {\r\n  height: auto;\r\n  max-width: 100%;\r\n}\r\n\r\n.main-content {\r\n  @extend %clearfix;\r\n  border-top: 1px solid $border-color;\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Hiding and Showing Content\r\n// Snippets borrowed from a11yproject:\r\n// http://a11yproject.com/posts/how-to-hide-content/\r\n\r\n%visually-hidden,\r\n.visually-hidden {\r\n  // scss-lint:disable ImportantRule\r\n  position: absolute !important;\r\n  width: 1px !important;\r\n  height: 1px !important;\r\n  padding: 0 !important;\r\n  overflow: hidden;\r\n  clip: rect(1px, 1px, 1px, 1px);\r\n  border: 0 !important;\r\n}\r\n\r\nbody:hover .visually-hidden a,\r\nbody:hover .visually-hidden input,\r\nbody:hover .visually-hidden button {\r\n  // scss-lint:disable ImportantRule\r\n  display: none !important;\r\n}\r\n\r\n.hidden {\r\n  display: none;\r\n  visibility: hidden;\r\n}\r\n\r\n.visible { display: block; }\r\n\r\n// ---------------------------------------------------------------- */\r\n\r\n/* Scroll Locking */\r\n\r\n.scroll-locked {\r\n  overflow-y: hidden;\r\n}\r\n\r\n.scroll-locked-medium {\r\n  @include breakpoint(m) {\r\n    overflow-y: hidden;\r\n  }\r\n}\r\n\r\n.show-for-sr {\r\n  @extend %visually-hidden;\r\n}\r\n\r\n.disabled {\r\n  // scss-lint:disable ImportantRule\r\n  cursor: not-allowed !important;\r\n}\r\n\r\n/* scss-combine:general/button */\r\n.button {\r\n  min-width: 140px;\r\n  padding: 12px 30px;\r\n  font-family: $button-font;\r\n  font-size: 13px;\r\n  font-weight: $button-weight;\r\n  letter-spacing: 0.05em;\r\n  color: $white;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  border: 1px solid;\r\n  // Todo: add theme setting for border-radius on buttons and inputs\r\n  border-radius: 3px;\r\n  transition: all 0.2s $ease-out-quad;\r\n\r\n  &.button-primary {\r\n    @include button-bg();\r\n    color: $white;\r\n    background-color: $primary-button-background-color;\r\n    border-color: darken($primary-button-background-color, 5%);\r\n\r\n    &:hover {\r\n      @include button-hover($accent-color, background-color);\r\n      color: $primary-button-background-color;\r\n    }\r\n  }\r\n\r\n  &.button-secondary {\r\n    color: $secondary-button-color;\r\n    background-color: $white;\r\n    border-color: $secondary-button-color;\r\n\r\n    &:hover {\r\n      color: $secondary-button-color;\r\n      background-color: mix($secondary-button-color, $white, 10%);\r\n    }\r\n  }\r\n\r\n  &.button-tertiary {\r\n    font-weight: normal;\r\n    letter-spacing: 0;\r\n    color: $primary-button-background-color;\r\n    text-transform: none;\r\n    background-color: $white;\r\n    border-color: $white;\r\n\r\n    &:hover {\r\n      color: $secondary-button-color;\r\n      background-color: $white;\r\n    }\r\n  }\r\n\r\n  &.button-small {\r\n    min-width: 100px;\r\n    padding: 8px 10px;\r\n    font-size: 11px;\r\n    font-weight: normal;\r\n  }\r\n\r\n  &.button-disabled {\r\n    color: $disabled-button-color;\r\n    cursor: not-allowed;\r\n    background: $disabled-button-background;\r\n    border-color: $disabled-button-background;\r\n\r\n    &:hover {\r\n      background-color: darken($disabled-button-background, 10%);\r\n    }\r\n  }\r\n\r\n  & + & {\r\n    margin-left: 11px;\r\n  }\r\n}\r\n\r\n.button.button-primary {\r\n    background-color: $body-color;\r\n    \r\n     &:hover {\r\n      color: darken($body-color, 10%);\r\n      background-color: darken($banner-background-color, 5%);\r\n    }\r\n}\r\n\r\n.button.button-secondary {\r\n    color: $body-color;\r\n    border-color: $body-color;\r\n    \r\n     &:hover {\r\n      color: darken($banner-background-color, 10%);\r\n      border-color: darken($banner-background-color, 10%);\r\n      background-color: lighten($border-color, 5%);\r\n    }\r\n}\r\n\r\n/* scss-combine:general/form */\r\n.option-unavailable {\r\n  opacity: 0.5;\r\n\r\n  .form-label-text { text-decoration: line-through; }\r\n}\r\n\r\n.form-input {\r\n  display: block;\r\n  width: 100%;\r\n  padding: 10px 15px;\r\n  color: $input-color;\r\n  background: $input-background-color;\r\n  border-color: $input-border-color;\r\n  border-radius: 3px;\r\n\r\n  &::placeholder {\r\n    //scss-lint:disable VariableForProperty\r\n    color: lighten($input-color, 20%);\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n}\r\n\r\n// -------------------------- Form Errors -------------------------- //\r\n// Default error classes, as dictated by validetta.js\r\n\r\n.form-inline-message {\r\n  display: block;\r\n\r\n  .form-field-invalid & {\r\n    color: $error-color;\r\n  }\r\n}\r\n\r\n// ---------------------------------------------------------------- //\r\n// Select Wrappers - Provides some additional style control for select elements\r\n\r\n.form-select-wrapper {\r\n  position: relative;\r\n  display: block;\r\n  min-height: 40px;\r\n  padding: 8px ($gutter * 2) 8px $gutter;\r\n  font-family: $primary-font;\r\n  font-size: 14px;\r\n  line-height: 1.6;\r\n  color: $input-color;\r\n  cursor: pointer;\r\n  background-color: $white;\r\n  border: 1px solid $select-border-color;\r\n  border-radius: 3px;\r\n\r\n  &:after {\r\n    @include icon-arrow-down($body-color);\r\n    position: absolute;\r\n    top: 50%;\r\n    right: $gutter;\r\n    width: 7px;\r\n    height: 7px;\r\n    transform: translateY(-50%);\r\n  }\r\n\r\n  &.is-focused { border-color: $select-border-active; }\r\n\r\n  .form & {\r\n    font-family: $secondary-font;\r\n  }\r\n\r\n  select {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    z-index: 2;\r\n    width: 100%; // needed for Firefox\r\n    height: 100%; // needed for IE\r\n    cursor: pointer;\r\n    opacity: 0;\r\n    appearance: none;\r\n  }\r\n}\r\n\r\n.form-selected-text-prefix {\r\n  margin-right: 5px;\r\n  font-weight: bold;\r\n}\r\n\r\n// ---------------------------------------------------------------- //\r\n// Common Form Classes:\r\n\r\n// Wraps each field component\r\n.form-field {\r\n  margin-bottom: $gutter * 1.5;\r\n}\r\n\r\n// Form label - applied to the label itself. Prefer to style off titles.\r\n.form-label {}\r\n\r\n// Applied to labels that are used as option titles\r\n.form-field-title {\r\n  @extend %section-title-text-treatment;\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.product-option-title {}\r\n.form-option-title {}\r\n\r\n// Applied to labels used as option text (radios/checkboxes)\r\n.form-label-text { user-select: none; }\r\n.product-option-text { user-select: none; }\r\n.form-option-text { user-select: none; }\r\n\r\n// inline inputs\r\n.form-field-product-list,\r\n.form-field-checkbox,\r\n.form-field-radio {\r\n  .form-field-control {\r\n    display: inline-block;\r\n  }\r\n\r\n  .form-input {\r\n    display: inline-block;\r\n    width: auto;\r\n  }\r\n\r\n  .form-radio,\r\n  .form-checkbox {\r\n    @extend %visually-hidden;\r\n\r\n    + .form-label-text:before {\r\n      position: relative;\r\n      top: 1px;\r\n      width: 12px;\r\n      height: 12px;\r\n      margin-right: 12px;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  .form-radio {\r\n    + .form-label-text:before {\r\n      @include radio-unchecked();\r\n    }\r\n\r\n    &:checked + .form-label-text:before {\r\n      @include radio-checked();\r\n    }\r\n  }\r\n\r\n  .form-checkbox {\r\n    + .form-label-text:before {\r\n      @include checkbox-unchecked();\r\n    }\r\n\r\n    &:checked + .form-label-text:before {\r\n      @include checkbox-checked();\r\n    }\r\n  }\r\n}\r\n\r\n// Required form element display 'required' text next title\r\n.required-text {\r\n  font-size: 0;\r\n  color: $white;\r\n\r\n  &:before {\r\n    margin-left: -2px;\r\n    font-size: $font-size;\r\n    font-weight: bold;\r\n    color: $highlight-color;\r\n    content: \"*\";\r\n  }\r\n}\r\n\r\n\r\n// ---------------------------------------------------------------- */\r\n// Swatch: Set of options displaying color / pattern choices\r\n\r\n.swatch-value {\r\n  font-weight: normal;\r\n\r\n  em {\r\n    font-style: normal;\r\n  }\r\n}\r\n\r\n.form-field-swatch {\r\n  .form-field-control { @extend %clearfix; }\r\n\r\n  .form-label-text { display: none; }\r\n\r\n  .swatch-wrap {\r\n    position: relative;\r\n    display: block;\r\n    float: left;\r\n    margin: 0 ($gutter / 2) ($gutter / 2) 0;\r\n\r\n    &:hover {\r\n      .swatch-pattern-expanded {\r\n        opacity: 1;\r\n        transform: translate(-50%, 0);\r\n        visibility: visible;\r\n        z-index: 5000;\r\n      }\r\n    }\r\n  }\r\n\r\n  // The block that the swatch sits within.\r\n  .swatch {\r\n    position: relative;\r\n    display: block;\r\n    width: 40px;\r\n    height: 40px;\r\n    padding: 2px;\r\n  }\r\n\r\n  // Blocks displaying the pattern / colors\r\n  .swatch-color {\r\n    position: absolute;\r\n    top: 3px;\r\n    right: 3px;\r\n    bottom: 3px;\r\n    left: 3px;\r\n    background: {\r\n      position: 50%;\r\n      repeat: no-repeat;\r\n      size: cover;\r\n    }\r\n\r\n    &.secondary {\r\n      left: 50%;\r\n    }\r\n\r\n    &.tertiary {\r\n      top: 50%;\r\n      left: 50%;\r\n    }\r\n  }\r\n\r\n  .swatch-radio {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 1;\r\n    width: 100%;\r\n    height: 100%;\r\n    cursor: pointer;\r\n    opacity: 0;\r\n\r\n    // Unselected Swatch Items\r\n    + .swatch {\r\n      border: 1px solid $select-border-color;\r\n      border-radius: 3px;\r\n    }\r\n\r\n    // Selected Swatch Item\r\n    &:checked + .swatch {\r\n      border-color: $primary-color;\r\n    }\r\n  }\r\n\r\n  .swatch-pattern-expanded {\r\n    position: absolute;\r\n    top: calc(100% + 5px);\r\n    left: calc(100% + 14px);\r\n    padding: 3px;\r\n    background-color: $body-background-color;\r\n    border: 1px solid $border-color;\r\n    border-radius: 3px;\r\n    opacity: 0;\r\n    visibility: hidden;\r\n    transition: opacity 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);\r\n\r\n    @media only screen and (max-device-width: 768px) { display: none; }\r\n  }\r\n\r\n  .swatch-pattern-image {\r\n    display: block;\r\n    width: 100px;\r\n    height: 100px;\r\n    background: {\r\n      position: 50%;\r\n      repeat: no-repeat;\r\n      size: cover;\r\n    }\r\n  }\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Date Field Components\r\n\r\n.form-field-date {\r\n  @extend %clearfix;\r\n\r\n  .form-date-year,\r\n  .form-date-month,\r\n  .form-date-day {\r\n    float: left;\r\n  }\r\n\r\n  .form-date-year { width: 44%; }\r\n\r\n  .form-date-month {\r\n    width: 25%;\r\n    margin-right: 3%;\r\n    margin-left: 3%;\r\n  }\r\n\r\n  .form-date-day { width: 25%; }\r\n}\r\n\r\n.product-event-bounds {\r\n  display: inline-block;\r\n  margin-top: 5px;\r\n}\r\n\r\n\r\n// ---------------------------------------------------------------- */\r\n// Rectangles - Form options displayed as a series of rectangles with text\r\n\r\n.form-field-rectangle {\r\n  @extend %clearfix;\r\n\r\n  .rectangle {\r\n    position: relative;\r\n    display: inline-block;\r\n    float: left;\r\n    margin: 0 ($gutter / 2) ($gutter / 2) 0;\r\n  }\r\n\r\n  .rectangle-text {\r\n    display: block;\r\n    min-width: 40px;\r\n    padding: 12px;\r\n    line-height: 1;\r\n    text-align: center;\r\n    border: 1px solid $select-border-color;\r\n    border-radius: 3px;\r\n  }\r\n\r\n  .form-input {\r\n    position: absolute;\r\n    z-index: 1;\r\n    width: 100%;\r\n    height: 100%;\r\n    cursor: pointer;\r\n    opacity: 0;\r\n\r\n    // Selected Item\r\n    &:checked + .rectangle-text {\r\n      color: $primary-color;\r\n      border-color: $primary-color;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ---------------------------------------------------------------- */\r\n// File\r\n\r\n.form-file-wrapper {\r\n  display: block;\r\n  padding: 5px;\r\n  border: 1px solid $border-color;\r\n  border-radius: 3px;\r\n}\r\n\r\n.form-file-types,\r\n.form-file-size {\r\n  display: inline-block;\r\n  margin-top: 10px;\r\n  margin-right: 5px;\r\n}\r\n\r\n\r\n// ---------------------------------------------------------------- */\r\n// Pick-Product\r\n\r\n.product-picklist-radio {\r\n  @extend %visually-hidden;\r\n\r\n  + .product-picklist-item-body:before {\r\n    @include radio-unchecked();\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 15px;\r\n    width: 12px;\r\n    height: 12px;\r\n    margin-right: 12px;\r\n    cursor: pointer;\r\n    transform: translateY(-50%);\r\n  }\r\n\r\n  &:checked + .product-picklist-item-body:before {\r\n    @include radio-checked();\r\n  }\r\n}\r\n\r\n.product-picklist-item {\r\n  min-width: 350px;\r\n  border-right: 1px solid $border-color;\r\n  border-bottom: 1px solid $border-color;\r\n  border-left: 1px solid $border-color;\r\n\r\n  @include breakpoint(s) { min-width: 0; }\r\n\r\n  &:first-of-type {\r\n    border-top: 1px solid $border-color;\r\n    border-radius: 3px 3px 0 0;\r\n  }\r\n\r\n  &:last-of-type { border-radius: 0 0 3px 3px; }\r\n}\r\n\r\n.product-picklist-item-body {\r\n  position: relative;\r\n  z-index: 1;\r\n  display: table;\r\n  width: 100%;\r\n  min-height: $gutter * 3;\r\n  padding: 10px 20px 10px 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.product-picklist-image-wrap {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 40px;\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n  max-width: 40px;\r\n  transform: translateY(-50%);\r\n}\r\n\r\n.product-picklist-image {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 0;\r\n  max-height: 100%;\r\n  padding: 3px;\r\n  transform: translateY(-50%);\r\n}\r\n\r\n.product-picklist-label-text {\r\n  display: table-cell;\r\n  padding-left: 90px;\r\n  line-height: 1.4;\r\n  color: inherit;\r\n  vertical-align: middle;\r\n\r\n  .picklist-none & { padding-left: 35px; }\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Quantity Increment Components\r\n\r\n.form-submit-container {\r\n  margin-bottom: 0;\r\n  font-size: 0;\r\n\r\n  .form-field-quantity-control,\r\n  .button {\r\n    height: 46px;\r\n    padding-top: 0;\r\n    padding-bottom: 0;\r\n    margin-bottom: $gutter * 1.5;\r\n    line-height: 46px;\r\n  }\r\n\r\n  &.add-to-cart-blurred {\r\n    .form-field-quantity-control,\r\n    .button {\r\n      opacity: 0.5;\r\n    }\r\n  }\r\n}\r\n\r\n.form-field-quantity-label .form-field-title {\r\n  display: inline-block;\r\n  float: left;\r\n  margin-right: $gutter;\r\n  margin-bottom: $gutter * 1.5;\r\n  font-size: 13px;\r\n  line-height: 40px;\r\n\r\n  &:after {\r\n    content: \":\";\r\n  }\r\n}\r\n\r\n.form-field-quantity-control {\r\n  @extend %clearfix;\r\n  position: relative;\r\n  display: inline-block;\r\n  float: left;\r\n  height: 40px;\r\n  max-width: 150px;\r\n  margin-right: $gutter;\r\n  margin-bottom: $gutter * 1.5;\r\n  line-height: 40px;\r\n\r\n  .form-input {\r\n    height: 100%;\r\n    padding-right: $gutter * 2;\r\n    padding-left: $gutter * 2;\r\n    font-size: 13px;\r\n    text-align: center;\r\n    background-color: lighten($input-background-color, 3%);\r\n    border-color: lighten($input-background-color, 3%);\r\n\r\n    &::-webkit-outer-spin-button,\r\n    &::-webkit-inner-spin-button {\r\n      -webkit-appearance: none;\r\n    }\r\n  }\r\n}\r\n\r\n.quantity-control {\r\n  position: absolute;\r\n  top: 0;\r\n  display: block;\r\n  width: $gutter * 2;\r\n  height: 100%;\r\n  font-size: 14px;\r\n  // line-height: 40px;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  user-select: none;\r\n\r\n  &:hover {\r\n    color: $primary-color;\r\n  }\r\n\r\n  &.quantity-increment { right: 0; }\r\n  &.quantity-decrement { left: 0; }\r\n  &.quantity-control-blurred { cursor: default; }\r\n}\r\n\r\n/* scss-combine:general/table */\r\n/* Tables */\r\n\r\ntable {\r\n  color: $body-color;\r\n  border-color: $border-color;\r\n}\r\n\r\nth {\r\n  @extend %heading-text-treatment;\r\n  color: $input-color;\r\n  background: $input-background-color;\r\n}\r\n\r\n/* scss-combine:general/reviews */\r\n// Submission Modal\r\n.review-modal-container {\r\n  display: none;\r\n}\r\n\r\n// Rating Stars (clickable)\r\n.input-stars {\r\n  position: relative;\r\n  display: inline-block;\r\n\r\n  &.form-field-error {\r\n    padding-bottom: 20px;\r\n  }\r\n\r\n  .star {\r\n    float: right;\r\n    width: 20px;\r\n    height: 20px;\r\n    color: $star-color;\r\n    cursor: pointer;\r\n\r\n    .star-full { display: none;}\r\n\r\n    &:hover,\r\n    &:hover ~ .star {\r\n      // scss-lint:disable NestingDepth\r\n      .star-full { display: block; }\r\n      .star-empty { display: none; }\r\n    }\r\n  }\r\n\r\n  > input:checked ~ label {\r\n    .star-full {\r\n      display: block;\r\n    }\r\n    .star-empty {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  .form-inline-message {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    white-space: nowrap;\r\n\r\n    + .form-inline-message { display: none; }\r\n  }\r\n}\r\n\r\n// Rating Stars (readonly)\r\n.rating-stars {\r\n  display: inline-block;\r\n\r\n  .star {\r\n    width: 20px;\r\n    height: 20px;\r\n    color: $star-color;\r\n  }\r\n\r\n  .star-empty {\r\n    fill: rgba($body-color, 0.3);\r\n  }\r\n\r\n  .star-full {\r\n    fill: $accent-color;\r\n  }\r\n}\r\n\r\n// Review Modal\r\n.modal-leave-review .modal-content {\r\n  @extend %clearfix;\r\n}\r\n\r\n.review-image-column {\r\n  @include breakpoint(s) { display: none; }\r\n\r\n  @include with-layout($product) { @include span(last 7 of 16); }\r\n}\r\n\r\n.review-form-column {\r\n  @include breakpoint(m-up) {\r\n    @include with-layout($product) { @include span(first 9 of 16); }\r\n  }\r\n}\r\n\r\n.review-image-caption {\r\n  @extend %section-title-text-treatment;\r\n  font-size: 14px;\r\n  text-align: center;\r\n}\r\n\r\n/* scss-combine:general/modals */\r\n.modal-overlay {\r\n  background-color: rgba($black, 0.5);\r\n}\r\n\r\n.modal {\r\n  max-width: 840px;\r\n  max-height: 90%;\r\n  padding: $gutter * 2;\r\n  overflow-y: scroll;\r\n  background-color: $body-background-color;\r\n  box-shadow: 0 1px 4px 0 $shadow-color;\r\n}\r\n\r\n.modal-heading {\r\n  padding-bottom: $gutter;\r\n  margin-top: 0;\r\n  margin-bottom: $gutter * 1.5;\r\n  font-size: 20px;\r\n  border-bottom: 1px solid $border-color;\r\n}\r\n\r\n.modal-content {\r\n  position: relative;\r\n\r\n  .modal-close {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    font-size: $font-size;\r\n    line-height: 1;\r\n    color: $black;\r\n\r\n    svg {\r\n      width: 16px;\r\n      height: 16px;\r\n    }\r\n  }\r\n}\r\n\r\n/* scss-combine:general/layout */\r\nbody {\r\n  background-color: $page-background-color;\r\n\r\n  @if ($site-background-image) {\r\n    background-attachment: fixed;\r\n    background-image: url(\"#{$site-background-image}\");\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n  }\r\n\r\n  @include breakpoint(m-up) {\r\n    padding: $gutter * 2;\r\n  }\r\n\r\n  @include breakpoint(m-only) {\r\n    &:before {\r\n      position: fixed;\r\n      top: 0;\r\n      left: 0;\r\n      z-index: index($elements, mobile-nav-mask);\r\n      display: block;\r\n      width: $gutter * 2;\r\n      height: 100%;\r\n      background-color: $page-background-color;\r\n      content: \"\";\r\n    }\r\n  }\r\n}\r\n\r\n.page-wrap {\r\n  width: 100%;\r\n  max-width: $max-width;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  background-color: $body-background-color;\r\n}\r\n\r\n.content {\r\n  @extend %clearfix;\r\n  padding: ($gutter * 2) ($gutter * 2) ($gutter * 3);\r\n  @include breakpoint(m) { padding: $gutter;}\r\n}\r\n\r\n.page-container {\r\n  @include container(710px);\r\n  margin-bottom: 70px;\r\n}\r\n\r\n/* scss-combine:general/navigation */\r\n.primary-navigation {\r\n  position: relative;\r\n  z-index: index($elements, primary-navigation);\r\n  height: $primary-navigation-height;\r\n  font-family: $main-navigation-font;\r\n  font-weight: bold;\r\n}\r\n\r\n.main-menu {\r\n  @extend %heading-text-treatment;\r\n  font-family: $main-navigation-font;\r\n}\r\n\r\n@include breakpoint(m) {\r\n  /* scss-combine:navigation-small */\r\n.primary-navigation {\r\n  @include antialias($white);\r\n  height: $mobile-navbar-height;\r\n  background: $body-color;\r\n\r\n  a {\r\n    color: $white;\r\n\r\n    &:hover,\r\n    &:active {\r\n      color: mix($white, $banner-background-color, 50%);\r\n    }\r\n  }\r\n\r\n  &-fixed {\r\n    position: fixed;\r\n    top: 0;\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n.main-menu {\r\n  position: fixed;\r\n  top: $mobile-navbar-height;\r\n  bottom: 0;\r\n  display: none;\r\n  width: 100%;\r\n  max-width: 324px;\r\n  background-color: $white;\r\n  box-shadow: 0 0 0 2000px rgba($white,0);\r\n\r\n  &.animating,\r\n  &.visible {\r\n    display: block;\r\n  }\r\n\r\n  &.animating {\r\n    transform: translateX(-100%);\r\n    transition: all 0.2s $ease-out-quad;\r\n\r\n    @include breakpoint(m-only) {\r\n      transform: translateX(calc(-100% - #{$gutter * 2}));\r\n    }\r\n  }\r\n\r\n  &.visible {\r\n    display: block;\r\n    transform: translateX(0);\r\n    box-shadow: 0 0 0 2000px $shadow-color;\r\n  }\r\n\r\n  >  ul > li {\r\n    border-bottom: 1px solid $border-color;\r\n  }\r\n\r\n  a {\r\n    display: block;\r\n    padding: $gutter $gutter + 5;\r\n    color: $accent-color;\r\n  }\r\n\r\n  .nav-tools {\r\n    position: fixed;\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 100%;\r\n  }\r\n\r\n  .currency-select-wrapper,\r\n  .customer-links > a {\r\n    display: block;\r\n    height: $mobile-nav-tools-height;\r\n    padding: 0;\r\n    line-height: $mobile-nav-tools-height;\r\n    color: $lighter-text;\r\n    text-align: center;\r\n    background-color: $border-color;\r\n\r\n    @include with-layout($mobile-links) { @include span(1 of 3); }\r\n  }\r\n\r\n  .currency-select-wrapper {\r\n    @include with-layout($mobile-links) { @include span(first 1); }\r\n  }\r\n}\r\n\r\n.menu-dropdown {\r\n  position: relative;\r\n\r\n  > a {\r\n    position: relative;\r\n    transition: all 0.2s $ease-out-quad;\r\n  }\r\n\r\n  &:not(.active) > a {\r\n    padding-right: 54px;\r\n\r\n    &:after {\r\n      @include icon-chevron-right($accent-color, 12px);\r\n      position: absolute;\r\n      top: 0;\r\n      right: 0;\r\n      width: 54px;\r\n      height: 100%;\r\n    }\r\n  }\r\n\r\n  &.active > a {\r\n    padding-left: 39px;\r\n    color: mix($navigation-color, $banner-background-color, 50%);\r\n    background-color: lighten($border-color, 3%);\r\n\r\n    &:before {\r\n      @include icon-chevron-left($accent-color, 12px);\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: 54px;\r\n      height: 100%;\r\n    }\r\n  }\r\n}\r\n\r\n.menu-dropdown > .dropdown {\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 100%;\r\n  z-index: index($elements, dropdown);\r\n  width: 100%;\r\n  margin-top: 1px;\r\n  background-color: $white;\r\n  transition: all 0.2s $ease-out-quad;\r\n\r\n  &.visible {\r\n    transform: translateX(-100%);\r\n  }\r\n}\r\n\r\n.nav-menu {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: $mobile-nav-tools-height + 2;\r\n  left: 0;\r\n  width: 100%;\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n}\r\n\r\n// Drill in styles\r\n.nav-menu-item {\r\n  max-height: 150px;\r\n  opacity: 1;\r\n  transition: max-height 0.2s $ease-out-quad 0.2s,\r\n              opacity 0.2s $ease-out-quad 0.4s;\r\n\r\n  &.hide-anchor > a{\r\n    display: none;\r\n  }\r\n\r\n  .dropdown-displayed & {\r\n    max-height: 0;\r\n    opacity: 0;\r\n    transition: opacity 0.2s $ease-out-quad,\r\n                max-height 0.2s $ease-out-quad 0.2s;\r\n\r\n    &.active {\r\n      max-height: 150px;\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  a {\r\n    letter-spacing: 0.075em;\r\n    text-transform: $navigation-text-transform;\r\n  }\r\n}\r\n\r\n.nav-submenu-item {\r\n  opacity: 1;\r\n  transition: max-height 0.2s $ease-out-quad 0.2s,\r\n  opacity 0.2s $ease-out-quad 0.4s;\r\n\r\n  &.hide {\r\n    display: none;\r\n  }\r\n\r\n  &.hide-anchor > a {\r\n    display: none;\r\n  }\r\n\r\n  > .nav-submenu {\r\n    display: none;\r\n\r\n    &.animating,\r\n    &.visible {\r\n      display: block;\r\n    }\r\n\r\n    // initial state for enter transition\r\n    &.animating-in {\r\n      transform: translateX(200%);\r\n      transition: transform 0.3s ease;\r\n    }\r\n\r\n    // initial state for leave transition\r\n    &.animating-out {\r\n      opacity: 0;\r\n      transition: opacity 0.2s ease;\r\n    }\r\n\r\n    // final states for both in and out\r\n    &.visible {\r\n      transform: translateX(0);\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  .nav-submenu-item:first-of-type {\r\n    border-top: 1px solid $border-color;\r\n  }\r\n\r\n  > a {\r\n    position: relative;\r\n    border-bottom: 1px solid $border-color;\r\n  }\r\n\r\n  > .submenu-trigger:not(.active) {\r\n    padding-right: 54px;\r\n\r\n    &:after {\r\n      @include icon-chevron-right($accent-color, 12px);\r\n      position: absolute;\r\n      top: 0;\r\n      right: 0;\r\n      width: 54px;\r\n      height: 100%;\r\n    }\r\n  }\r\n\r\n  > .submenu-trigger.active {\r\n    padding-left: 39px;\r\n    color: mix($navigation-color, $banner-background-color, 50%);\r\n    background-color: lighten($border-color, 3%);\r\n\r\n    &:before {\r\n      @include icon-chevron-left($accent-color, 12px);\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: 54px;\r\n      height: 100%;\r\n    }\r\n  }\r\n}\r\n\r\n.nav-submenu-item-all,\r\n.meganav-submenu-header {\r\n  display: none;\r\n}\r\n}\r\n\r\n@include breakpoint(l-up) {\r\n  /* scss-combine:navigation-large */\r\n.primary-navigation {\r\n  @include antialias($navigation-color);\r\n  max-width: 100%;\r\n\r\n  a {\r\n    color: $navigation-color;\r\n\r\n    &:hover,\r\n    &:active {\r\n      color: $navigation-hover;\r\n    }\r\n  }\r\n}\r\n\r\n.main-menu {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  text-align: center;\r\n  transform: translate(-50%, -50%);\r\n\r\n  .currency-select-wrapper,\r\n  .customer-links {\r\n    display: none;\r\n  }\r\n}\r\n\r\n// Styles for the Primary Navigation links\r\n.nav-menu-item {\r\n  position: relative;\r\n  display: inline-block;\r\n  margin-right: 5px;\r\n\r\n  &:last-of-type {\r\n    margin-right: 0;\r\n  }\r\n\r\n  > a {\r\n    display: block;\r\n    padding: 10px;\r\n    letter-spacing: 0.075em;\r\n    text-transform: $navigation-text-transform;\r\n  }\r\n\r\n  &.menu-dropdown {\r\n    > a:after {\r\n      @include icon-arrow-down($navigation-color);\r\n      width: 6px;\r\n      height: 6px;\r\n      margin-left: 5px;\r\n    }\r\n\r\n    &.active > a { color: $accent-color; }\r\n    &.active > a:after { @include icon-arrow-down($accent-color); }\r\n  }\r\n}\r\n\r\n// Styles for the Dropdown Menus\r\n.menu-dropdown:not(.nav-submenu-item) {\r\n  text-align: left;\r\n\r\n  &.active > a {\r\n    position: relative;\r\n    z-index: index($elements, active-dropdown);\r\n\r\n    &:before {\r\n      position: absolute;\r\n      top: -2px;\r\n      right: -10px;\r\n      bottom: -7px;\r\n      left: -10px;\r\n      z-index: -1;\r\n      display: block;\r\n      background-color: $body-background-color;\r\n      content: \"\";\r\n      box-shadow: 0 -3px 3px -3px $shadow-color,\r\n                  3px 0 3px -3px $shadow-color,\r\n                  -3px 0 3px -3px $shadow-color;\r\n    }\r\n  }\r\n\r\n  > .dropdown {\r\n    position: absolute;\r\n    top: calc(100% + 4px);\r\n    left: -10px;\r\n    z-index: index($elements, dropdown);\r\n    display: none;\r\n    min-width: 220px;\r\n    max-height: 700px;\r\n    padding: 20px 20px 15px;\r\n    overflow-y: auto;\r\n    background-color: $body-background-color;\r\n    box-shadow: 0 1px 4px 0 $shadow-color;\r\n\r\n    &.animating,\r\n    &.visible {\r\n      display: block;\r\n    }\r\n  }\r\n}\r\n\r\n// Styles for nested navigations\r\n.nav-submenu-item {\r\n  margin-bottom: 13px;\r\n  font-size: $font-size;\r\n  font-weight: 400;\r\n  line-height: 1.1;\r\n  text-transform: none;\r\n\r\n  &:last-of-type {\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  a {\r\n    color: $heading-color;\r\n  }\r\n}\r\n\r\n.nav-menu-item > .nav-submenu > .nav-submenu-item {\r\n  font-weight: 700;\r\n}\r\n\r\n.nav-submenu {\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n  margin-left: 10px;\r\n}\r\n\r\n.nav-menu-item > .nav-submenu {\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  margin-left: 0;\r\n}\r\n\r\n.nav-submenu-item > .nav-submenu {\r\n  display: none;\r\n\r\n  &.animating,\r\n  &.visible {\r\n    display: block;\r\n  }\r\n\r\n  // initial state for enter transition\r\n  &.animating-in {\r\n    transform: translateX(-5%);\r\n    transition: transform 0.2s ease;\r\n  }\r\n\r\n  // initial state for leave transition\r\n  &.animating-out {\r\n    opacity: 0;\r\n    transition: opacity 0.2s ease;\r\n  }\r\n\r\n  // final states for both in and out\r\n  &.visible {\r\n    transform: translateY(0);\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.submenu-trigger.active {\r\n  font-weight: 700;\r\n}\r\n\r\n.js .nav-menu {\r\n  visibility: hidden;\r\n\r\n  &.show-menu {\r\n    visibility: visible;\r\n  }\r\n}\r\n\r\n  /* scss-combine:mega-navigation */\r\n@media (min-width: 992px) {\r\n  .show_categories_meganav {\r\n\r\n    .meganav-submenu-header {\r\n      display: none;\r\n    }\r\n\r\n    .menu-meganav {\r\n      > .nav-submenu.meganav-submenu {\r\n        min-height: 330px;\r\n        white-space: nowrap;\r\n\r\n        &.active,\r\n        &.visible {\r\n          display: flex;\r\n        }\r\n\r\n        > .meganav-submenu-item {\r\n          flex-shrink: 0;\r\n          display: inline-block;\r\n          width: 200px;\r\n          padding-right: 30px;\r\n          white-space: normal;\r\n\r\n          > .nav-submenu {\r\n            display: block;\r\n            margin-left: 0;\r\n          }\r\n\r\n          .meganav-submenu.nav-submenu {\r\n            // initial state for enter transition\r\n            &.animating-in {\r\n              opacity: 0;\r\n              transform: translateY(-5%);\r\n              transition: all 0.2s ease;\r\n            }\r\n\r\n            // initial state for leave transition\r\n            &.animating-out {\r\n              opacity: 0;\r\n              transform: translateY(-5%);\r\n              transition: all 0.2s ease;\r\n            }\r\n\r\n            // final states for both in and out\r\n            &.visible {\r\n              transform: translateY(0);\r\n              opacity: 1;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .show_categories_meganav_large {\r\n\r\n    .menu-meganav {\r\n      > .nav-submenu.meganav-submenu {\r\n        width: calc(100vw - 60px);\r\n        max-width: 1300px;\r\n        min-height: 330px;\r\n        padding-top: 50px;\r\n        box-sizing: border-box;\r\n\r\n        .meganav-divider {\r\n          position: absolute;\r\n          left: 250px;\r\n          top: 50px;\r\n          bottom: 50px;\r\n          width: 1px;\r\n          height: calc(100% - 100px);\r\n          background-color: $border-color;\r\n        }\r\n\r\n        .current > .meganav-submenu-item {\r\n          padding-right: 120px;\r\n        }\r\n\r\n        > .meganav-submenu-item {\r\n          max-width: 250px;\r\n          margin-bottom: 0;\r\n          padding-bottom: 14px;\r\n\r\n          &:last-of-type {\r\n            margin-bottom: 40px;\r\n          }\r\n\r\n          > a {\r\n            letter-spacing: 1px;\r\n            line-height: 1.08;\r\n            text-transform: uppercase;\r\n          }\r\n\r\n          > .nav-submenu {\r\n            position: absolute;\r\n            top: 50px;\r\n            bottom: 0;\r\n            left: 300px;\r\n            margin-top: auto;\r\n            margin-bottom: auto;\r\n\r\n            &.animating,\r\n            &.visible {\r\n              display: flex;\r\n              flex-direction: column;\r\n              flex-wrap: wrap;\r\n            }\r\n\r\n            // initial state for enter transition\r\n            &.animating-in {\r\n              opacity: 0;\r\n              transform: translateX(10%);\r\n              transition: transform 0.2s ease, opacity 0.2s ease;\r\n            }\r\n\r\n            // initial state for leave transition\r\n            &.animating-out {\r\n              opacity: 0;\r\n              transform: translateX(10%);\r\n              transition: transform 0.2s ease, opacity 0.2s ease;\r\n            }\r\n\r\n            &.visible {\r\n              transform: translateX(0);\r\n              opacity: 1;\r\n            }\r\n\r\n            > .meganav-submenu-header .meganav-back {\r\n              display: none;\r\n            }\r\n\r\n            .nav-submenu-item {\r\n\r\n              &.hide {\r\n                display: none;\r\n              }\r\n\r\n              > .submenu-trigger.active {\r\n                display: none;\r\n              }\r\n\r\n              > .nav-submenu {\r\n                margin: 0;\r\n\r\n                &.animating,\r\n                &.visible {\r\n                  display: flex;\r\n                  flex-direction: column;\r\n                  flex-wrap: wrap;\r\n                }\r\n\r\n                // initial state for enter transition\r\n                &.animating-in {\r\n                  opacity: 0;\r\n                  transform: translateX(10%);\r\n                  transition: transform 0.2s ease, opacity 0.2s ease;\r\n                }\r\n\r\n                // initial state for leave transition\r\n                &.animating-out {\r\n                  opacity: 0;\r\n                  transform: translateX(10%);\r\n                  transition: transform 0.2s ease, opacity 0.2s ease;\r\n                }\r\n\r\n                &.visible {\r\n                  transform: translateX(0);\r\n                  opacity: 1;\r\n                }\r\n              }\r\n            }\r\n\r\n            .nav-submenu.current {\r\n              padding-top: 40px;\r\n            }\r\n          }\r\n        }\r\n\r\n        > .meganav-submenu-item {\r\n          > a {\r\n            color: $accent-color;\r\n          }\r\n\r\n          &.blurred > a {\r\n            color: $navigation-hover;\r\n          }\r\n        }\r\n      }\r\n\r\n      .nav-submenu-item-all {\r\n        display: none;\r\n      }\r\n    }\r\n\r\n    .meganav-submenu-header {\r\n      position: absolute;\r\n      top: -50px;\r\n\r\n      &.hide {\r\n        display: none;\r\n      }\r\n\r\n      .meganav-back {\r\n        padding-bottom: 12px;\r\n        font-size: 12px;\r\n        letter-spacing: 0.1px;\r\n        line-height: 1.17;\r\n        color: $accent-color;\r\n        cursor: pointer;\r\n\r\n        &::before {\r\n          width: 12px;\r\n          height: 8px;\r\n          margin-right: 5px;\r\n          @include icon-chevron-left($accent-color, 12px);\r\n        }\r\n      }\r\n\r\n      .meganav-submenu-name {\r\n        font-size: 18px;\r\n        font-weight: 700;\r\n        line-height: 0.78;\r\n        color: $accent-color;\r\n      }\r\n    }\r\n  }\r\n}\r\n}\r\n\r\n/* scss-combine:general/header */\r\n.main-header {\r\n  position: relative;\r\n  z-index: index($elements, main-header);\r\n  height: 220px;\r\n  font-size: 13px;\r\n\r\n  @include breakpoint(m) {\r\n    color: $white;\r\n  }\r\n\r\n  @include breakpoint(m-up) {\r\n    height: 328px;\r\n  }\r\n\r\n  @include breakpoint(l-up) {\r\n    height: 380px;\r\n    color: $navigation-color;\r\n  }\r\n\r\n  background-color: $header-color;\r\n\r\n  &:first-child {\r\n    @include breakpoint(l-up) {\r\n      border-top: 4px solid $banner-background-color;\r\n    }\r\n  }\r\n}\r\n\r\n.navigation-toggle {\r\n  @extend %button-reset;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: $gutter;\r\n  transform: translateY(-50%);\r\n\r\n  @include breakpoint(l-up) {\r\n    display: none;\r\n  }\r\n\r\n  .icon-menu {\r\n    position: relative;\r\n    top: 4px;\r\n    width: 20px;\r\n    height: 20px;\r\n  }\r\n}\r\n\r\n.search-form {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: $gutter * 2;\r\n  transform: translateY(-50%);\r\n\r\n  @include breakpoint(m) {\r\n    left: $gutter * 2 + 24px;\r\n  }\r\n\r\n  .icon-search {\r\n    position: relative;\r\n    top: 4px;\r\n    width: 16px;\r\n    height: 16px;\r\n  }\r\n\r\n  .search-input {\r\n    margin-left: 5px;\r\n    color: $navigation-color;\r\n    background-color: transparent;\r\n    border: 0;\r\n    appearance: none;\r\n\r\n    &::placeholder {\r\n      color: rgba($navigation-color, 0.5);\r\n\r\n      @include breakpoint(m) {\r\n        color: transparent;\r\n      }\r\n    }\r\n\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n\r\n    @include breakpoint(m) {\r\n      color: $white;\r\n\r\n      &:focus::placeholder {\r\n        color: rgba($white, 0.5);\r\n      }\r\n    }\r\n  }\r\n\r\n  .search-label {\r\n    padding-top: 10px;\r\n    padding-bottom: 10px;\r\n    cursor: text;\r\n  }\r\n}\r\n\r\n.header-tools {\r\n  position: absolute;\r\n  top: 50%;\r\n  right: $gutter;\r\n  transform: translateY(-50%);\r\n\r\n  @include breakpoint(l-up) {\r\n    right: $gutter * 2;\r\n  }\r\n\r\n  .currency-select-wrapper,\r\n  .customer-links {\r\n    display: inline-block;\r\n    margin-right: $gutter;\r\n\r\n    @include breakpoint(m) {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  .currency-select-wrapper,\r\n  .customer-links > a {\r\n    padding-top: 10px;\r\n    padding-bottom: 10px;\r\n  }\r\n\r\n  .cart-preview-trigger {\r\n    display: inline-block;\r\n  }\r\n}\r\n\r\n.cart-preview-trigger {\r\n\r\n  .icon-cart {\r\n    position: relative;\r\n    top: 4px;\r\n    width: 18px;\r\n    height: 18px;\r\n  }\r\n\r\n  .cart-preview-label {\r\n    display: none;\r\n\r\n    @include breakpoint(m) {\r\n      display: inline;\r\n    }\r\n  }\r\n\r\n  .cart-preview-quantity {\r\n    @include breakpoint(m) {\r\n      &:before {\r\n        content: \"(\";\r\n      }\r\n\r\n      &:after {\r\n        content: \")\";\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.currency-select-wrapper {\r\n  position: relative;\r\n  cursor: pointer;\r\n  transition: color 0.2s $ease-out-quad;\r\n\r\n  select {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    z-index: 2;\r\n    width: 100%; // needed for Firefox\r\n    height: 100%; // needed for IE\r\n    cursor: pointer;\r\n    opacity: 0;\r\n    appearance: none;\r\n  }\r\n\r\n  .icon-arrow-down {\r\n    position: relative;\r\n    top: -1px;\r\n    width: 6px;\r\n    height: 6px;\r\n    margin-left: 2px;\r\n  }\r\n\r\n  &:hover,\r\n  &:active {\r\n    color: $navigation-hover;\r\n  }\r\n}\r\n\r\n.customer-links {\r\n  cursor: default;\r\n\r\n  .customer-link-logout {\r\n    color: lighten($navigation-color, 50%);\r\n\r\n    @include breakpoint(l-up) {\r\n      &:before { content: \"(\"; }\r\n      &:after { content: \")\"; }\r\n    }\r\n  }\r\n}\r\n\r\n.branding {\r\n  position: absolute;\r\n  top: calc(50% + #{$primary-navigation-height / 3});\r\n  left: 42%;\r\n  z-index: index($elements, branding);\r\n  transform: translate(-40%, -40%);\r\n\r\n  @include media($max: 315px) {\r\n    width: 100%;\r\n    padding-right: 10px;\r\n    padding-left: 10px;\r\n  }\r\n\r\n  .logo { display: block; }\r\n\r\n  .header-logo-image {\r\n    max-width: 300px;\r\n    max-height: 120px;\r\n\r\n    @include breakpoint(m-up) {\r\n      max-width: 140%;\r\n      max-height: 200px;\r\n    }\r\n\r\n    @include media($max: 315px) {\r\n      max-width: 100%;\r\n    }\r\n  }\r\n\r\n  .text {\r\n    margin-right: $gutter / 2;\r\n    margin-left: $gutter / 2;\r\n    text-align: center;\r\n\r\n    a {\r\n      color: $navigation-color;\r\n\r\n      // scss-lint:disable NestingDepth\r\n      &:hover,\r\n      &:active {\r\n        color: $navigation-hover;\r\n      }\r\n    }\r\n\r\n    @include breakpoint(s) {\r\n      font-size: 1.8em;\r\n    }\r\n\r\n    @include breakpoint(m-up) {\r\n      margin-right: $gutter * 2;\r\n      margin-left: $gutter * 2;\r\n    }\r\n  }\r\n}\r\n\r\n/* scss-combine:general/footer */\r\n// Footer Layout\r\n.main-footer {\r\n  @extend %clearfix;\r\n  padding: 40px 30px;\r\n  color: $footer-color;\r\n  background-color: $footer-background-color;\r\n  background-clip: padding-box;\r\n\r\n  @if lightness($footer-background-color) < 80% {\r\n    @extend %antialiased;\r\n  } @else {\r\n    border-top: 1px solid $border-color;\r\n  }\r\n\r\n  @include breakpoint(m) {\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    .footer-navigation {\r\n      margin-right: 0;\r\n      margin-left: 0;\r\n    }\r\n\r\n    .footer-site-subscribe {\r\n      order: 1;\r\n    }\r\n\r\n    .footer-bottom-row {\r\n      order: 2;\r\n    }\r\n  }\r\n\r\n  @include breakpoint(l-up) {\r\n    padding: 47px 35px 33px;\r\n  }\r\n\r\n  a {\r\n    color: inherit;\r\n\r\n    &:hover {\r\n      @if lightness($footer-background-color) < 80% {\r\n        color: mix($white, $footer-background-color, 50%);\r\n      } @else {\r\n        color: mix($accent-color, $footer-background-color, 50%);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Footer Modules\r\n\r\n.site-footer-item {\r\n  @include breakpoint(m) {\r\n    margin-bottom: $gutter * 2;\r\n  }\r\n}\r\n\r\n// Branding\r\n.footer-branding {\r\n  @include breakpoint(m) {\r\n    text-align: center;\r\n  }\r\n\r\n  @include breakpoint(l-up) {\r\n    @include span(2 of 12);\r\n    max-width: 100%;\r\n\r\n    .social-icons-first & {\r\n      @include span(last 2 of 12);\r\n    }\r\n  }\r\n\r\n  .logo { display: block; }\r\n\r\n  .footer-logo-image {\r\n    max-width: 250px;\r\n  }\r\n\r\n  .text {\r\n    font-size: 20px;\r\n    color: inherit;\r\n  }\r\n}\r\n\r\n// Navigation\r\n.footer-navigation {\r\n  @include container;\r\n  font-family: $footer-navigation-font;\r\n  font-weight: bold;\r\n\r\n  @include breakpoint(l-up) {\r\n    @include span(5 of 12);\r\n    @include pre(0.5 of 12);\r\n    @include post(0.5 of 12);\r\n  }\r\n}\r\n\r\n.footer-menu {\r\n  font-size: 0;\r\n  text-transform: uppercase;\r\n\r\n  @include breakpoint(s) {\r\n    @include span(12 of 12);\r\n    margin-bottom: $gutter * 2;\r\n  }\r\n\r\n  @include breakpoint(m-up) {\r\n    margin-top: -5px;\r\n\r\n    // Sets 3 Columns if there are 3 Menus, 2 Columns if there are 2 Menus\r\n    &:nth-last-child(3):first-child,\r\n    &:nth-last-child(3):first-child ~ & {\r\n      @include span(4 of 12);\r\n\r\n      &:last-of-type { @include last; }\r\n    }\r\n\r\n    &:nth-last-child(2):first-child,\r\n    &:nth-last-child(2):first-child ~ & {\r\n      @include span(6 of 12);\r\n\r\n      &:last-of-type { @include last; }\r\n    }\r\n  }\r\n}\r\n\r\n.footer-menu-header,\r\n.footer-menu-item,\r\n.footer-menu-catchall {\r\n  margin-bottom: 5px;\r\n  font-size: $font-size;\r\n  letter-spacing: 0.05em;\r\n\r\n  @include breakpoint(m) { text-align: center; }\r\n}\r\n\r\n.footer-menu-header {\r\n  margin-top: 0;\r\n  margin-bottom: 10px;\r\n  font-size: $font-size - 1;\r\n  opacity: $footer-alt-opacity;\r\n  text-transform: uppercase;\r\n}\r\n\r\n.footer-social-header {\r\n  margin-top: -4px;\r\n  font-size: $font-size - 1;\r\n}\r\n\r\n.footer-menu-catchall {\r\n  margin-top: 5px;\r\n  font-size: $font-size - 2;\r\n\r\n  &:after { content: \"\\203A\";}\r\n}\r\n\r\n.footer-menu-tier-secondary {\r\n  display: none;\r\n}\r\n\r\n// Subscribe\r\n.footer-site-subscribe {\r\n  @include breakpoint(l) {\r\n    .social-nav {\r\n      margin-bottom: $gutter * 2;\r\n    }\r\n  }\r\n\r\n  @include breakpoint(l-up) {\r\n    @include span(last 4 of 12);\r\n\r\n    .social-icons-first & {\r\n      @include span(first 4 of 12);\r\n      margin-right: 0;\r\n    }\r\n  }\r\n\r\n  @include breakpoint(s) {\r\n    .social-icons-first & {\r\n      order: 0;\r\n    }\r\n  }\r\n}\r\n\r\n.subscription-form {\r\n  @include breakpoint(m) {\r\n    text-align: center;\r\n  }\r\n\r\n  .form-input,\r\n  .button {\r\n    width: 100%;\r\n    vertical-align: bottom;\r\n\r\n    @include breakpoint(m) {\r\n      height: 41px;\r\n      max-width: 215px;\r\n      margin-right: 5px;\r\n    }\r\n\r\n    @include breakpoint(s) {\r\n      margin-bottom: $gutter / 2;\r\n    }\r\n  }\r\n\r\n  .button {\r\n    min-width: 0;\r\n    padding-right: $gutter;\r\n    padding-left: $gutter;\r\n\r\n    @include breakpoint(l-up) {\r\n      margin-top: $gutter;\r\n    }\r\n  }\r\n}\r\n\r\n// Social navigation\r\n\r\n\r\n.social-nav-list {\r\n  font-size: 0;\r\n\r\n  @include breakpoint(m) {\r\n    text-align: center;\r\n  }\r\n\r\n  @include breakpoint(l-up) {\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n  }\r\n}\r\n\r\n.social-link {\r\n  display: inline-block;\r\n  margin-right: $gutter;\r\n  font-size: $font-size;\r\n\r\n  &:last-of-type {\r\n    margin-right: 0;\r\n  }\r\n\r\n  > a {\r\n    display: block;\r\n    width: 20px;\r\n    height: 20px;\r\n  }\r\n\r\n  svg {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n}\r\n\r\n// Footer bottom row\r\n\r\n.footer-bottom-row {\r\n  @include breakpoint(l-up) {\r\n    @include span(12 of 12);\r\n    position: relative;\r\n    margin-top: 80px;\r\n  }\r\n}\r\n\r\n.footer-accounts,\r\n.footer-trademark {\r\n  @include breakpoint(l-up) {\r\n    @include span(6 of 12);\r\n  }\r\n}\r\n\r\n// Accounts\r\n.footer-accounts {\r\n  @include breakpoint(m) {\r\n    margin-top: $gutter;\r\n    text-align: center;\r\n  }\r\n\r\n  @include breakpoint(l-up) {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    z-index: 1;\r\n  }\r\n}\r\n\r\n.footer-accounts-list {\r\n  font-size: 0;\r\n  opacity: $footer-alt-opacity;\r\n\r\n  > li {\r\n    display: inline-block;\r\n    margin-right: $gutter;\r\n    font-size: $font-size;\r\n\r\n    &:last-of-type {\r\n      margin-right: 0;\r\n    }\r\n  }\r\n}\r\n\r\n// Trademark\r\n.footer-trademark {\r\n  opacity: $footer-alt-opacity;\r\n\r\n  @include breakpoint(m) {\r\n    margin-top: $gutter * 2;\r\n    text-align: center;\r\n  }\r\n\r\n  @include breakpoint(l-up) {\r\n    @include last;\r\n    margin-top: $gutter;\r\n    text-align: right;\r\n  }\r\n}\r\n\r\n// Payment Icons\r\n.footer-payment-icons {\r\n  @include breakpoint(l-up) {\r\n    @include span(12 of 12);\r\n    @include break;\r\n  }\r\n}\r\n\r\n.footer-payment-icons-list {\r\n  font-size: 0;\r\n  opacity: $footer-alt-opacity;\r\n  display: grid;\r\n\r\n  @include breakpoint(m) {\r\n    text-align: center;\r\n  }\r\n\r\n  @include breakpoint(l-up) {\r\n    text-align: right;\r\n  }\r\n\r\n  > li {\r\n    display: inline-block;\r\n    margin-right: $gutter;\r\n    opacity: 0.7;\r\n\r\n    &:last-of-type { margin-right: 0; }\r\n\r\n    > svg {\r\n      width: 40px;\r\n      height: 40px;\r\n    }\r\n  }\r\n}\r\n\r\n.footer-copyright {\r\n  display: block;\r\n}\r\n/* scss-combine:general/tabs */\r\n.tab-content-panel {\r\n  display: none;\r\n\r\n  &.active {\r\n    display: block;\r\n  }\r\n}\r\n\r\n.product-tabs-menu {\r\n  margin-top: 40px;\r\n  margin-bottom: 25px;\r\n}\r\n\r\n.product-tabs-list {\r\n  font-size: 0;\r\n}\r\n\r\n.product-tab-title {\r\n  display: inline-block;\r\n  margin-right: $gutter * 2;\r\n  font-family: $primary-font;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n\r\n  &:last-of-type {\r\n    margin-right: 0;\r\n  }\r\n}\r\n\r\n.product-tab-link {\r\n  color: $lightest-text;\r\n\r\n  .active & {\r\n    color: darken($accent-color, 5%);\r\n  }\r\n}\r\n\r\n/* scss-combine:general/blog-index */\r\n.blog-index {\r\n  @include container();\r\n}\r\n\r\n.blog-item {\r\n  margin-bottom: 50px;\r\n\r\n  @include breakpoint(l-up) { @include gallery(6 of 12); }\r\n}\r\n\r\n.blog-item-link { display: block; }\r\n\r\n.blog-item-featured-image {\r\n  position: relative;\r\n  z-index: index($elements, blog-image);\r\n  overflow: hidden;\r\n  background-color: $placeholder-image-background;\r\n  background-position: center;\r\n  background-size: cover;\r\n\r\n  &:before {\r\n    display: block;\r\n    width: 100%;\r\n    padding-top: 55%;\r\n    content: \"\";\r\n  }\r\n}\r\n\r\n.blog-item-header {\r\n  margin-top: 20px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.blog-item-timestamp {\r\n  font-family: $primary-font;\r\n  color: $lightest-text;\r\n}\r\n\r\n.blog-item-title {\r\n  @extend %heading-text-treatment;\r\n  margin-top: 6px;\r\n  margin-bottom: 0;\r\n  font-size: 18px;\r\n}\r\n\r\n.blog-item-footer {\r\n  margin-top: 25px;\r\n\r\n  .read-more {\r\n    @extend %section-title-text-treatment;\r\n    font-size: 12px;\r\n    color: $accent-color;\r\n    text-transform: uppercase;\r\n  }\r\n}\r\n\r\n// Latest blog posts - home Page\r\n.latest-blog-posts {\r\n  border-top: 1px solid $border-color;\r\n\r\n  .section-title {\r\n    margin-bottom: 40px;\r\n  }\r\n}\r\n\r\n/* scss-combine:general/blog-post */\r\n// Thumbnail\r\n.blog-post-header {\r\n  position: relative;\r\n}\r\n\r\n.blog-post-featured-image {\r\n  position: relative;\r\n  z-index: index($elements, blog-image);\r\n  overflow: hidden;\r\n  background-color: $placeholder-image-background;\r\n  background-position: center;\r\n  background-size: cover;\r\n\r\n  &:before {\r\n    display: block;\r\n    width: 100%;\r\n    padding-top: 55%;\r\n    content: \"\";\r\n  }\r\n}\r\n\r\n// Layout\r\n.blog-post-meta,\r\n.blog-post-container {\r\n  padding: ($gutter * 3) ($gutter * 2) ($gutter * 2);\r\n\r\n  @include breakpoint(s) {\r\n    padding-right: $gutter;\r\n    padding-left: $gutter;\r\n  }\r\n\r\n  @include breakpoint(l-up) {\r\n    padding-right: $gutter * 4;\r\n    padding-left: $gutter * 4;\r\n  }\r\n}\r\n\r\n.blog-post-meta {\r\n  @include breakpoint(m) { text-align: center; }\r\n\r\n  @include breakpoint(l-up) {\r\n    position: absolute;\r\n    bottom: $gutter * 3;\r\n    left: $gutter * 4;\r\n    z-index: index($elements, blog-title);\r\n    padding: 0;\r\n  }\r\n}\r\n\r\n.blog-post-container {\r\n  @include container();\r\n}\r\n\r\n.blog-post-content {\r\n  @include breakpoint(m) { margin-bottom: $gutter * 3; }\r\n  @include breakpoint(l-up) { @include span(first 8 of 12); }\r\n}\r\n\r\n.blog-post-sidebar {\r\n  @include breakpoint(l-up) {\r\n    @include span(last 3.5 of 12);\r\n    @include pull(0.5);\r\n  }\r\n\r\n  .blog-post-sidebar-author,\r\n  .blog-post-tags,\r\n  .share-buttons-nav { margin-bottom: $gutter * 2; }\r\n}\r\n\r\n// Text styles\r\n.blog-post-header-author {\r\n  display: none;\r\n\r\n  @include breakpoint(m) {\r\n    display: block;\r\n    color: $lightest-text;\r\n  }\r\n}\r\n\r\n.blog-post-title,\r\n.blog-post-timestamp {\r\n  @include breakpoint(l-up) {\r\n    color: $white;\r\n    text-shadow: 0 2px 4px rgba($black, 0.50);\r\n  }\r\n}\r\n\r\n.blog-post-timestamp {\r\n  font-family: $primary-font;\r\n\r\n  @include breakpoint(m) { color: $lightest-text; }\r\n}\r\n\r\n.blog-post-title {\r\n  @extend %heading-text-treatment;\r\n  margin-top: 5px;\r\n  margin-bottom: 0;\r\n  font-size: 32px;\r\n}\r\n\r\n.blog-post-sidebar .share-heading,\r\n.blog-post-sidebar-heading {\r\n  display: block;\r\n  margin-bottom: 6px;\r\n  font-size: $font-size;\r\n  color: $body-color;\r\n}\r\n\r\n.blog-post-sidebar-author {\r\n  font-size: 15px;\r\n\r\n  @include breakpoint(m) { display: none; }\r\n}\r\n\r\n.blog-post-tag {\r\n  padding: 4px 8px;\r\n  color: $body-color;\r\n  background-color: $input-background-color;\r\n  border-radius: 2px;\r\n}\r\n\r\n/* scss-combine:general/rte */\r\n.rte {\r\n\r\n  // headings\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  h5 {\r\n    margin-top: 25px;\r\n    margin-bottom: 25px;\r\n  }\r\n\r\n  h1 {\r\n    margin-top: 35px;\r\n    margin-bottom: 35px;\r\n    font-size: 22px;\r\n  }\r\n\r\n  h2 { font-size: 20px; }\r\n  h3 { font-size: 15px; }\r\n  h4 { font-size: 13px; }\r\n  h5 { font-size: 11px; }\r\n\r\n  // Text\r\n  p {\r\n    line-height: 1.75;\r\n  }\r\n\r\n  blockquote {\r\n    padding-left: 18px;\r\n    margin: 0;\r\n    letter-spacing: 0.025em;\r\n    border-left: 2px solid $border-color;\r\n  }\r\n\r\n  code,\r\n  pre {\r\n    font-family: $mono-font;\r\n    background-color: $input-background-color;\r\n  }\r\n\r\n  pre { padding: 20px; }\r\n\r\n  ul,\r\n  ol {\r\n    margin-bottom: $gutter;\r\n    margin-left: $gutter * 2;\r\n\r\n    ul,\r\n    ol {\r\n      margin-bottom: 0;\r\n      margin-left: $gutter;\r\n    }\r\n\r\n    li {\r\n      padding: 0;\r\n      padding-left: 5px;\r\n      margin-bottom: 3px;\r\n\r\n      // scss-lint:disable NestingDepth\r\n      &:last-of-type { margin-bottom: 0; }\r\n    }\r\n  }\r\n\r\n  ul { list-style: disc; }\r\n}\r\n\r\n.rss-feed-item {\r\n  border-bottom: 1px solid $border-color;\r\n}\r\n\r\n/* scss-combine:general/print */\r\n@media print {\r\n  .main-menu,\r\n  .search-form,\r\n  .navigation-toggle,\r\n  .products-related,\r\n  .footer-navigation,\r\n  .footer-site-subscribe {\r\n    display: none;\r\n  }\r\n}\r\n\r\n// Products\r\n/* scss-combine:product/product-grid */\r\n.products-featured,\r\n.products-new,\r\n.products-related {\r\n  padding: $gutter * 2;\r\n\r\n  @include breakpoint(m) { padding: $gutter;}\r\n\r\n  .product-container &,\r\n  .cart-empty & {\r\n    @include container(960px);\r\n    padding-top: $gutter * 3;\r\n    padding-bottom: $gutter * 5;\r\n\r\n    @include breakpoint(l-only) {\r\n      padding-right: $gutter * 2;\r\n      padding-left: $gutter * 2;\r\n    }\r\n\r\n    @include breakpoint(xl-up) { @include container(85%) };\r\n  }\r\n\r\n  .section-title {\r\n    margin-bottom: 40px;\r\n  }\r\n}\r\n\r\n.product-grid {\r\n  @include container();\r\n}\r\n\r\n.product-item {\r\n  .product-grid & {\r\n    margin-bottom: $gutter * 2;\r\n\r\n    // Grid defaults to Small: 2 column, Medium: 3 column, Large: 4 column\r\n    @include breakpoint(s) { @include with-layout($grid-small) { @include gallery(6 of 12); } }\r\n    @include breakpoint(m-only) { @include with-layout($grid-small) { @include gallery(6 of 12); } }\r\n    @include breakpoint(l-up) { @include gallery(3 of 12); }\r\n  }\r\n\r\n  // Grid column overrides\r\n  .grid-m-2 & { @include breakpoint(m) { @include with-layout($grid-small) { @include gallery(6 of 12); } } }\r\n  .grid-l-3 & { @include breakpoint(l-up) { @include gallery(4 of 12); } }\r\n}\r\n\r\n// Sale badge\r\n.sale-badge {\r\n  padding: 2px 5px;\r\n  letter-spacing: normal;\r\n  line-height: 1.62;\r\n  color: $body-background-color;\r\n  background-color: $highlight-color;\r\n}\r\n\r\n/* scss-combine:product/product-item */\r\n.product-item-thumbnail {\r\n  position: relative;\r\n}\r\n\r\n.product-item-image {\r\n  display: block;\r\n\r\n  .aspect-default-ratio & {\r\n    background: none !important;\r\n  }\r\n\r\n  img {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n.product-item-title {\r\n  margin-top: 12px;\r\n  margin-bottom: 7px;\r\n  font-family: $primary-font;\r\n  font-size: 15px;\r\n}\r\n\r\na.product-item-button {\r\n    color: $body-color;\r\n}\r\n\r\n.product-item-price {\r\n  margin-top: 7px;\r\n  margin-bottom: 7px;\r\n  color: $accent-color;\r\n}\r\n\r\n// Product Options\r\n\r\n// Quickshop link\r\n.product-item-quickshop {\r\n  position: absolute;\r\n  bottom: $gutter;\r\n  left: 50%;\r\n  z-index: index($elements, product-item-options);\r\n  width: calc(100% - (#{$gutter} * 2));\r\n  transform: translateX(-50%);\r\n}\r\n\r\n.product-item-wishlist,\r\n.product-item-compare {\r\n  position: absolute;\r\n  top: 10px;\r\n  z-index: index($elements, product-item-options);\r\n  font-family: $primary-font;\r\n  font-weight: bold;\r\n  color: $accent-color;\r\n}\r\n\r\n\r\n// Wishlist link\r\n.product-item-wishlist {\r\n  right: $gutter;\r\n\r\n  .icon-wishlist {\r\n    width: 15px;\r\n    height: 15px;\r\n    margin-right: 5px;\r\n    vertical-align: sub;\r\n  }\r\n}\r\n\r\n// Compare form\r\n.product-item-compare {\r\n  left: $gutter;\r\n  margin-bottom: 0;\r\n\r\n  .form-label-text:before {\r\n    // scss-lint:disable ImportantRule\r\n    margin-right: 8px !important;\r\n  }\r\n}\r\n\r\n// Thumbnail options fade\r\n.product-item-quickshop,\r\n.product-item-compare,\r\n.product-item-wishlist {\r\n  @include breakpoint(m) { display: none; }\r\n\r\n  @include breakpoint(l-up) {\r\n    opacity: 0;\r\n    transition: opacity 0.25s $ease-out-quad;\r\n\r\n    + .product-item-image:before {\r\n      position: absolute;\r\n      position: relative;\r\n      top: 0;\r\n      left: 0;\r\n      z-index: index($elements, product-item-image);\r\n      display: block;\r\n      width: 100%;\r\n      height: 100%;\r\n      background-color: rgba($white, 0.92);\r\n      content: \"\";\r\n      opacity: 0;\r\n      transition: opacity 0.25s $ease-out-quad;\r\n    }\r\n\r\n    .product-item-thumbnail:hover & {\r\n      opacity: 1;\r\n\r\n      + .product-item-image:before { opacity: 1; }\r\n    }\r\n  }\r\n}\r\n\r\n.aspect-one-by-one,\r\n.aspect-four-by-five,\r\n.aspect-two-by-three {\r\n  .product-item-thumbnail {\r\n    position: relative;\r\n    width: 100%;\r\n    overflow: hidden;\r\n\r\n    &:before {\r\n      display: block;\r\n      width: 100%;\r\n      content: \"\";\r\n    }\r\n\r\n    .product-item-image {\r\n      position: absolute;\r\n      top: 0;\r\n      right: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      overflow: hidden;\r\n      background-position: center;\r\n      background-repeat: no-repeat;\r\n      background-size: contain;\r\n\r\n      .hide-for-ratio {\r\n        @extend %visually-hidden;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.product-item-thumbnail {\r\n  &:before {\r\n    .aspect-one-by-one & {\r\n      padding-top: 100%;\r\n    }\r\n    .aspect-four-by-five & {\r\n      padding-top: 125%;\r\n    }\r\n    .aspect-two-by-three & {\r\n      padding-top: 150%;\r\n    }\r\n  }\r\n}\r\n\r\n/* scss-combine:product/product-rating */\r\n.rating-stars,\r\n.rating-stars-readonly {\r\n  margin-right: 6px;\r\n  font-size: 0;\r\n  color: $star-color;\r\n  vertical-align: text-top;\r\n\r\n  .rating-star {\r\n    display: inline-block;\r\n    width: 14px;\r\n    height: 14px;\r\n    margin-right: 2px;\r\n\r\n    &:last-of-type {\r\n      margin-right: 0;\r\n    }\r\n  }\r\n}\r\n\r\n.ratings-count-text {\r\n  font-size: $font-size;\r\n}\r\n\r\n/* scss-combine:product/product-price */\r\n.price {\r\n  font-family: $price-font;\r\n  color: $accent-color;\r\n\r\n  .product-header & {\r\n    margin-top: 8px;\r\n    margin-bottom: 8px;\r\n    font-size: 18px;\r\n    line-height: 1.2;\r\n  }\r\n}\r\n\r\n.price-withouttax,\r\n.price-withtax,\r\n.price-saved {\r\n  display: block;\r\n  margin-bottom: 4px;\r\n\r\n  .product-item & { margin-bottom: 2px; }\r\n  &:last-of-type { margin-bottom: 5px; }\r\n}\r\n\r\n.price-rrp {\r\n  margin-right: $gutter / 2;\r\n  text-decoration: line-through;\r\n\r\n  + .price-value {\r\n    font-weight: bold;\r\n    color: $highlight-color;\r\n  }\r\n}\r\n\r\n.price-value {\r\n  margin-right: $gutter / 2;\r\n}\r\n\r\n.price-tax-label {\r\n  font-size: 12px;\r\n  color: $lightest-text;\r\n}\r\n\r\n.price-saved {\r\n  font-size: 12px;\r\n  color: $body-color;\r\n}\r\n\r\n// Hides tax labels in the product grid when the store only displays 1 price\r\n.product-item .price {\r\n  .price-tax-label {\r\n    display: none;\r\n  }\r\n\r\n  &.multiple-prices .price-tax-label {\r\n    display: inline;\r\n  }\r\n}\r\n\r\n// Call for price\r\n.product-call-for-price {\r\n  font-family: $primary-font;\r\n  font-weight: bold;\r\n  color: $lighter-text;\r\n}\r\n\r\n/* scss-combine:product/quick-shop */\r\n.quick-shop-modal {\r\n\r\n  opacity: 0;\r\n  transition: opacity 0.2s $ease-out-quad;\r\n\r\n  @include breakpoint(m-up) { max-width: calc(100% - (#{$gutter} * 4)); }\r\n  @include media($min: 1360px) { max-width: $max-width; }\r\n\r\n  // for fading in once the ajax request has completed\r\n  .modal-wrapper.loaded & { opacity: 1; }\r\n\r\n  // Overrides for some product styling\r\n  .product-details,\r\n  .product-info .form { border-bottom: 0; }\r\n\r\n  .product-main-image {\r\n    text-align: center;\r\n\r\n    .product-image { \r\n        max-height: 600px; \r\n    }\r\n  }\r\n}\r\n\r\nimg.product-image {\r\n    max-width: 50%;\r\n}\r\n\r\n// Pages\r\n/* scss-combine:pages/product */\r\n.product-details,\r\n.product-reviews {\r\n  @extend %content-padding;\r\n  @include container();\r\n  padding-top: $gutter * 3;\r\n  padding-bottom: $gutter * 5;\r\n}\r\n\r\n.product-details,\r\n.product-reviews-container {\r\n  border-bottom: 1px solid $border-color;\r\n}\r\n\r\n.product-images {\r\n  text-align: center;\r\n\r\n  @include breakpoint(l-up) {\r\n    @include with-layout($product) { @include span(first 9 of 16); }\r\n  }\r\n}\r\n\r\n.product-info {\r\n  @include breakpoint(l-up) {\r\n    @include with-layout($product) { @include span(last 7 of 16); }\r\n  }\r\n\r\n  .form {\r\n    margin-bottom: $gutter * 1.5;\r\n    border-bottom: 1px solid $border-color;\r\n  }\r\n}\r\n\r\n.product-header {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.product-title {\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  font-size: 28px;\r\n\r\n  @include breakpoint(m) {\r\n    font-size: 20px;\r\n  }\r\n}\r\n\r\n.product-brand {\r\n  display: block;\r\n  font-family: $primary-font;\r\n  color: $lighter-text;\r\n\r\n  .product-header & {\r\n    margin-bottom: 8px;\r\n    font-size: 15px;\r\n  }\r\n}\r\n\r\n// Product Detail Styles\r\n.product-detail-container {\r\n  margin-bottom: $gutter * 1.5;\r\n}\r\n\r\n.product-detail {\r\n  margin-bottom: $gutter / 3;\r\n  font-family: $primary-font;\r\n  color: $accent-color;\r\n}\r\n\r\n.product-detail-key {\r\n  font-weight: bold;\r\n  color: $section-title-color;\r\n\r\n  &:after {\r\n    content: \":\";\r\n  }\r\n}\r\n\r\n// Product Share & Wishlist\r\n.product-share-container {\r\n  @extend %clearfix;\r\n\r\n  .share-buttons-nav {\r\n    float: left;\r\n  }\r\n\r\n  .wishlist {\r\n    float: right;\r\n    font-family: $primary-font;\r\n    font-weight: bold;\r\n\r\n    .icon-wishlist {\r\n      width: 15px;\r\n      height: 15px;\r\n      margin-right: 5px;\r\n      vertical-align: text-bottom;\r\n    }\r\n  }\r\n}\r\n\r\n// Custom Fields\r\n.product-details-name,\r\n.product-details-value {\r\n  display: inline-block;\r\n  margin: 0;\r\n}\r\n\r\n.product-details-name {\r\n  margin-right: 4px;\r\n  font-weight: bold;\r\n}\r\n\r\n// Product Image Thumbnails\r\n// Todo: put a height on the image container so they don't jump up and down\r\n.product-thumbnails {\r\n  margin-top: 20px;\r\n  margin-bottom: $gutter * 2;\r\n  font-size: 0;\r\n  text-align: center;\r\n}\r\n\r\n.product-thumbnail {\r\n  position: relative;\r\n  z-index: 0;\r\n  display: inline-block;\r\n  margin-right: $gutter;\r\n  margin-bottom: $gutter;\r\n  cursor: pointer;\r\n\r\n  &:last-of-type {\r\n    margin-right: 0;\r\n  }\r\n\r\n  > img {\r\n    display: block;\r\n    max-height: 40px;\r\n  }\r\n\r\n  &.active:after {\r\n    position: absolute;\r\n    top: -4px;\r\n    right: -4px;\r\n    bottom: -4px;\r\n    left: -4px;\r\n    z-index: -1;\r\n    display: block;\r\n    border: 2px solid $check-border-color;\r\n    border-radius: 3px;\r\n    content: \"\";\r\n  }\r\n}\r\n\r\n// Product Reviews\r\n.product-reviews {\r\n  @include container(900px);\r\n\r\n  .product-review-heading {\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  > .rating-stars {\r\n    width: 100%;\r\n    text-align: center;\r\n\r\n    svg {\r\n      width: 18px;\r\n      height: 18px;\r\n    }\r\n  }\r\n}\r\n\r\n.rating-header {\r\n  @extend %clearfix;\r\n  margin-top: 40px;\r\n  margin-bottom: 10px;\r\n\r\n  .rating-summary {\r\n    @include breakpoint(s) {\r\n      margin-bottom: 25px;\r\n    }\r\n\r\n    @include breakpoint(m-up) {\r\n      float: left;\r\n    }\r\n  }\r\n\r\n  .review-link {\r\n    @include breakpoint(m-up) {\r\n      float: right;\r\n    }\r\n  }\r\n}\r\n\r\n.review-item {\r\n  padding-top: 40px;\r\n  padding-bottom: 40px;\r\n  font-size: 14px;\r\n  border-bottom: 1px solid $border-color;\r\n\r\n  &.supplementary {\r\n    display: none;\r\n\r\n    .all-reviews-visible & { display: block; }\r\n  }\r\n\r\n  &:last-of-type {\r\n    padding-bottom: 0;\r\n    border-bottom: 0;\r\n  }\r\n}\r\n\r\n.view-all-reviews-button {\r\n  margin-top: 20px;\r\n}\r\n\r\n.review-item-score {\r\n  @extend %visually-hidden;\r\n}\r\n\r\n.review-item-title {\r\n  margin-top: 5px;\r\n  margin-bottom: 5px;\r\n  font-size: 18px;\r\n}\r\n\r\n.review-item-meta {\r\n  margin-bottom: 20px;\r\n  color: $lightest-text;\r\n}\r\n\r\n// Error container\r\n.product-review-messages > .alert {\r\n  margin-bottom: $gutter * 2;\r\n}\r\n\r\n/* scss-combine:pages/collections */\r\n.collection {\r\n  position: relative;\r\n\r\n  .page-heading {\r\n    @include breakpoint(m) {\r\n      margin-top: 15px;\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    @include breakpoint(l-up) {\r\n      margin-top: 0;\r\n      margin-bottom: 50px;\r\n    }\r\n  }\r\n}\r\n\r\n.form-field-product-sort {\r\n  @include breakpoint(m) { margin-bottom: $gutter / 2; }\r\n}\r\n\r\n.sort-by,\r\n.facet-clear-all {\r\n  @include breakpoint(m) {\r\n    display: block;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n    text-align: center;\r\n  }\r\n}\r\n\r\n.sort-by {\r\n  @include breakpoint(l-up) {\r\n    position: absolute;\r\n    top: $gutter * 2;\r\n    right: $gutter * 2;\r\n    text-align: right;\r\n  }\r\n\r\n  .form-select-wrapper {\r\n    display: inline-block;\r\n    min-height: 30px;\r\n    padding: 4px ($gutter * 2) 4px ($gutter * 2 / 3);\r\n    font-size: 13px;\r\n    text-align: left;\r\n  }\r\n}\r\n\r\n.facet-clear-all {\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n  font-family: $primary-font;\r\n\r\n  @include breakpoint(m) {\r\n    max-width: 150px;\r\n    padding-top: 10px;\r\n    padding-bottom: 10px;\r\n    text-align: center;\r\n  }\r\n\r\n  @include breakpoint(l-up) {\r\n    position: absolute;\r\n    top: $gutter * 2;\r\n    left: ($gutter * 2) + 10;\r\n  }\r\n}\r\n\r\n.collection-sidebar {\r\n  @include breakpoint(m) {\r\n    @include span(12 of 12);\r\n    margin-bottom: 40px;\r\n  }\r\n\r\n  @include breakpoint(l-up) {\r\n    @include span(first 2.5 of 12);\r\n    padding-right: 10px;\r\n  }\r\n}\r\n\r\n.collection-product-listing,\r\n.category-description {\r\n  @include breakpoint(m) {\r\n    @include span(12 of 12);\r\n    margin-bottom: 40px;\r\n  }\r\n\r\n  @include breakpoint(l-up) {\r\n    @include span(12 of 12);\r\n\r\n    &.with-sidebar {\r\n      @include span(last 9.5 of 12);\r\n      padding-left: 50px;\r\n      border-left: 1px solid $border-color;\r\n    }\r\n  }\r\n}\r\n\r\n.facet-section-heading,\r\n.sidebar-section-heading,\r\n.shop-by-item,\r\n.category-nav-list-item,\r\n.facet-option > li,\r\n.form-range-facet ,\r\n.nav-list li {\r\n  @include breakpoint(l-up) {\r\n    padding-left: 10px;\r\n  }\r\n}\r\n\r\n.facet-section-heading,\r\n.sidebar-section-heading {\r\n  position: relative;\r\n  margin-top: $gutter;\r\n  margin-bottom: $gutter;\r\n  font-size: 14px;\r\n  user-select: none;\r\n\r\n  .facet-toggle {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n  }\r\n}\r\n\r\n.shop-by {\r\n  margin-bottom: 20px;\r\n  border-bottom: 1px solid $border-color;\r\n\r\n  &:last-of-type { border-bottom: 0; }\r\n}\r\n\r\n.facet-toggle {\r\n  cursor: pointer;\r\n\r\n  .icon-close-small {\r\n    // scss-lint:disable PropertySortOrder\r\n    position: absolute;\r\n    top: 50%;\r\n    right: 0;\r\n    width: 16px;\r\n    height: 16px;\r\n    vertical-align: text-bottom;\r\n    transform: translateY(-50%) rotate(0);\r\n    transition: all 0.2s $ease-out-quad;\r\n\r\n    // Increase click area size\r\n    padding: 6px;\r\n    box-sizing: content-box;\r\n  }\r\n\r\n  &.is-open .icon-close-small {\r\n    transform: translateY(-50%) rotate(45deg);\r\n  }\r\n}\r\n\r\n.facet-filter-wrapper {\r\n  display: none;\r\n\r\n  &.is-open {\r\n    display: block;\r\n  }\r\n}\r\n\r\n.facet-option,\r\n.shop-by-list,\r\n.category-nav-list,\r\n.nav-list {\r\n  display: none;\r\n  margin-bottom: 20px;\r\n\r\n  &.is-open {\r\n    display: block;\r\n  }\r\n\r\n  > li {\r\n    padding-top: 3px;\r\n    padding-bottom: 3px;\r\n    margin-bottom: 2px;\r\n\r\n    &:last-of-type { margin-bottom: 0; }\r\n\r\n    > a {\r\n      display: block;\r\n      letter-spacing: 0.025em;\r\n      color: $lighter-text;\r\n    }\r\n\r\n    &.facet-selected,\r\n    &.is-active {\r\n      background-color: $input-background-color;\r\n\r\n      @include breakpoint(m) {\r\n        padding-right: $gutter / 2;\r\n        padding-left: $gutter / 2;\r\n      }\r\n    }\r\n  }\r\n\r\n  .facet-more {\r\n    display: none;\r\n    font-size: 12px;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  .hidden + .facet-more { display: block;}\r\n}\r\n\r\n.facet-option {\r\n  display: block;\r\n}\r\n\r\n.shop-by-list,\r\n.category-nav-list { display: block; }\r\n\r\n.facet-clear {\r\n  float: right;\r\n  font-weight: normal;\r\n}\r\n\r\n.facet-filter,\r\n.category-nav {\r\n  border-bottom: 1px solid $border-color;\r\n\r\n  @include breakpoint(m) { clear: left; }\r\n\r\n  &:last-of-type { border-bottom: 0; }\r\n}\r\n\r\n.form-field-range {\r\n  @include container();\r\n\r\n  .field-min { @include span(first 6 of 12); }\r\n  .field-max { @include span(last 6 of 12); }\r\n\r\n  .form-field-control { margin-bottom: $gutter / 2; }\r\n\r\n  .form-input {\r\n    padding-right: 5px;\r\n    padding-left: 5px;\r\n    text-align: center;\r\n\r\n    &::placeholder { text-align: center;}\r\n    &::-webkit-outer-spin-button,\r\n    &::-webkit-inner-spin-button {\r\n      -webkit-appearance: none;\r\n    }\r\n  }\r\n\r\n  .button { width: 100%; }\r\n}\r\n\r\n.facet-rating {\r\n  .product-rating {\r\n    display: inline-block;\r\n    vertical-align: text-top;\r\n  }\r\n\r\n  .rating-count {\r\n    color: $lightest-text;\r\n  }\r\n\r\n  .rating-label {\r\n    display: block;\r\n  }\r\n}\r\n\r\n// Collection Empty\r\n.collection-empty {\r\n  text-align: center;\r\n\r\n  .search-again {\r\n    margin-bottom: 25px;\r\n    font-size: $font-size;\r\n    font-weight: normal;\r\n  }\r\n\r\n  .faceted-search-form {\r\n    margin-bottom: 100px;\r\n  }\r\n\r\n  .faceted-search-input,\r\n  .faceted-search-submit {\r\n    display: inline-block;\r\n    margin-bottom: $gutter;\r\n  }\r\n\r\n  .faceted-search-input {\r\n    height: 42px;\r\n    max-width: 350px;\r\n    margin-right: $gutter;\r\n  }\r\n\r\n  .faceted-search-input { width: 250px; }\r\n}\r\n\r\n.faceted-show-more-button {\r\n  display: block;\r\n  padding-left: 10px;\r\n  margin-bottom: $gutter;\r\n\r\n  .toggle-link-text-on {\r\n    display: none;\r\n  }\r\n}\r\n\r\n[data-collection-sidebar] {\r\n  .loading {\r\n    display: none;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    background: #fff;\r\n    opacity: 0.8;\r\n\r\n    &.visible {\r\n      display: block;\r\n    }\r\n  }\r\n}\r\n\r\n.category-image {\r\n  display: block;\r\n  margin: 0 auto $gutter * 2;\r\n}\r\n/* scss-combine:pages/compare */\r\n.compare-content {\r\n  @include breakpoint(m) {\r\n    overflow-x: auto;\r\n  }\r\n}\r\n\r\n.header-column {\r\n  background-color: transparent;\r\n\r\n  @include breakpoint(m) {\r\n    display: none;\r\n  }\r\n\r\n  @include breakpoint(l-up) {\r\n    max-width: 115px;\r\n  }\r\n}\r\n\r\n.compare-table {\r\n  text-align: center;\r\n  border-width: 0;\r\n\r\n  .button {\r\n    width: 100%;\r\n    max-width: 200px;\r\n    padding: 11px 0 10px;\r\n    margin: 10px 0;\r\n    font-size: 13px;\r\n  }\r\n}\r\n\r\n.compare-empty-cell { border: 0; }\r\n\r\n.compare-table-cell,\r\n.compare-table-heading,\r\n.compare-empty-cell {\r\n  padding: 18px 20px;\r\n  border-top: 1px solid $border-color;\r\n  border-left: 0;\r\n\r\n  .compare-main-row & {\r\n    padding-bottom: 0;\r\n    text-align: left;\r\n    border-top: 0;\r\n  }\r\n\r\n  .compare-quickshop-row & {\r\n    padding-top: 0;\r\n    border-top: 0;\r\n  }\r\n}\r\n\r\n.compare-table-cell {\r\n  min-width: 230px;\r\n\r\n  &:last-of-type { padding-right: 0; }\r\n}\r\n\r\n.compare-table-heading {\r\n  padding-left: 0;\r\n  text-align: left;\r\n  vertical-align: top;\r\n}\r\n\r\n.compare-remove {\r\n  display: block;\r\n}\r\n\r\n.compare-description-row,\r\n.compare-availability-row {\r\n  text-align: left;\r\n  vertical-align: top;\r\n}\r\n\r\n.compare-rating-row {\r\n  .compare-no-rating {\r\n    opacity: 0.6;\r\n  }\r\n}\r\n\r\n/* scss-combine:pages/contact */\r\n.page-message-area {\r\n  padding-bottom: $gutter;\r\n  margin-bottom: $gutter * 2;\r\n  border-bottom: 1px solid $border-color;\r\n}\r\n\r\n.contact-us {\r\n  .form { @include container; }\r\n\r\n  .form-field-text,\r\n  .form-field-email {\r\n    @include breakpoint(l-up) {\r\n      &:nth-of-type(odd) { @include span(first 6 of 12); }\r\n      &:nth-of-type(even) { @include span(last 6 of 12); }\r\n    }\r\n  }\r\n\r\n  .form-field-multiline {\r\n    clear: both;\r\n  }\r\n}\r\n\r\n// scss-lint:disable PlaceholderInExtend\r\n.button-contact-submit { @extend .button-primary; }\r\n\r\n/* scss-combine:pages/errors */\r\n.error-page {\r\n  p { text-align: center; }\r\n}\r\n\r\n.error-search-form {\r\n  margin-top: $gutter * 2;\r\n  text-align: center;\r\n\r\n  .form-input {\r\n    display: inline-block;\r\n    max-width: 350px;\r\n    height: 42px;\r\n    margin-right: $gutter;\r\n  }\r\n}\r\n\r\n/* scss-combine:pages/brands */\r\n.brands-grid {\r\n  @include container;\r\n}\r\n\r\n.brand-item {\r\n  text-align: center;\r\n\r\n  @include breakpoint(m) { @include gallery(6 of 12); }\r\n  @include breakpoint(l-up) { @include gallery(4 of 12); }\r\n}\r\n\r\n/* scss-combine:pages/sitemap */\r\n.sitemap-content {\r\n  @include container(960px);\r\n}\r\n\r\n.sitemap-group {\r\n  @include breakpoint(m-up) {\r\n    @include gallery(6 of 12);\r\n  }\r\n\r\n  @include breakpoint(l-up) {\r\n    @include gallery(4 of 12);\r\n  }\r\n\r\n  > ul {\r\n    margin-bottom: $gutter * 2;\r\n\r\n    ul {\r\n      margin-bottom: $gutter / 2;\r\n      margin-left: $gutter / 2;\r\n    }\r\n  }\r\n\r\n  li { margin: $gutter / 4 0; }\r\n\r\n  a { color: inherit; }\r\n}\r\n\r\n.sitemap-title {\r\n  @extend %section-title-text-treatment;\r\n  font-size: 20px;\r\n}\r\n\r\n\r\n// Cart\r\n/* scss-combine:cart/cart-content */\r\n.cart-container {\r\n  @extend %content-padding;\r\n  @include container();\r\n  margin-top: $gutter * 3;\r\n  margin-bottom: $gutter * 3;\r\n}\r\n\r\n.cart-header {\r\n  @extend %section-title-text-treatment;\r\n  margin-bottom: $gutter * 3;\r\n  font-size: 11px;\r\n  font-weight: normal;\r\n  color: $lightest-text;\r\n  text-transform: uppercase;\r\n\r\n  .cart-product {\r\n    @include span(first 7 of 12);\r\n  }\r\n\r\n  .cart-each,\r\n  .cart-quantity,\r\n  .cart-total {\r\n    @include breakpoint(s) { display: none; }\r\n  }\r\n}\r\n\r\n.cart-cell {\r\n  // Stops empty cells from collapsing\r\n  min-height: 1px;\r\n}\r\n\r\n.cart-image {\r\n  @include breakpoint(s) { @include span(first 3 of 12); }\r\n  @include breakpoint(m-up) { @include span(first 1.5 of 12); }\r\n}\r\n\r\n.cart-product {\r\n  @include breakpoint(s) { margin-bottom: $gutter; }\r\n  @include breakpoint(m-up) { @include span(5.5 of 12); }\r\n}\r\n\r\n.cart-product,\r\n.cart-each,\r\n.cart-total {\r\n  @include breakpoint(s) {\r\n    @include span(last 9 of 12);\r\n    padding-right: $gutter;\r\n  }\r\n}\r\n\r\n.cart-header,\r\n.cart-row {\r\n  @include container();\r\n\r\n  .cart-each,\r\n  .cart-quantity,\r\n  .cart-total {\r\n    @include breakpoint(m-up) {\r\n      @include span(1.5 of 12);\r\n      text-align: center;\r\n    }\r\n  }\r\n\r\n  .cart-remove {\r\n    @include breakpoint(m-up) { @include span(last 0.5 of 12); }\r\n  }\r\n}\r\n\r\n.cart-row {\r\n  position: relative;\r\n  margin-bottom: $gutter * 2;\r\n\r\n  &:last-of-type { margin-bottom: 0; }\r\n\r\n  .cart-product,\r\n  .cart-each,\r\n  .cart-quantity,\r\n  .cart-total {\r\n    font-size: 14px;\r\n    color: $lighter-text;\r\n  }\r\n\r\n  .cart-each,\r\n  .cart-total,\r\n  .cart-remove {\r\n    @include breakpoint(m-up) { line-height: 40px; };\r\n  }\r\n\r\n  .cart-total {\r\n    @include breakpoint(s) { margin-bottom: 20px; }\r\n  }\r\n\r\n  .cart-item-name {\r\n    @extend %heading-text-treatment;\r\n    display: block;\r\n    color: $accent-color;\r\n  }\r\n\r\n  .cart-item-options {\r\n    @extend %clearfix;\r\n    font-size: 12px;\r\n    color: $lighter-text;\r\n\r\n    dt,\r\n    dd {\r\n      display: inline-block;\r\n      float: left;\r\n    }\r\n\r\n    dt { clear: left; }\r\n    dd { margin-left: 2px; }\r\n  }\r\n\r\n  .gift-wrap {\r\n    margin-top: $gutter;\r\n    font-size: 11px;\r\n\r\n    > dt,\r\n    > dd {\r\n      display: inline-block;\r\n      margin: 0;\r\n    }\r\n\r\n    > dt { font-weight: bold; }\r\n    > dd { margin-right: 2px; }\r\n  }\r\n\r\n  .cart-price-label {\r\n    margin-right: 5px;\r\n\r\n    @include breakpoint(m-up) {\r\n      display: none;\r\n    }\r\n  }\r\n}\r\n\r\n.cart-quantity {\r\n  @include breakpoint(s) {\r\n    position: absolute;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100px;\r\n    text-align: center;\r\n  }\r\n\r\n  .form-field-quantity-control {\r\n    margin-right: 0;\r\n    margin-bottom: 4px;\r\n\r\n    @include breakpoint(s) { display: block; }\r\n  }\r\n}\r\n\r\n.cart-update-quantity {\r\n  font-size: 11px;\r\n  color: $accent-color;\r\n  cursor: pointer;\r\n}\r\n\r\n.cart-remove {\r\n  @include breakpoint(s) {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n  }\r\n\r\n  > a { color: $body-color; }\r\n\r\n  .icon-close {\r\n    width: 12px;\r\n    height: 12px;\r\n  }\r\n}\r\n\r\n// Empty Cart\r\n.cart-empty {\r\n  .cart-container {\r\n    padding-bottom: 100px;\r\n    margin-bottom: 0;\r\n    text-align: center;\r\n    border-bottom: 1px solid $border-color;\r\n  }\r\n}\r\n\r\n.empty-cart-message {\r\n  margin-bottom: $gutter * 2;\r\n  color: $lighter-text;\r\n}\r\n\r\n.price-discounted {\r\n  text-decoration: line-through;\r\n}\r\n/* scss-combine:cart/cart-footer */\r\n.cart-footer {\r\n  @include container();\r\n  padding-top: $gutter * 2;\r\n  margin-top: $gutter * 3;\r\n  font-family: $primary-font;\r\n  border-top: 1px solid $border-color;\r\n}\r\n\r\n// Continue Shopping\r\n.continue-shopping {\r\n  @include breakpoint(s) {\r\n    @include span(12 of 12);\r\n    text-align: center;\r\n  }\r\n\r\n  @include breakpoint(m-only) { @include span(first 6 of 12); }\r\n  @include breakpoint(l-up) { @include span(first 4 of 12); }\r\n  margin-top: $gutter;\r\n\r\n  > a {\r\n    font-size: 14px;\r\n    letter-spacing: 0.05em;\r\n  };\r\n}\r\n\r\n// Cart Totals\r\n.cart-totals {\r\n  @include breakpoint(s) { @include span(12 of 12); }\r\n  @include breakpoint(m-only) { @include span(last 6 of 12); }\r\n  @include breakpoint(l-up) { @include span(last 4 of 12); }\r\n  margin-bottom: $gutter * 4;\r\n}\r\n\r\n.cart-totals-rows {\r\n  margin-bottom: $gutter * 2;\r\n}\r\n\r\n.cart-totals-row {\r\n  @include container();\r\n  margin-bottom: $gutter;\r\n\r\n  &:last-of-type { margin-bottom: 0; }\r\n\r\n  .form-field { @include container(); }\r\n}\r\n\r\n.cart-totals-label {\r\n  @include span(first 8 of 12);\r\n  font-size: 14px;\r\n}\r\n\r\n.cart-totals-value {\r\n  @include span(last 4 of 12);\r\n  font-size: 15px;\r\n  color: $lighter-text;\r\n  text-align: right;\r\n}\r\n\r\n.order-total {\r\n  padding-top: $gutter;\r\n  font-weight: bold;\r\n  border-top: 1px solid $border-color;\r\n\r\n  .cart-totals-label {\r\n    font-size: 11px;\r\n    letter-spacing: 0.05em;\r\n    color: $body-color;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  .cart-totals-value {\r\n    font-size: 17px;\r\n    color: $body-color;\r\n  }\r\n}\r\n\r\n.cart-actions-row {\r\n  .button {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n.form-gift-certificate,\r\n.form-coupon-code {\r\n  @include container;\r\n\r\n  .form-input {\r\n    @include span(first 9 of 12);\r\n    height: 38px;\r\n    line-height: 38px;\r\n  }\r\n\r\n  .button {\r\n    @include span(last 3 of 12);\r\n    height: 38px;\r\n    min-width: 0;\r\n    padding: 0;\r\n    line-height: 38px;\r\n  }\r\n}\r\n\r\n.cart-coupon-codes,\r\n.cart-gift-certificates {\r\n  margin-bottom: 5px;\r\n\r\n  .cart-code-remove {\r\n    font-size: 12px;\r\n  }\r\n}\r\n\r\n.form-shipping {\r\n  display: none;\r\n  padding: $gutter;\r\n  margin-top: $gutter;\r\n  margin-bottom: $gutter;\r\n  background-color: lighten($input-background-color, 2.5%);\r\n\r\n  .visible & {\r\n    display: block;\r\n  }\r\n\r\n  .label-state { @include span(first 7 of 12); }\r\n  .label-zip { @include span(last 5 of 12); }\r\n\r\n  .form-input { background: $white; }\r\n}\r\n\r\n.shipping-toggle {\r\n  float: right;\r\n  color: $accent-color;\r\n  cursor: pointer;\r\n}\r\n\r\n.shipping-quotes {\r\n  .form-field {\r\n    padding: $gutter;\r\n    background-color: lighten($input-background-color, 2.5%);\r\n  }\r\n\r\n  .form-label-text {\r\n    .ups-shipping-badge {\r\n      vertical-align: middle;\r\n      margin-top: -2px;\r\n      margin-right: 3px;\r\n    }\r\n  }\r\n}\r\n\r\n// workaround to override funky formatting of paypal button\r\n.additional-checkout-buttons {\r\n  @extend %clearfix;\r\n  text-align: center;\r\n\r\n  // scss-lint:disable ImportantRule, QualifyingElement\r\n  p { float: none !important; }\r\n\r\n  form { clear: both;}\r\n}\r\n\r\n/* scss-combine:cart/giftwrap */\r\n.giftwrap-modal {\r\n  max-width: 600px;\r\n  opacity: 0;\r\n  transition: opacity 0.2s $ease-out-quad;\r\n\r\n  // for fading in once the ajax request has completed\r\n  .modal-wrapper.loaded & { opacity: 1; }\r\n}\r\n\r\n.giftwrap-single,\r\n.giftwrap-multiple {\r\n  .form-label {\r\n    @include container();\r\n  }\r\n\r\n  .form-field-title {\r\n    @include breakpoint(m-only) { @include span(first 3 of 12); }\r\n    @include breakpoint(l-up) { @include span(first 2 of 12); }\r\n  }\r\n\r\n  .form-field-control {\r\n    @include breakpoint(m-only) { @include span(last 9 of 12); }\r\n    @include breakpoint(l-up) { @include span(last 10 of 12); }\r\n  }\r\n\r\n  .form-select-wrapper,\r\n  .form-input {\r\n    max-width: 400px;\r\n  }\r\n}\r\n\r\n.giftwrap-form {\r\n  .form-radio + .form-label-text {\r\n    font-weight: bold;\r\n  }\r\n}\r\n\r\n.giftwrap-meta {\r\n  display: block;\r\n  margin-top: 5px;\r\n  color: $lighter-text;\r\n}\r\n\r\n/* scss-combine:cart/apple-pay-button */\r\n.apple-pay-checkout-button {\r\n  display: none;\r\n  height: 42px;\r\n  background: {\r\n    position: 50% 50%;\r\n    repeat: no-repeat;\r\n    size: 100% 60%;\r\n  }\r\n  border-radius: 3px;\r\n\r\n  @if stencilString(\"apple_pay_style\") == \"white\" {\r\n    background-color: white;\r\n    background-image: -webkit-named-image(apple-pay-logo-black);\r\n  } @else if stencilString(\"apple_pay_style\") == \"white-border\" {\r\n    background-color: white;\r\n    background-image: -webkit-named-image(apple-pay-logo-black);\r\n    border: 0.5px solid black;\r\n  } @else {\r\n    background-image: -webkit-named-image(apple-pay-logo-white);\r\n    background-color: black;\r\n  }\r\n\r\n  .additional-checkout-buttons & {\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  .apple-pay-supported & {\r\n    display: block;\r\n  }\r\n}\r\n\r\n// Modules\r\n/* scss-combine:modules/mosaic */\r\n// mosaic-item tiles are 0 indexed\r\n\r\n// mosaic layout\r\n.mosaic {\r\n  position: relative;\r\n  z-index: index($elements, mosaic);\r\n  width: 100%;\r\n  margin-top: -1px;\r\n}\r\n\r\n.mosaic-item {\r\n  position: absolute;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n}\r\n\r\n.mosaic-count-1 {\r\n  .mosaic-item-0 {\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n}\r\n\r\n@include breakpoint(s) {\r\n  .mosaic-item {\r\n    position: relative;\r\n    // scss-lint:disable ImportantRule\r\n    background-image: none !important;\r\n  }\r\n}\r\n\r\n@include breakpoint(m-only) {\r\n  .mosaic {\r\n    display: block;\r\n    padding-top: 200%;\r\n  }\r\n\r\n  // initial mosaic item is almost always displayed the same on medium screens\r\n  .mosaic-item-0 {\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 50%;\r\n  }\r\n\r\n  // layout for 1 tile\r\n  .mosaic-count-1 {\r\n    padding-top: 100%;\r\n  }\r\n\r\n  // layout for 2 tiles\r\n  .mosaic-count-2 {\r\n    .mosaic-item-1 {\r\n      bottom: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 50%;\r\n    }\r\n  }\r\n\r\n  // layout for 3 tiles\r\n  .mosaic-count-3 {\r\n    padding-top: 150%;\r\n\r\n    .mosaic-item-0 { height: 66.7%; }\r\n\r\n    .mosaic-item-1,\r\n    .mosaic-item-2 {\r\n      bottom: 0;\r\n      width: 50%;\r\n      height: 33.3%;\r\n    }\r\n\r\n    .mosaic-item-1 { left: 0; }\r\n    .mosaic-item-2 { left: 50%; }\r\n  }\r\n\r\n  // layout for 4 tiles\r\n  .mosaic-count-4 {\r\n    .mosaic-item-1,\r\n    .mosaic-item-2,\r\n    .mosaic-item-3 { height: 25%; }\r\n\r\n    .mosaic-item-1,\r\n    .mosaic-item-2 {\r\n      bottom: 0;\r\n      width: 50%;\r\n    }\r\n\r\n    .mosaic-item-1 { left: 0; }\r\n    .mosaic-item-2 { left: 50%; }\r\n\r\n    .mosaic-item-3 {\r\n      top: 50%;\r\n      left: 0;\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  // layout for 5 tiles\r\n  .mosaic-count-5 {\r\n    .mosaic-item-1,\r\n    .mosaic-item-2,\r\n    .mosaic-item-3,\r\n    .mosaic-item-4 {\r\n      width: 50%;\r\n      height: 25%;\r\n    }\r\n\r\n    .mosaic-item-1,\r\n    .mosaic-item-2 { top: 50%; }\r\n\r\n    .mosaic-item-3,\r\n    .mosaic-item-4 { bottom: 0; }\r\n\r\n    .mosaic-item-1 { left: 0; }\r\n    .mosaic-item-2 { left: 50%; }\r\n    .mosaic-item-3 { left: 0; }\r\n    .mosaic-item-4 { left: 50%; }\r\n  }\r\n}\r\n\r\n\r\n@include breakpoint(l-up) {\r\n  .mosaic {\r\n    padding-top: 50%;\r\n  }\r\n\r\n  // layout for 2 tiles\r\n  .mosaic-count-2 {\r\n    .mosaic-item-0,\r\n    .mosaic-item-1 {\r\n      top: 0;\r\n      width: 50%;\r\n      height: 100%;\r\n    }\r\n\r\n    .mosaic-item-0 { left: 0; }\r\n    .mosaic-item-1 { left: 50%; }\r\n  }\r\n\r\n  // layout for 3 tiles\r\n  .mosaic-count-3 {\r\n    .mosaic-item-0,\r\n    .mosaic-item-1,\r\n    .mosaic-item-2 { width: 50%; }\r\n\r\n    .mosaic-item-0 {\r\n      top: 0;\r\n      left: 0;\r\n      height: 100%;\r\n    }\r\n\r\n    .mosaic-item-1,\r\n    .mosaic-item-2 {\r\n      left: 50%;\r\n      height: 50%;\r\n    }\r\n\r\n    .mosaic-item-1 { top: 0; }\r\n    .mosaic-item-2 { top: 50%; }\r\n  }\r\n\r\n  // layout for 4 tiles\r\n  .mosaic-count-4 {\r\n    .mosaic-item-0 {\r\n      top: 0;\r\n      left: 0;\r\n      width: 50%;\r\n      height: 100%;\r\n    }\r\n\r\n    .mosaic-item-1,\r\n    .mosaic-item-2,\r\n    .mosaic-item-3 { height: 50%; }\r\n\r\n    .mosaic-item-1,\r\n    .mosaic-item-2 {\r\n      top: 0;\r\n      width: 25%;\r\n      height: 50%;\r\n    }\r\n\r\n    .mosaic-item-1 { left: 50%; }\r\n    .mosaic-item-2 { left: 75%; }\r\n\r\n    .mosaic-item-3 {\r\n      top: 50%;\r\n      left: 50%;\r\n      width: 50%;\r\n    }\r\n  }\r\n\r\n  // layout for 5 tiles\r\n  .mosaic-count-5 {\r\n    .mosaic-item-0 {\r\n      top: 0;\r\n      left: 0;\r\n      width: 50%;\r\n      height: 100%;\r\n    }\r\n\r\n    .mosaic-item-1,\r\n    .mosaic-item-2,\r\n    .mosaic-item-3,\r\n    .mosaic-item-4 {\r\n      width: 25%;\r\n      height: 50%;\r\n    }\r\n\r\n    .mosaic-item-1,\r\n    .mosaic-item-2 { top: 0; }\r\n\r\n    .mosaic-item-3,\r\n    .mosaic-item-4 { top: 50%; }\r\n\r\n    .mosaic-item-1 { left: 50%; }\r\n    .mosaic-item-2 { left: 75%; }\r\n    .mosaic-item-3 { left: 50%; }\r\n    .mosaic-item-4 { left: 75%; }\r\n  }\r\n}\r\n\r\n// Mosaic item text\r\n\r\n.mosaic-item-heading,\r\n.mosaic-item-caption {\r\n  color: $mosaic-text-color;\r\n}\r\n\r\n.mosaic-button {\r\n  color: $mosaic-button-text;\r\n  background-color: $mosaic-button-background;\r\n  border-color: $mosaic-button-background;\r\n}\r\n\r\n.mosaic-item-info {\r\n  position: absolute;\r\n  top: 50%;\r\n  right: $gutter * 2;\r\n  left: $gutter * 2;\r\n  text-align: center;\r\n  transform: translateY(-50%);\r\n\r\n  .mosaic-item-heading {\r\n    margin-top: 0;\r\n    margin-bottom: 10px;\r\n    font-size: 30px;\r\n  }\r\n\r\n  .mosaic-item-caption {\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    font-size: 20px;\r\n    @include breakpoint(l-up) { font-size: 15px; }\r\n  }\r\n}\r\n\r\n.mosaic-item-link {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n// Mosaic Image -- Only for Small screens\r\n\r\n.mosaic-item-image {\r\n  display: block;\r\n  width: 100%;\r\n  max-width: none;\r\n\r\n  @include breakpoint(m-up) {\r\n    display: none;\r\n  }\r\n}\r\n\r\n/* scss-combine:modules/account */\r\n// scss-lint:disable PlaceholderInExtend\r\n// Variables\r\n\r\n$account-light-color: $input-background-color;\r\n$account-accent-color: $accent-color;\r\n$account-border-color: $border-color;\r\n$account-gutter: $gutter;\r\n$account-font-size: $font-size;\r\n\r\n/* scss-combine:../core/account */\r\n// Default Variables\r\n\r\n$account-link-color: #888 !default;\r\n$account-light-color: #fff !default;\r\n$account-accent-color: #5dc5e3 !default;\r\n$account-border-color: #e4e4e4 !default;\r\n$account-gutter: 30px !default;\r\n$account-font-size: 15px !default;\r\n$account-border-radius: 0 !default;\r\n$account-text-color: #5f5f5f !default;\r\n\r\n$account-card-background-color: #f5f5f5 !default;\r\n\r\n$giftcard-nav-use-default-styles: true !default;\r\n\r\n$account-breakpoint-x-small: 400px !default; // the account table columns change to full-width\r\n$account-breakpoint-small: 620px !default; // menu changes from full-width to column\r\n$account-breakpoint-medium: 900px !default; // menu changes from 35% to 25% width\r\n\r\n// Internal Variables\r\n\r\n$account-font-size-heading: $account-font-size + 2 !default;\r\n\r\n$account-text-color-light: lighten($account-text-color,20%) !default;\r\n\r\n$account-gutter-inner: $account-gutter / 2 !default;\r\n\r\n$auth-gutter: $account-gutter !default;\r\n$auth-font-size: $account-font-size !default;\r\n\r\n// Imports\r\n\r\n/* scss-combine:account/components/layout */\r\n.account-wrapper {\r\n  @extend %clearfix;\r\n  font-size: $account-font-size;\r\n}\r\n\r\n.account-nav,\r\n.account-body {\r\n  vertical-align: top;\r\n}\r\n\r\n.account-body {\r\n  @media screen and (min-width: $account-breakpoint-small) {\r\n    float: right;\r\n    width: 65%;\r\n    padding-left: $account-gutter-inner;\r\n  }\r\n\r\n  @media screen and (min-width: $account-breakpoint-medium) {\r\n    width: 75%;\r\n  }\r\n\r\n  > :first-child {\r\n    margin-top: 0;\r\n  }\r\n\r\n  .account-nav-hidden & {\r\n    float: none;\r\n    width: 100%;\r\n    padding-left: 0;\r\n    margin-left: 0;\r\n  }\r\n}\r\n\r\n.account-nav {\r\n  @media screen and (max-width: $account-breakpoint-small - 1) {\r\n    margin-bottom: $account-gutter;\r\n  }\r\n\r\n  @media screen and (min-width: $account-breakpoint-small) {\r\n    float: left;\r\n    width: 35%;\r\n    padding-right: $account-gutter-inner;\r\n  }\r\n\r\n  @media screen and (min-width: $account-breakpoint-medium) {\r\n    width: 25%;\r\n  }\r\n}\r\n\r\n/* scss-combine:account/components/forms */\r\n.account-wrapper {\r\n  .form-label-text {\r\n    display: inline-block;\r\n    width: 100%;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  .form-field-checkbox,\r\n  .form-field-radio {\r\n    .form-label-text { width: auto; }\r\n  }\r\n\r\n  .form-field {\r\n    margin-bottom: $account-gutter-inner;\r\n  }\r\n\r\n  .form-input {\r\n    width: 100%;\r\n\r\n    &.account-form-half {\r\n      width: 50%;\r\n    }\r\n  }\r\n\r\n  .form-actions {\r\n    clear: both;\r\n  }\r\n}\r\n\r\n.account-form-column-container {\r\n  @extend %clearfix;\r\n\r\n  .form-field {\r\n    @media screen and (min-width: 480px) {\r\n      float: left;\r\n      width: 50%;\r\n\r\n      &:nth-child(odd) { padding-right: $account-gutter-inner; }\r\n      &:nth-child(even) { padding-left: $account-gutter-inner; }\r\n    }\r\n  }\r\n}\r\n\r\n/* scss-combine:account/components/table */\r\n.account-wrapper {\r\n  table {\r\n    width: 100%;\r\n    margin-top: $account-gutter-inner;\r\n    margin-bottom: $account-gutter-inner;\r\n  }\r\n\r\n  td,\r\n  th {\r\n    padding: $account-gutter-inner;\r\n  }\r\n}\r\n\r\n.account-table-tight {\r\n  th,\r\n  td {\r\n    padding: 10px 0;\r\n    border-bottom: 1px solid $account-border-color;\r\n  }\r\n}\r\n\r\n/* scss-combine:account/components/list */\r\n// Layout\r\n// Each list item has 3 sections: thumbnail, body, and badge.\r\n\r\n.account-items {\r\n  margin-bottom: $account-gutter;\r\n}\r\n\r\n.account-item {\r\n  position: relative;\r\n  display: table;\r\n  width: 100%;\r\n  border-bottom: 1px solid $account-border-color;\r\n\r\n  &:first-of-type {\r\n    border-top: 1px solid $account-border-color;\r\n  }\r\n}\r\n\r\n.account-item-thumbnail,\r\n.account-item-body,\r\n.account-item-badge,\r\n.account-item-actions {\r\n  padding-top: $account-gutter-inner;\r\n  padding-bottom: $account-gutter-inner;\r\n\r\n  @media screen and (min-width: $account-breakpoint-x-small) {\r\n    display: table-cell;\r\n    vertical-align: top;\r\n  }\r\n}\r\n\r\n// Link\r\n// Makes the entire item clickable\r\n\r\n.account-item-link {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: 100;\r\n}\r\n\r\n// Thumbnail\r\n\r\n.account-item-thumbnail {\r\n  min-width: 100px;\r\n\r\n  img {\r\n    height: auto;\r\n    max-width: 100px;\r\n  }\r\n}\r\n\r\n// Body\r\n\r\n.account-item-body {\r\n  width: 100%;\r\n\r\n  @media screen and (min-width: $account-breakpoint-x-small) {\r\n    .account-item-thumbnail + & {\r\n      padding-left: $account-gutter-inner;\r\n    }\r\n  }\r\n}\r\n\r\n.account-item-title {\r\n  margin-top: 3px;\r\n  font-size: $account-font-size;\r\n\r\n  a {\r\n    color: inherit;\r\n  }\r\n}\r\n\r\n.account-item-title-large {\r\n  font-size: $account-font-size * 1.2;\r\n}\r\n\r\n.account-item-description {\r\n  margin-top: 0;\r\n  margin-bottom: 5px;\r\n  color: $account-text-color;\r\n}\r\n\r\n.account-item-details {\r\n  @extend %clearfix;\r\n  font-size: $account-font-size;\r\n  color: $account-text-color;\r\n}\r\n\r\n.account-item-detail {\r\n  float: left;\r\n  margin-top: $account-gutter-inner;\r\n  margin-right: $account-gutter;\r\n}\r\n\r\n//scss-lint:disable VariableForProperty\r\n.account-item-detail-title {\r\n  display: block;\r\n  margin-top: 0;\r\n  margin-bottom: 3px;\r\n  font-size: 12px;\r\n  font-weight: normal;\r\n  letter-spacing: 1px;\r\n  color: mix($account-light-color,$account-text-color,60%);\r\n  text-transform: uppercase;\r\n}\r\n\r\n// Badge\r\n\r\n.account-item-badge,\r\n.account-item-actions {\r\n  white-space: nowrap;\r\n}\r\n\r\n/* scss-combine:account/components/header */\r\n.account-header {\r\n  display: table;\r\n  width: 100%;\r\n  margin-bottom: $account-gutter-inner;\r\n}\r\n\r\n.account-heading,\r\n.account-toolbar {\r\n  display: table-cell;\r\n  vertical-align: baseline;\r\n}\r\n\r\n.account-toolbar {\r\n  text-align: right;\r\n\r\n  * {\r\n    display: inline;\r\n  }\r\n}\r\n\r\n.account-tool {\r\n  position: relative;\r\n  z-index: 10;\r\n  display: inline-block;\r\n  padding: 0;\r\n  background: transparent;\r\n  margin-left: 10px;\r\n  cursor: pointer;\r\n  color: inherit;\r\n  border: 0;\r\n\r\n  &:hover { color: $account-link-color; }\r\n\r\n  &:focus { outline: 0; }\r\n}\r\n\r\n/* scss-combine:account/components/navigation */\r\n.account-nav-list {\r\n  padding: 0;\r\n  margin-bottom: $account-gutter-inner;\r\n  list-style: none;\r\n  border: 1px solid $account-border-color;\r\n  border-radius: $account-border-radius;\r\n}\r\n\r\n.account-nav-item {\r\n  color: $account-link-color;\r\n  border-top: 1px solid $account-border-color;\r\n\r\n  &:first-child {\r\n    border-top: 0;\r\n  }\r\n\r\n  &.is-active {\r\n    color: $account-accent-color;\r\n    border-left: 3px solid $account-accent-color;\r\n  }\r\n}\r\n\r\n.account-nav-link {\r\n  display: block;\r\n  padding: 15px;\r\n  color: inherit;\r\n}\r\n\r\n.account-nav-badge {\r\n  float: right;\r\n}\r\n\r\n/* scss-combine:account/components/pagination */\r\n.account-wrapper .pagination {\r\n  margin-top: $account-gutter-inner;\r\n}\r\n\r\n/* scss-combine:account/components/card */\r\n%account-card-style {\r\n  background: $account-card-background-color;\r\n\r\n  .form-input {\r\n    background-color: $account-light-color;\r\n  }\r\n}\r\n\r\n.account-card {\r\n  @extend %account-card-style;\r\n  padding: $account-gutter-inner;\r\n  margin: $account-gutter-inner 0;\r\n  border-radius: $account-border-radius;\r\n}\r\n\r\n/* scss-combine:account/components/toggle */\r\n// Set the initial toggle state to hidden\r\n.account-toggle-hidden {\r\n  display: none;\r\n}\r\n\r\n/* scss-combine:account/components/status */\r\n// Status\r\n// A label used to mark the status of an item\r\n\r\n.account-status {\r\n  padding: 6px 10px 5px;\r\n  margin: 0;\r\n  font-size: 12px;\r\n  font-weight: normal;\r\n  line-height: 1;\r\n  letter-spacing: 1px;\r\n  color: $account-light-color;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  background: #8e8e8e; // TODO: Colors for each status\r\n}\r\n\r\n/* scss-combine:account/components/shipments */\r\n// Shipments\r\n// A list of shipments made for an order. Shown on the Order Details page.\r\n\r\n.account-shipments {\r\n  margin-bottom: $account-gutter;\r\n}\r\n\r\n.account-shipments-table {\r\n  th,\r\n  td {\r\n    padding: 10px 0;\r\n    text-align: left;\r\n  }\r\n\r\n  th {\r\n    padding: $account-gutter-inner 0 0;\r\n    border-top: 1px solid $account-border-color;\r\n  }\r\n\r\n  // Override default margins\r\n  .account-wrapper & {\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n  }\r\n}\r\n\r\n\r\n/* scss-combine:account/pages/address */\r\n// Address List\r\n\r\n.account-page-add-address {\r\n  .account-content {\r\n    padding-top: $account-gutter-inner;\r\n    border-top: 1px solid $account-border-color;\r\n  }\r\n}\r\n\r\n.account-address-detail {\r\n  display: block;\r\n}\r\n\r\n// Add Address\r\n\r\n.account-address-form {\r\n  padding-top: $account-gutter-inner;\r\n\r\n  @media screen and (min-width: $account-breakpoint-medium) {\r\n    .form-field {\r\n      float: left;\r\n      width: 50%;\r\n      padding-right: $account-gutter-inner;\r\n\r\n      &:nth-of-type(2n) {\r\n        padding-right: 0;\r\n        padding-left: $account-gutter-inner;\r\n      }\r\n    }\r\n  }\r\n\r\n  .form-actions {\r\n    padding-top: $account-gutter-inner;\r\n  }\r\n}\r\n\r\n/* scss-combine:account/pages/orders-receipt */\r\n.account-page-orders-receipt .account-content {\r\n  padding-top: $account-gutter-inner;\r\n  border-top: 1px solid $account-border-color;\r\n}\r\n\r\n// Summary\r\n\r\n.account-receipt-summaries {\r\n  @extend %clearfix;\r\n}\r\n\r\n.account-receipt-summary {\r\n  float: left;\r\n  width: 33%;\r\n  padding-right: $account-gutter;\r\n}\r\n\r\n.account-receipt-summary-title {\r\n  margin-top: 5px;\r\n  margin-bottom: 10px;\r\n  font-size: $account-font-size;\r\n}\r\n\r\n.account-receipt-summary-address {\r\n  line-height: 1.5;\r\n}\r\n\r\n.account-receipt-detail {\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.account-receipt-detail-title {\r\n  color: $account-text-color-light;\r\n}\r\n\r\n// Comments\r\n\r\n.account-receipt-comments {\r\n  white-space: pre-line;\r\n}\r\n\r\n// Receipt Items (products)\r\n\r\n.account-receipt-items {\r\n  padding-top: $account-gutter-inner;\r\n}\r\n\r\n.account-receipt-download {\r\n  margin: 10px 0;\r\n}\r\n\r\n// Totals\r\n\r\n.account-receipt-totals {\r\n  display: table;\r\n  width: 50%;\r\n  margin-left: 50%;\r\n}\r\n\r\n.account-receipt-total {\r\n  display: table-row;\r\n  margin-bottom: $account-gutter-inner;\r\n}\r\n\r\n.account-receipt-total-title,\r\n.account-receipt-total-value {\r\n  display: table-cell;\r\n  padding-top: $account-gutter-inner;\r\n  padding-bottom: $account-gutter-inner;\r\n  border-top: 1px solid $account-border-color;\r\n\r\n  .account-receipt-total:first-of-type & {\r\n    border-top: 0;\r\n  }\r\n}\r\n\r\n.account-receipt-total-title {\r\n  font-weight: normal;\r\n  letter-spacing: 1px;\r\n  color: $account-text-color-light;\r\n}\r\n\r\n.account-receipt-total-value {\r\n  text-align: right;\r\n}\r\n\r\n/* scss-combine:account/pages/recent-items */\r\n\r\n/* scss-combine:account/pages/returns */\r\n// Return form\r\n\r\n.account-return-table {\r\n  th {\r\n    text-align: left;\r\n\r\n    &:last-of-type {\r\n      text-align: right;\r\n    }\r\n  }\r\n\r\n  .form-field {\r\n    margin-bottom: 0;\r\n  }\r\n}\r\n\r\n.account-return-fields {\r\n  margin-top: $account-gutter;\r\n\r\n  .form-field-select {\r\n    width: 50%;\r\n  }\r\n}\r\n\r\n/* scss-combine:account/pages/wishlists */\r\n.account-wishlists {\r\n  margin-bottom: 30px;\r\n}\r\n\r\n/* scss-combine:account/pages/messages */\r\n// Listing\r\n\r\n.account-messages-table.table-clean {\r\n  border-bottom: 1px solid $account-border-color;\r\n\r\n  td {\r\n    padding-right: 0;\r\n    padding-left: 0;\r\n    vertical-align: top;\r\n    border-top: 1px solid $account-border-color;\r\n  }\r\n}\r\n\r\n.account-messages-table-date {\r\n  width: 22%;\r\n  text-align: right;\r\n}\r\n\r\n.account-message-subject {\r\n  margin-top: 0;\r\n  margin-bottom: 10px;\r\n  font-size: $account-font-size-heading;\r\n  font-weight: 500;\r\n\r\n  .account-message-is-reply &:before {\r\n    padding-right: 5px;\r\n    content: \"\\21c9\";\r\n  }\r\n\r\n  .account-message-is-read & {\r\n    color: $account-text-color-light;\r\n  }\r\n}\r\n\r\n.account-message-content {\r\n  padding-right: $account-gutter;\r\n  font-size: $account-font-size;\r\n  line-height: 1.5;\r\n  color: $account-text-color;\r\n  white-space: pre-line;\r\n\r\n  .account-message-is-read & {\r\n    color: lighten($account-text-color-light,10%);\r\n  }\r\n}\r\n\r\n.account-message-date {\r\n  color: $account-text-color-light;\r\n}\r\n\r\n// Form\r\n\r\n.account-messages-form-subject {\r\n  width: 50%;\r\n}\r\n\r\n/* scss-combine:account/pages/download */\r\n// List\r\n\r\n.account-download {\r\n  padding: $account-gutter-inner 0 0;\r\n  margin: $account-gutter-inner 0;\r\n  border-top: 1px solid $account-border-color;\r\n}\r\n\r\n.account-download-title {\r\n  margin: 0;\r\n  font-size: 1em;\r\n}\r\n\r\n.account-download-link {\r\n  color: inherit;\r\n  text-decoration: underline;\r\n}\r\n\r\n.account-download-filename {\r\n  font-size: 1.2em;\r\n}\r\n\r\n.account-download-filesize {\r\n  padding-left: 5px;\r\n  font-weight: normal;\r\n  color: $account-text-color-light;\r\n}\r\n\r\n.account-download-description {\r\n  padding-top: 10px;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.account-download-expiry {\r\n  font-size: 0.9em;\r\n  color: $account-text-color-light;\r\n}\r\n\r\n.account-download-expiry-item {\r\n  display: block;\r\n  padding-bottom: 5px;\r\n\r\n  &:last-of-type {\r\n    padding-bottom: 0;\r\n  }\r\n}\r\n\r\n// Gallery\r\n\r\n.account-downloads-gallery-image {\r\n  text-align: center;\r\n}\r\n\r\n.account-downloads-gallery-thumbs {\r\n  @extend %clearfix;\r\n  text-align: center;\r\n}\r\n\r\n.account-downloads-gallery-thumb {\r\n  display: inline-block;\r\n  width: 10%;\r\n  height: 10%;\r\n  padding: 0 2px;\r\n  vertical-align: middle;\r\n  cursor: pointer;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: auto;\r\n  }\r\n}\r\n\r\n/* scss-combine:account/pages/invoice */\r\n.account-invoice-date {\r\n  margin-top: -20px;\r\n  font-size: $account-font-size;\r\n}\r\n\r\n// Address\r\n\r\n.account-invoice-addresses {\r\n  @extend %clearfix;\r\n  margin-top: $account-gutter;\r\n  margin-bottom: $account-gutter;\r\n}\r\n\r\n.account-invoice-address {\r\n  float: left;\r\n  margin-right: $account-gutter;\r\n}\r\n\r\n.account-invoice-address-title {\r\n  margin-top: 5px;\r\n  margin-bottom: 10px;\r\n  font-size: $account-font-size;\r\n}\r\n\r\n.account-invoice-address-body {\r\n  line-height: 1.5;\r\n}\r\n\r\n// List\r\n\r\n.account-invoice-table {\r\n  .account-wrapper & {\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  th,\r\n  td {\r\n    padding-right: $account-gutter-inner;\r\n    text-align: left;\r\n    vertical-align: top;\r\n\r\n    &:nth-of-type(0n+3) {\r\n      width: 10%;\r\n    }\r\n\r\n    &:last-of-type {\r\n      width: 160px;\r\n      padding-right: 0;\r\n      text-align: right;\r\n    }\r\n  }\r\n\r\n  td:first-of-type {\r\n    width: 60px + 25px;\r\n  }\r\n}\r\n\r\n.account-invoice-item-thumbnail {\r\n  width: 60px;\r\n  height: auto;\r\n}\r\n\r\n.account-invoice-item-name {\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n}\r\n\r\n.account-invoice-total-title {\r\n  font-weight: bold;\r\n}\r\n\r\n// Totals\r\n\r\n.account-invoice-totals {\r\n  .account-wrapper & {\r\n    width: auto;\r\n    margin-top: 0;\r\n    margin-left: auto;\r\n  }\r\n\r\n  th,\r\n  td {\r\n    padding-right: $account-gutter-inner;\r\n\r\n    &:last-of-type {\r\n      width: 160px;\r\n      padding-right: 0;\r\n      text-align: right;\r\n    }\r\n  }\r\n}\r\n\r\n/* scss-combine:account/pages/settings */\r\n.account-page-settings {\r\n  .alert:first-of-type {\r\n    margin-top: 0;\r\n  }\r\n\r\n  .account-content {\r\n    padding-top: $account-gutter-inner;\r\n    border-top: 1px solid $account-border-color;\r\n  }\r\n}\r\n\r\n.account-settings-form {\r\n  @extend %clearfix;\r\n  padding-top: $account-gutter-inner;\r\n\r\n  .form-field {\r\n    float: left;\r\n    width: 50%;\r\n    padding-right: $account-gutter-inner / 2;\r\n    vertical-align: top;\r\n\r\n    &:nth-of-type(2n+0) {\r\n      padding-right: 0;\r\n      padding-left: $account-gutter-inner / 2;\r\n    }\r\n  }\r\n\r\n  .form-actions {\r\n    padding-top: $account-gutter-inner;\r\n  }\r\n}\r\n\r\n\r\n/* scss-combine:account/pages/auth-login */\r\n\r\n.account-page-login .alert {\r\n  max-width: 860px;\r\n  margin-top: 0;\r\n  margin-right: auto;\r\n  margin-bottom: $account-gutter;\r\n  margin-left: auto;\r\n}\r\n\r\n.account-login-wrapper {\r\n  max-width: 860px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n\r\n  @media screen and (min-width: $account-breakpoint-small) {\r\n    display: table;\r\n    width: 100%;\r\n    table-layout: fixed;\r\n  }\r\n}\r\n\r\n.account-page-login .account-sub-heading {\r\n  margin: 0 0 20px;\r\n}\r\n\r\n.account-login,\r\n.account-create {\r\n  @media screen and (min-width: $account-breakpoint-small) {\r\n    display: table-cell;\r\n    vertical-align: top;\r\n  }\r\n}\r\n\r\n// Login Form\r\n\r\n.account-login {\r\n  @media screen and (max-width: $account-breakpoint-small - 1) {\r\n    margin-bottom: $account-gutter;\r\n  }\r\n\r\n  @media screen and (min-width: $account-breakpoint-small) {\r\n    padding: $account-gutter-inner (30px + $account-gutter-inner) $account-gutter-inner 0;\r\n  }\r\n}\r\n\r\n.account-login-button {\r\n  margin-right: $account-gutter-inner;\r\n}\r\n\r\n// New Account\r\n\r\n.account-create {\r\n  padding: $account-gutter-inner;\r\n  background: $account-card-background-color;\r\n}\r\n\r\n.account-create-intro {\r\n  &:empty {\r\n    display: none;\r\n  }\r\n}\r\n\r\n.account-create-facts {\r\n  padding-left: 20px;\r\n  margin-bottom: 30px;\r\n  list-style: disc;\r\n\r\n  li:empty {\r\n    display: none;\r\n  }\r\n}\r\n\r\n/* scss-combine:account/pages/auth-forgot */\r\n.account-page-forgot .account-body {\r\n  width: 100%;\r\n  max-width: 600px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  text-align: center;\r\n  float: none;\r\n}\r\n\r\n.account-forgot-form {\r\n  display: table;\r\n  width: 100%;\r\n  margin-top: $account-gutter;\r\n\r\n  .form-field,\r\n  .form-actions {\r\n    display: table-cell;\r\n    text-align: left;\r\n    vertical-align: bottom;\r\n  }\r\n\r\n  .form-actions {\r\n    width: 1px;\r\n    padding-left: 10px;\r\n  }\r\n}\r\n\r\n/* scss-combine:account/pages/auth-create */\r\n.account-page-create {\r\n  .account-header {\r\n    padding-bottom: $account-gutter-inner;\r\n    margin-bottom: $account-gutter;\r\n    border-bottom: 1px solid $account-border-color;\r\n  }\r\n\r\n  .account-body {\r\n    max-width: 860px;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n  }\r\n}\r\n\r\n.account-create-form {\r\n  .g-recaptcha > div {\r\n    margin: 0 auto;\r\n  }\r\n\r\n  @media screen and (min-width: $account-breakpoint-small) {\r\n    .form-field {\r\n      float: left;\r\n      width: 50%;\r\n      padding-right: $account-gutter-inner;\r\n\r\n      &:nth-of-type(2n) {\r\n        padding-right: 0;\r\n        padding-left: $account-gutter-inner;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.account-create-details,\r\n.account-create-address {\r\n  @extend %clearfix;\r\n  padding-bottom: $account-gutter-inner;\r\n  margin-bottom: $account-gutter;\r\n  border-bottom: 1px solid $account-border-color;\r\n}\r\n\r\n.account-create-form-actions {\r\n  text-align: center;\r\n}\r\n\r\n.account-create-captcha {\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n\r\n  @media screen and (max-width: $account-breakpoint-small - 1) {\r\n    margin-bottom: $account-gutter-inner;\r\n  }\r\n\r\n  @media screen and (min-width: $account-breakpoint-small) {\r\n    margin-right: $account-gutter-inner;\r\n  }\r\n}\r\n\r\n/* scss-combine:account/pages/auth-created */\r\n.account-page-created .account-body {\r\n  float: none;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  text-align: center;\r\n\r\n  p {\r\n    margin-bottom: $account-gutter;\r\n    line-height: 1.5;\r\n  }\r\n\r\n  em {\r\n    font-family: monospace;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n    background: $account-card-background-color;\r\n  }\r\n}\r\n\r\n/* scss-combine:account/pages/auth-new-password */\r\n.account-page-new-password .account-content {\r\n  width: 100%;\r\n  max-width: 400px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n}\r\n\r\n.new-password-requirements {\r\n  margin-bottom: $account-gutter;\r\n  text-align: center;\r\n}\r\n\r\n\r\n/* scss-combine:account/pages/gift-certificate */\r\n// (optional) gift card nav\r\n\r\n@if ($giftcard-nav-use-default-styles) {\r\n  .giftcard-nav {\r\n    padding: $account-gutter * 2;\r\n    margin-bottom: $account-gutter * 2;\r\n    text-align: center;\r\n  }\r\n\r\n  .giftcard-nav-item {\r\n    display: inline-block;\r\n    margin: 0 1em;\r\n    color: $account-link-color;\r\n\r\n    &.is-active { color: $account-text-color; }\r\n  }\r\n}\r\n\r\n.giftcard-heading-container {\r\n  margin-bottom: $account-gutter * 2;\r\n  text-align: center;\r\n}\r\n\r\n\r\n// Purchase\r\n\r\n.giftcard-form-help-message {\r\n  display: block;\r\n  margin-top: 6px;\r\n}\r\n\r\n.giftcard-form-preview {\r\n  iframe { width: 100%; }\r\n}\r\n\r\n.giftcard-single-theme {\r\n  display: none;\r\n}\r\n\r\n\r\n// Check balance\r\n\r\n.giftcard-balance-container {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.form-giftcard-balance {\r\n  position: relative;\r\n\r\n  .form-field-title {\r\n    position: absolute;\r\n    left: -9999px;\r\n  }\r\n\r\n  .form-field-control {\r\n    display: block;\r\n\r\n    @media screen and (min-width: 600px + ($account-gutter-inner * 2)) {\r\n      margin-right: calc(30% + #{$account-gutter-inner});\r\n    }\r\n  }\r\n\r\n  .form-actions {\r\n    @media screen and (min-width: 600px + ($account-gutter-inner * 2)) {\r\n      position: absolute;\r\n      top: 0;\r\n      right: 0;\r\n      width: 30%;\r\n    }\r\n  }\r\n\r\n  .button {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n\r\n// Redeem\r\n\r\n.giftcard-redeem-steps {\r\n  line-height: 1.5;\r\n\r\n  li { margin-bottom: 0.75em; }\r\n}\r\n\r\n\r\n\r\n.account-heading {\r\n  @extend %heading-text-treatment;\r\n  padding-bottom: 30px;\r\n  font-size: 20px;\r\n  text-align: left;\r\n\r\n  .account-page-create &,\r\n  .account-page-forgot & {\r\n    @extend %center, %full-width;\r\n    padding: ($gutter * 3) ($gutter * 2) ($gutter * 4);\r\n  }\r\n}\r\n\r\n.account-sub-heading,\r\n.auth-sub-heading {\r\n  @extend .section-title;\r\n  margin-top: $gutter;\r\n  text-align: left;\r\n}\r\n\r\n.account-wrapper {\r\n  .account-header {\r\n    margin: 0;\r\n    border: 0;\r\n  }\r\n\r\n  .form-field {\r\n    margin-bottom: $gutter * 1.5;\r\n  }\r\n}\r\n\r\n.account-button-primary { @extend .button-primary; }\r\n.account-button-secondary { @extend .button-secondary; }\r\n.account-button-small { @extend .button-small; }\r\n\r\n.account-nav + .account-body {\r\n  @media screen and (min-width: 620px) {\r\n    padding-left: $gutter;\r\n    border-left: 1px solid $border-color;\r\n  }\r\n\r\n  @media screen and (min-width: 900px) {\r\n    padding-left: $gutter * 2;\r\n  }\r\n}\r\n\r\n// Orders Navigation\r\n.account-nav-list {\r\n  padding: 5px $gutter;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  border: 2px solid $border-color;\r\n  border-radius: 3px;\r\n\r\n  @media screen and (min-width: 620px) {\r\n    padding: 0;\r\n    border: 0;\r\n  }\r\n}\r\n\r\n.account-nav-item {\r\n  border-top: 0;\r\n\r\n  &.is-active { border-left: 0; }\r\n}\r\n\r\n.account-nav-link { padding: 10px 0; }\r\n\r\n// Account Items\r\n\r\n.account-item {\r\n  padding: $gutter 0;\r\n\r\n  &:first-of-type {\r\n    padding-top: 0;\r\n    border-top: 0;\r\n  }\r\n}\r\n\r\n.account-item-thumbnail {\r\n  padding-right: $gutter;\r\n\r\n  img { border: 1px solid $border-color; }\r\n}\r\n\r\n.account-receipt-summaries {\r\n  padding: $gutter 0;\r\n}\r\n\r\n// Recently Viewed\r\n\r\n.account-recently-viewed {\r\n  @include container;\r\n\r\n  .account-product-item {\r\n    // @extend .product-item, .grid-m-2, .grid-l-3;\r\n    margin-bottom: $gutter * 2;\r\n    @include breakpoint(m) { @include with-layout($grid-small) { @include gallery(6 of 12); } }\r\n    @include breakpoint(l-up) { @include gallery(4 of 12); }\r\n  }\r\n\r\n  .account-product-item-title {\r\n    @extend .product-item-title;\r\n  }\r\n\r\n  .account-product-item-brand {\r\n    display: block;\r\n    margin-bottom: 5px;\r\n  }\r\n}\r\n\r\n// Order Pagination\r\n.pagination { position: relative; }\r\n.pagination-count { text-align: center; }\r\n\r\n.pagination-next,\r\n.pagination-previous {\r\n  position: absolute;\r\n  bottom: 0;\r\n}\r\n\r\n.pagination-next { right: 0; }\r\n.pagination-previous { left: 0; }\r\n\r\n// Create Account Page\r\n.account-create-form {\r\n  .form-field {\r\n    @include breakpoint(s) {\r\n      width: 100%;\r\n      // scss-lint:disable ImportantRule\r\n      padding: 0 !important;\r\n    }\r\n  }\r\n}\r\n\r\n.account-create-address {\r\n  border-bottom: 0;\r\n}\r\n\r\n// Login Page\r\n.account-login-wrapper {\r\n\r\n  @include breakpoint(m) {\r\n    .account-button-secondary {\r\n      margin-top: $gutter;\r\n      margin-left: 0;\r\n    }\r\n  }\r\n\r\n  @include breakpoint(s) {\r\n    margin-top: $gutter * 3;\r\n    margin-bottom: $gutter * 2;\r\n  }\r\n\r\n  @include breakpoint(m-up) {\r\n    margin-top: 70px;\r\n    margin-bottom: 125px;\r\n  }\r\n}\r\n\r\n.account-create {\r\n  background-color: transparent;\r\n\r\n  @include breakpoint(s) {\r\n    margin-top: $gutter * 2;\r\n  }\r\n\r\n  @include breakpoint(m-up) {\r\n    padding-left: 37.5px;\r\n    border-left: 1px solid $border-color;\r\n  }\r\n}\r\n\r\n.account-login,\r\n.account-create {\r\n  @include breakpoint(s) {\r\n    display: block;\r\n  }\r\n}\r\n\r\n/* scss-combine:modules/gift-certificates */\r\n.giftcard-body {\r\n  @include container(710px);\r\n  margin-bottom: 50px;\r\n\r\n  .form-select {\r\n    height: 38px;\r\n    background-color: $white;\r\n    border: 1px solid $select-border-color;\r\n  }\r\n}\r\n\r\n\r\n// Components\r\n/* scss-combine:components/alerts */\r\n// Alerts are fixed at the top of the page\r\n\r\n.alert {\r\n  position: relative;\r\n  display: block;\r\n  width: 100%;\r\n  padding: 10px 45px;\r\n  margin-top: $gutter;\r\n  margin-bottom: $gutter;\r\n  border-radius: 3px;\r\n}\r\n\r\n.alert-dismiss {\r\n  position: absolute;\r\n  top: 50%;\r\n  right: $gutter;\r\n  font-size: 18px;\r\n  color: $white;\r\n  cursor: pointer;\r\n  transform: translateY(-50%);\r\n\r\n  &:hover {\r\n    color: darken($white, 15%);\r\n  }\r\n}\r\n\r\n.alert-message {\r\n  font-family: $primary-font;\r\n  font-size: 11px;\r\n  line-height: 1.4;\r\n  letter-spacing: 0.12em;\r\n  color: $white;\r\n  text-transform: uppercase;\r\n\r\n  &:before {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: $gutter;\r\n    display: block;\r\n    width: 18px;\r\n    height: 18px;\r\n    content: \"\";\r\n    transform: translateY(-50%);\r\n\r\n    .alert-success & { @include alert-success; }\r\n    .alert-error & { @include alert-error; }\r\n    .alert-info & { @include alert-info; }\r\n  }\r\n}\r\n\r\n.alert-success { background-color: $alert-success; }\r\n.alert-error { background-color: $alert-error; }\r\n.alert-info { background-color: $alert-info; }\r\n\r\n/* scss-combine:components/banners */\r\n.banners {\r\n  padding-right: $gutter;\r\n  padding-left: $gutter;\r\n  background-color: $banner-background-color;\r\n\r\n  @include breakpoint(l-up) {\r\n    padding-right: $gutter * 2;\r\n    padding-left: $gutter * 2;\r\n  }\r\n}\r\n\r\n.banner {\r\n  overflow: auto;\r\n  border-bottom: 1px solid rgba($white, 0.1);\r\n\r\n  &:last-of-type {\r\n    border-bottom: 0;\r\n  }\r\n\r\n  &.rte {\r\n    font-family: $primary-font;\r\n    font-size: 11px;\r\n    line-height: 1.4;\r\n    letter-spacing: 0.12em;\r\n    color: $white;\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n\r\n    a {\r\n      color: $banner-link-color;\r\n\r\n      &:hover {\r\n        @include hover($banner-link-color);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/* scss-combine:components/breadcrumbs */\r\n.breadcrumbs {\r\n  padding: 13px $gutter * 2;\r\n  text-align: center;\r\n  background-color: $breadcrumb-background-color;\r\n  border-bottom: 1px solid $border-color;\r\n\r\n  @include breakpoint(s) {\r\n    padding-right: $gutter;\r\n    padding-left: $gutter;\r\n    text-align: left;\r\n  }\r\n}\r\n\r\n.breadcrumbs-list {\r\n  font-size: 0;\r\n}\r\n\r\n.breadcrumb {\r\n  display: inline-block;\r\n  font-size: $font-size;\r\n}\r\n\r\n.breadcrumb-label {\r\n  display: block;\r\n\r\n  &.link {\r\n    color: $accent-color;\r\n\r\n    &:after {\r\n      margin-right: $gutter / 2;\r\n      margin-left: $gutter / 2;\r\n      color: $lightest-text;\r\n      content: \"/\";\r\n    }\r\n  }\r\n\r\n  &.static {\r\n    color: $lightest-text;\r\n  }\r\n}\r\n\r\n/* scss-combine:components/share-buttons */\r\n.share-heading {\r\n  @extend %section-title-text-treatment;\r\n  display: inline-block;\r\n  margin: 0 $gutter 0 0;\r\n  font-family: $primary-font;\r\n  font-size: $font-size;\r\n\r\n  &:after {\r\n    content: \":\";\r\n  }\r\n}\r\n\r\n.share-buttons {\r\n  display: inline-block;\r\n  font-size: 0;\r\n  vertical-align: text-bottom;\r\n\r\n  .social-link {\r\n    margin-right: 12px;\r\n    vertical-align: middle;\r\n\r\n    &:last-of-type {\r\n      margin-right: 0;\r\n    }\r\n\r\n    > a {\r\n      width: 15px;\r\n      height: 15px;\r\n      color: $body-color;\r\n\r\n      // scss-lint:disable NestingDepth\r\n      &:hover,\r\n      &:active {\r\n        color: $body-color;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/* scss-combine:components/cart-preview */\r\n.cart-preview-container {\r\n  position: absolute;\r\n  top: -($gutter / 2);\r\n  right: 0;\r\n  z-index: index($elements, cart-preview);\r\n  display: none;\r\n  width: 380px;\r\n  padding: $gutter ($gutter + 5);\r\n  font-family: $primary-font;\r\n  font-weight: normal;\r\n  color: $body-color;\r\n  background-color: $white;\r\n  box-shadow: 0 1px 4px 0 $shadow-color;\r\n\r\n  &.animating,\r\n  &.visible {\r\n    display: block;\r\n\r\n    @include breakpoint(s) {\r\n      display: none;\r\n    }\r\n  }\r\n}\r\n\r\n.cart-preview {\r\n  position: relative;\r\n}\r\n\r\n.cart-preview-title {\r\n  @extend %section-title-text-treatment;\r\n  padding-bottom: 15px;\r\n  margin: 0;\r\n  font-size: 16px;\r\n  border-bottom: 1px solid $border-color;\r\n}\r\n\r\n.cart-preview-close {\r\n  @extend %button-reset;\r\n  position: absolute;\r\n  top: 21px;\r\n  right: $gutter + 5;\r\n  color: $body-color;\r\n\r\n  svg {\r\n    width: 12px;\r\n    height: 12px;\r\n  }\r\n}\r\n\r\n.cart-preview-body {\r\n  padding-top: 25px;\r\n\r\n  &.scroll {\r\n    max-height: 300px;\r\n    overflow-y: auto;\r\n  }\r\n}\r\n\r\n.cart-preview-list-item {\r\n  @include container();\r\n  margin-bottom: $gutter * 2;\r\n\r\n  &:last-of-type {\r\n    margin-bottom: $gutter * 3;\r\n  }\r\n}\r\n\r\n.cart-preview-list-item-image {\r\n  @include with-layout($cart-preview) { @include span(first 2 of 12); }\r\n  a {\r\n    display: block;\r\n\r\n    img {\r\n      max-height: 65px;\r\n    }\r\n  }\r\n}\r\n\r\n.cart-preview-list-item-details {\r\n  @include with-layout($cart-preview) { @include span(7 of 12); }\r\n}\r\n\r\n.cart-preview-list-item-price {\r\n  @include with-layout($cart-preview) { @include span(last 3 of 12); }\r\n  color: $lighter-text;\r\n  text-align: right;\r\n}\r\n\r\n.cart-preview-list-item-name {\r\n  font-family: $primary-font;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  line-height: 1.4;\r\n\r\n  > a {\r\n    color: $primary-color;\r\n  }\r\n}\r\n\r\n.cart-preview-list-item-options,\r\n.cart-preview-list-item-quantity {\r\n  font-family: $secondary-font;\r\n  font-size: 12px;\r\n  color: $lighter-text;\r\n}\r\n\r\n.cart-preview-list-item-remove {\r\n  font-size: 10px;\r\n\r\n  .primary-navigation & {\r\n    color: $primary-color;\r\n  }\r\n}\r\n\r\n.cart-preview-footer {\r\n  .button {\r\n    width: 100%;\r\n    margin: 0;\r\n  }\r\n\r\n  .tertiary {\r\n    margin-bottom: $gutter / 2;\r\n  }\r\n}\r\n\r\n.cart-preview-pricing {\r\n  @extend %clearfix;\r\n  margin-bottom: 10px;\r\n  border-top: 1px solid $border-color;\r\n  border-bottom: 1px solid $border-color;\r\n}\r\n\r\n.cart-preview-discount {\r\n  @extend %clearfix;\r\n  border-top: 1px solid $border-color;\r\n}\r\n\r\n.cart-preview-total-price-label,\r\n.cart-preview-total-price {\r\n  height: 45px;\r\n  line-height: 45px;\r\n}\r\n\r\n.cart-preview-total-price-label {\r\n  float: left;\r\n  font-size: 12px;\r\n  color: $lighter-text;\r\n  text-transform: uppercase;\r\n}\r\n\r\n.cart-preview-total-price {\r\n  float: right;\r\n  font-size: 15px;\r\n  color: $body-color;\r\n}\r\n\r\n.cart-preview-empty {\r\n  padding-top: $gutter * 2;\r\n  padding-bottom: $gutter * 2;\r\n  font-size: $font-size;\r\n  font-weight: bold;\r\n  line-height: $font-size;\r\n  color: $lighter-text;\r\n  text-align: center;\r\n}\r\n\r\n/* scss-combine:components/pagination */\r\n.pagination {\r\n  @extend %clearfix;\r\n  float: left;\r\n  width: 100%;\r\n  margin-top: 100px;\r\n  margin-bottom: 65px;\r\n\r\n  .content & {\r\n    margin-top: 70px;\r\n    margin-bottom: 35px;\r\n  }\r\n}\r\n\r\n.pagination-list {\r\n  font-size: 0;\r\n  text-align: center;\r\n}\r\n\r\n.pagination-label,\r\n.pagination-item,\r\n.pagination-previous,\r\n.pagination-next {\r\n  display: inline-block;\r\n  margin-right: $gutter;\r\n  font-family: $secondary-font;\r\n  font-size: $font-size;\r\n  font-weight: bold;\r\n\r\n  &:last-of-type { margin-right: 0;}\r\n}\r\n\r\n.pagination-previous { float: left; }\r\n.pagination-next { float: right; }\r\n\r\n/* scss-combine:components/promos */\r\n.promo-message {\r\n  padding: 10px;\r\n  font-family: $primary-font;\r\n  font-size: 11px;\r\n  font-weight: bold;\r\n  line-height: 1.4;\r\n  letter-spacing: 0.12em;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  background-color: $promo-color;\r\n  border-radius: 3px;\r\n\r\n  .main-content > & {\r\n    margin-top: -1px;\r\n    border-radius: 0;\r\n  }\r\n\r\n  + .mosaic { margin-top: 0; }\r\n\r\n  .product-container & {\r\n    margin-top: -$gutter;\r\n    margin-bottom: $gutter * 2;\r\n  }\r\n\r\n  .cart-messages & {\r\n    margin-top: $gutter * 2;\r\n    margin-bottom: -$gutter;\r\n  }\r\n}\r\n\r\n.cart-messages {\r\n  padding-right: $gutter * 2;\r\n  padding-left: $gutter * 2;\r\n}\r\n\r\n/* scss-combine:components/compare-bar */\r\n.compare-tab {\r\n  @extend %clearfix;\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 50%;\r\n  z-index: index($elements, compare-tab);\r\n  display: none;\r\n  min-width: 580px;\r\n  padding: 13px 19px;\r\n  font-size: $font-size;\r\n  background: $white;\r\n  box-shadow: 0 0 4px 0 $shadow-color;\r\n\r\n  @include breakpoint(m) {\r\n    // scss-lint:disable ImportantRule\r\n    display: none !important;\r\n  }\r\n\r\n  &.animating,\r\n  &.visible {\r\n    display: block;\r\n    transform: translateY(100%);\r\n    transition: transform 0.2s ease;\r\n  }\r\n\r\n  &.visible {\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n.compare-tab-left {\r\n  float: left;\r\n  margin-right: $gutter;\r\n\r\n  .item-limit { font-weight: bold; }\r\n  .clear-compare { font-size: 12px; }\r\n}\r\n\r\n.compare-submit {\r\n  position: absolute;\r\n  right: 15px;\r\n  bottom: 13px;\r\n  height: 40px;\r\n}\r\n\r\n.compare-items-list {\r\n  margin-right: 120px;\r\n  font-size: 0;\r\n}\r\n\r\n.compare-tab-item,\r\n.compare-tab-item-empty {\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 40px;\r\n  height: 40px;\r\n  margin-right: 20px;\r\n  text-align: center;\r\n  border: 1px dashed transparent;\r\n}\r\n\r\n.compare-tab-item-empty {\r\n  border-color: $border-color;\r\n}\r\n\r\n.compare-tab-item-number {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  color: lighten($lightest-text, 25%);\r\n  transform: translate(-50%, -50%);\r\n}\r\n\r\n.compare-tab-item-remove {\r\n  position: absolute;\r\n  top: -4px;\r\n  right: -4px;\r\n  cursor: pointer;\r\n\r\n  .icon-remove {\r\n    width: 14px;\r\n    height: 14px;\r\n  }\r\n\r\n  &:hover {\r\n    color: $accent-color;\r\n  }\r\n}\r\n\r\n.compare-tab-item-image {\r\n  > img {\r\n    max-height: 40px;\r\n  }\r\n}\r\n\r\n/* scss-combine:components/loading */\r\n/*! Theme: Capacity v1.12.2 */\r\n.loading {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: 100;\r\n  display: none;\r\n  background-color: $body-background-color;\r\n  background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32' width='50' height='50' fill='#{escape-hex($navigation-color)}'%3E %3Cpath opacity='.25' d='M16 0 A16 16 0 0 0 16 32 A16 16 0 0 0 16 0 M16 4 A12 12 0 0 1 16 28 A12 12 0 0 1 16 4'/%3E %3Cpath d='M16 0 A16 16 0 0 1 32 16 L28 16 A12 12 0 0 0 16 4z'%3E %3CanimateTransform attributeName='transform' type='rotate' from='0 16 16' to='360 16 16' dur='0.8s' repeatCount='indefinite' /%3E %3C/path%3E %3C/svg%3E \");\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  opacity: 0.7;\r\n\r\n  &.visible {\r\n    display: block;\r\n  }\r\n}\r\n"}
